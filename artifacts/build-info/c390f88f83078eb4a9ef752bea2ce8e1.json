{
  "id": "c390f88f83078eb4a9ef752bea2ce8e1",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/Market.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n//pragma experimental ABIEncoderV2;\r\n\r\nimport \"./MarketFactory.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\r\nimport \"@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol\";\r\nimport \"@uniswap/lib/contracts/libraries/FixedPoint.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\n\r\n/// @title TWPM Market\r\n/// @author UniHedge\r\n/// @dev All function calls are currently implemented without side effects\r\ncontract Market {\r\n    //Safe math is reduntatn in version 0.8 and higher\r\n    //TODO: remove safemath and run tests that everything is ok\r\n    using SafeMath for uint;\r\n    //Contract for creating markets\r\n    MarketFactory public factory;\r\n    //ERC20 token used for buyng lots in this contract \r\n    IERC20 public accountingToken;\r\n    //Owner of this market\r\n    address payable public ownerMarket;\r\n    //Length of a frame\r\n    uint public period;\r\n    //Contract creation time\r\n    uint public initTimestamp; \r\n    //Token pair on Uniswap\r\n    IUniswapV2Pair public uniswapPair;\r\n    //Range of a lot\r\n    uint public dPrice;\r\n    //Fee that gets to market owner\r\n    uint public feeMarket;\r\n    //Tax on lots\r\n    uint public taxMarket;\r\n    //Protocol fee\r\n    uint public feeProtocol = 100;\r\n    //Reporting time for pair price\r\n    uint public tReporting;\r\n    //Minimal lot tax per frame\r\n    uint public minTax;\r\n    //Scalar number used for calculating precentages\r\n    uint scalar = 1e24;\r\n\r\n    enum SFrame {NULL, OPENED, CLOSED, INVALID}\r\n    struct Frame {\r\n        uint frameKey;\r\n        SFrame state;\r\n        uint priceAverage;\r\n        uint rewardFund;\r\n        uint oraclePrice0CumulativeStart;\r\n        uint oraclePrice0CumulativeEnd;\r\n        uint oracleTimestampStart;\r\n        uint oracleTimestampEnd;\r\n        uint lastBlockNum;\r\n        mapping(uint => Lot) lots;\r\n        uint[] lotKeys;\r\n    }\r\n\r\n    event FrameUpdate(uint frameKey);\r\n\r\n    mapping(uint => Frame) public frames;\r\n    uint[] public framesKeys;\r\n\r\n    enum SLot {NULL, BOUGHT, SETTLED}\r\n    struct Lot {\r\n        uint lotKey;\r\n        address lotOwner;\r\n        uint acquisitionPrice;\r\n        SLot state;\r\n    }\r\n\r\n    event LotUpdate(uint frameKey, uint lotKey);\r\n\r\n    constructor(MarketFactory _factory, IERC20 _token, IUniswapV2Pair _uniswapPair, uint _period, uint _initTimestamp, uint _taxMarket, uint _feeMarket, uint _dPrice, uint _tReporting, uint _minTax) {\r\n        accountingToken = _token;\r\n        ownerMarket = payable(msg.sender);\r\n        period = _period;\r\n        initTimestamp = _initTimestamp; \r\n        taxMarket = _taxMarket;\r\n        feeMarket = _feeMarket;\r\n        uniswapPair = _uniswapPair;\r\n        dPrice = _dPrice;\r\n        factory = _factory;\r\n        tReporting = _tReporting;\r\n        minTax = _minTax;\r\n    }\r\n\r\n    modifier minTaxCheck(uint acqPrice) {\r\n        uint tax = acqPrice * (taxMarket) / (100000);\r\n        require(tax >= minTax, \"PRICE IS TOO LOW\");\r\n        _;\r\n    }\r\n\r\n    modifier isFactoryOwner() {\r\n        require(msg.sender == factory.owner(), \"YOU ARE NOT THE FACTORY OWNER\");\r\n        _;\r\n    }\r\n\r\n    modifier hasValidPrices(uint framekey) {\r\n        if (frames[framekey].oraclePrice0CumulativeStart <= 0 || frames[framekey].oraclePrice0CumulativeEnd <= 0) {\r\n            frames[framekey].state = SFrame.INVALID;\r\n            revert(\"INVALID PRICES\");\r\n        }\r\n        if (frames[framekey].oraclePrice0CumulativeStart == frames[framekey].oraclePrice0CumulativeEnd) {\r\n            frames[framekey].state = SFrame.INVALID;\r\n            revert(\"INVALID PRICES\");\r\n        }\r\n        _;\r\n    }\r\n\r\n    /// @notice Calculate frames timestamp (beggining of frame)\r\n    /// @param timestamp In seconds\r\n    /// @return frame's timestamp (key)\r\n    function clcFrameTimestamp(uint timestamp) public view returns (uint){\r\n        if (timestamp <= initTimestamp) return initTimestamp;\r\n        return timestamp - ((timestamp - (initTimestamp)) % (period));\r\n    }\r\n\r\n    /// @notice Calculate top boundary of a lot\r\n    /// @param value Arbitary price of market's Uniswap pair\r\n    /// @return lot key (top boundary)\r\n    function clcLotInterval(uint value) public view returns (uint){\r\n        if (value <= 0) return dPrice;\r\n        return value / (dPrice) * (dPrice) + (dPrice);\r\n    }\r\n\r\n    /// @notice Calculate how many frames there are left untill given frame in input\r\n    /// @param frameKey Timestamp of an arbitary frame in the future\r\n    /// @return number of frames (whole numbers: n=0,1,2...)\r\n    function clcFramesLeft(uint frameKey) public view returns (uint){                      \r\n        return (((frameKey - (block.timestamp)) / period) + 1);\r\n    }\r\n\r\n    /// @notice Get lot struct\r\n    /// @param frameKey Frame's timestamp\r\n    /// @param lotKey lot's key \r\n    /// @return lot struct\r\n    function getLot(uint frameKey, uint lotKey) public view returns (Lot memory){                 \r\n        return frames[frameKey].lots[lotKey];\r\n    }\r\n\r\n    /// @notice Get no. of created lots in a frame \r\n    /// @param frameKey Frame's timestamp\r\n    /// @return lot count\r\n    function getLotsCount(uint frameKey) public view returns (uint){                 \r\n        return frames[frameKey].lotKeys.length;\r\n    }\r\n\r\n    /// @notice Get lotKey from index in lotKeys array\r\n    /// @param frameKey Frame's timestamp\r\n    /// @param index frameKeys array index \r\n    /// @return lotKey\r\n    function getLotKey(uint frameKey, uint index) public view returns (uint){                 \r\n        return frames[frameKey].lotKeys[index];\r\n    }\r\n\r\n    /// @notice Get frame's award amount (accumulation of different lot taxes)\r\n    /// @notice Remaining tax of a lot owner get's returned after a sale (change of ownership). So the award amount isn't for sure untill the frame get's closed.\r\n    /// @param frameKey Frame's timestamp\r\n    /// @return award amount\r\n    function getRewardAmount(uint frameKey) public view returns (uint) {                         \r\n        return frames[frameKey].rewardFund; \r\n    }\r\n\r\n    /// @notice Get number of frames\r\n    /// @return number frames\r\n    function getNumberOfFrameKeys() public view returns (uint){\r\n        return framesKeys.length;\r\n    }\r\n\r\n    /// @notice Create a frame\r\n    /// @param timestamp In second.\r\n    /// @return frameTimestamp Frame's key (timestamp that indicated the beggining of a frame).\r\n    function getOrCreateFrame(uint timestamp) public returns (uint){\r\n        //Get frame's timestamp - frame key\r\n        uint frameKey = clcFrameTimestamp(timestamp);\r\n        //Check if frame exists\r\n        if (frames[frameKey].state != SFrame.NULL) return frameKey;\r\n        require(frameKey >= clcFrameTimestamp(block.timestamp), \"CAN'T CREATE FRAME IN PAST\");\r\n        //Add frame\r\n        frames[frameKey].frameKey = frameKey;\r\n        frames[frameKey].state = SFrame.OPENED;\r\n        framesKeys.push(frameKey);\r\n        emit FrameUpdate(frameKey);\r\n        return frameKey;\r\n    }\r\n\r\n    /// @notice Create a lot\r\n    /// @param frameKey Frame's timestamp\r\n    /// @param pairPrice Price is the trading pair's price\r\n    /// @return lotKey\r\n    function getOrCreateLot(uint frameKey, uint pairPrice) internal returns(uint){\r\n        uint lotKey = clcLotInterval(pairPrice);\r\n        if (frames[frameKey].lots[lotKey].state != SLot.NULL) return lotKey;\r\n        frames[frameKey].lots[lotKey].lotKey = lotKey;\r\n        frames[frameKey].lotKeys.push(lotKey);\r\n        return lotKey;\r\n    }\r\n\r\n    function clcTax(uint frameKey, uint acquisitionPrice) public view returns (uint tax) {             \r\n        uint dFrame = (clcFrameTimestamp(block.timestamp.add(period))).sub(block.timestamp); \r\n        uint dFrameP = scalar * dFrame / (period);\r\n        //Calculate tax from the proposed acquisition price \r\n        uint numOfFramesLeft = clcFramesLeft(frameKey);\r\n        tax = acquisitionPrice * taxMarket / 100000 * numOfFramesLeft;\r\n        uint dtax = acquisitionPrice * taxMarket / 100000;\r\n        dtax = dtax * dFrameP / scalar;\r\n        tax = tax + dtax;\r\n        return tax;\r\n    }\r\n\r\n    /// @notice Calculate amout required to approve to buy a lot\r\n    /// @param timestamp Timestamp that determins which frame it is\r\n    /// @param pairPrice Value is trading pair's price (to get correct lot key) \r\n    /// @param acqPrice New sell price is required to calculate tax\r\n    /// @return cmpltAmnt complete price of a lot\r\n    function clcAmountToApprove(uint timestamp, uint pairPrice, uint acqPrice) public view returns (uint cmpltAmnt) {    \r\n        uint frameKey = clcFrameTimestamp(timestamp);         \r\n        uint lotKey = clcLotInterval(pairPrice);\r\n        uint tax = clcTax(frameKey, acqPrice);\r\n        cmpltAmnt = frames[frameKey].lots[lotKey].acquisitionPrice + tax;\r\n        return cmpltAmnt;\r\n    }\r\n\r\n    /// @notice Calculate amout required to approve to buy a lot\r\n    /// @param timestamp Frame's timestamp get's calculated from this value\r\n    /// @param pairPrice Is trading pair's price (to get correct lot key) \r\n    /// @param acqPrice New sell price is required to calculate tax\r\n    function buyLot(uint timestamp, uint pairPrice, uint acqPrice) public minTaxCheck(acqPrice) {\r\n        //Get frameKey and lotKey values\r\n        uint frameKey =  getOrCreateFrame(timestamp);                          \r\n        uint lotKey = getOrCreateLot(frameKey, pairPrice);\r\n        require(msg.sender != frames[frameKey].lots[lotKey].lotOwner, \"ADDRESS ALREADY OWNS THE PARCEL\");\r\n\r\n        uint tax = clcTax(frameKey, acqPrice);\r\n\r\n        //Approved amount has to be at leat equal to price of the Lot(with tax)\r\n        require(accountingToken.allowance(msg.sender, address(this)) >= (frames[frameKey].lots[lotKey].acquisitionPrice + tax), \"APPROVED AMOUNT IS TOO SMALL\");\r\n        //Transfer tax amount to the market contract\r\n        accountingToken.transferFrom(msg.sender, address(this), (frames[frameKey].lots[lotKey].acquisitionPrice + tax));\r\n        frames[frameKey].rewardFund = (frames[frameKey].rewardFund + tax);\r\n\r\n        //Pay the current owner + return leftover tax\r\n        if (frames[frameKey].lots[lotKey].state == SLot.BOUGHT) {\r\n            uint taxRetrn = clcTax(frameKey, frames[frameKey].lots[lotKey].acquisitionPrice);\r\n            //transfer funds\r\n            accountingToken.transfer(frames[frameKey].lots[lotKey].lotOwner, (taxRetrn + frames[frameKey].lots[lotKey].acquisitionPrice));\r\n            //update reward fund\r\n            frames[frameKey].rewardFund = frames[frameKey].rewardFund - taxRetrn;\r\n        }\r\n        else {\r\n            frames[frameKey].lots[lotKey].state = SLot.BOUGHT;\r\n        }\r\n       //Update lotKey values\r\n        frames[frameKey].lots[lotKey].lotOwner = msg.sender;\r\n        frames[frameKey].lots[lotKey].acquisitionPrice = acqPrice;\r\n\r\n        //updateFramePrices();\r\n        emit LotUpdate(frameKey, lotKey);\r\n    }\r\n\r\n    /// @notice Owner can update lot's price. Has to pay additional tax, or leftover tax gets' returned to him if the new price is lower\r\n    /// @param timestamp Frame's timestamp get's calculated from this value\r\n    /// @param pairPrice Is trading pair's price (to get correct lot key) \r\n    /// @param acqPrice New acquisition price\r\n    function updateLotPrice(uint timestamp, uint pairPrice, uint acqPrice) public minTaxCheck(acqPrice) {\r\n        uint frameKey = getOrCreateFrame(timestamp); \r\n        uint lotKey = getOrCreateLot(frameKey, pairPrice); \r\n        require(frames[frameKey].lots[lotKey].lotOwner == msg.sender, \"THIS ADDRESS IS NOT THE OWNER\");\r\n\r\n        uint taxNew = clcTax(frameKey, acqPrice);\r\n        uint taxOld = clcTax(frameKey, frames[frameKey].lots[lotKey].acquisitionPrice);\r\n\r\n        if (taxNew > taxOld) {\r\n            require(accountingToken.allowance(msg.sender, address(this)) >= (taxNew - taxOld), \"APPROVED AMOUNT IS TOO SMALL\");\r\n            //Transfer complete tax amount to the frame rewardFund\r\n            accountingToken.transferFrom(msg.sender, address(this), (taxNew - taxOld));\r\n            frames[frameKey].rewardFund = frames[frameKey].rewardFund + (taxNew- taxOld);\r\n        }\r\n        else if (taxNew < taxOld) {\r\n            accountingToken.transfer(msg.sender, taxOld - taxNew);\r\n            frames[frameKey].rewardFund = frames[frameKey].rewardFund - (taxOld - taxNew);\r\n        }\r\n        frames[frameKey].lots[lotKey].acquisitionPrice = acqPrice;\r\n\r\n        //updateFramePrices();\r\n        emit LotUpdate(frameKey, lotKey);\r\n    }\r\n\r\n    // /// @notice Update trading pair's prices in the frame\r\n    // function updateFramePrices() public {\r\n    //     uint tmp;\r\n    //     uint frameKey = clcFrameTimestamp(block.timestamp);\r\n    //     frames[frameKey].lastBlockNum = block.number;\r\n    //     //Correct price if outside settle interval\r\n    //     if (block.timestamp >= ((frameKey.add(period)).sub(tReporting)) && frames[frameKey].oraclePrice0CumulativeStart == 0) {\r\n    //         (frames[frameKey].oraclePrice0CumulativeStart, tmp, frames[frameKey].oracleTimestampStart) = UniswapV2OracleLibrary.currentCumulativePrices(address(uniswapPair));\r\n    //         emit FrameUpdate(frameKey);\r\n    //     }\r\n    //     else if (block.timestamp >= ((frameKey.add(period)).sub(tReporting))) {\r\n    //         (frames[frameKey].oraclePrice0CumulativeEnd, tmp, frames[frameKey].oracleTimestampEnd) = UniswapV2OracleLibrary.currentCumulativePrices(address(uniswapPair));\r\n    //         emit FrameUpdate(frameKey);\r\n    //     }\r\n    // }\r\n\r\n    /// @notice Update trading pair's prices in the frame\r\n    /// @param PriceCumulative Cumulative price\r\n    /// @dev For developement purposes the new price is added as an input\r\n    /// @dev Final version should use uniswap's oracles\r\n    function updateFramePrices(uint PriceCumulative) public {\r\n        uint frameKey = clcFrameTimestamp(block.timestamp);\r\n        frames[frameKey].lastBlockNum = block.number;\r\n        //Correct price if outside settle interval\r\n        if (block.timestamp >= ((frameKey + period) - tReporting) && frames[frameKey].oraclePrice0CumulativeStart == 0) {\r\n            frames[frameKey].oraclePrice0CumulativeStart = PriceCumulative;\r\n            frames[frameKey].oracleTimestampStart = block.timestamp;\r\n            emit FrameUpdate(frameKey);\r\n        }\r\n        else if (block.timestamp >= ((frameKey + period) - tReporting)) {\r\n            frames[frameKey].oraclePrice0CumulativeEnd = PriceCumulative;\r\n            frames[frameKey].oracleTimestampEnd = block.timestamp;\r\n            emit FrameUpdate(frameKey);\r\n        }\r\n    }\r\n\r\n    /// @notice Close frame\r\n    /// @param frameKey Frame's timestamp\r\n    function closeFrame(uint frameKey) public hasValidPrices(frameKey) {\r\n        require(frames[frameKey].state == SFrame.OPENED, \"FRAME NOT OPENED\");\r\n        require( (frameKey + period) <= block.timestamp, \"FRAME END TIME NOT REACHED\");\r\n        frames[frameKey].state = SFrame.CLOSED;\r\n        //UQ112x112 encoded\r\n        uint priceDiff = frames[frameKey].oraclePrice0CumulativeEnd - frames[frameKey].oraclePrice0CumulativeStart;\r\n        uint timeDiff = frames[frameKey].oracleTimestampEnd - frames[frameKey].oracleTimestampStart;\r\n        //Calculate time-weighted average price -- UQ112x112 encoded\r\n        frames[frameKey].priceAverage = uint(((FixedPoint.div(FixedPoint.uq112x112(uint224(priceDiff)), (uint112(timeDiff)))))._x);\r\n        //Decode to scalar value\r\n        frames[frameKey].priceAverage = (frames[frameKey].priceAverage >> 112) * scalar + (frames[frameKey].priceAverage << 112) / (1e49); \r\n        //Subtract fees from the reward amount \r\n        uint marketOwnerFees = frames[frameKey].rewardFund * (feeMarket) / 100000;\r\n        uint protocolOwnerFees = frames[frameKey].rewardFund * (feeProtocol) / 100000;\r\n        frames[frameKey].rewardFund = frames[frameKey].rewardFund - marketOwnerFees - protocolOwnerFees;\r\n        //Transfer fees to owners\r\n        accountingToken.transfer(ownerMarket, marketOwnerFees);\r\n        accountingToken.transfer(factory.owner(), protocolOwnerFees);\r\n        emit FrameUpdate(frameKey);\r\n    }\r\n\r\n    /// @notice Settle lot for a owner. Owner's share of the reward amount get's transfered to owner's account\r\n    /// @param frameKey Frame's timestamp\r\n    function settleLot(uint frameKey) public {  \r\n        //Check if frame is closed\r\n        require(frames[frameKey].state == SFrame.CLOSED, \"FRAME NOT CLOSED\");    \r\n        //Calcualte the winning lot key\r\n        uint lotKeyWin = (clcLotInterval(frames[frameKey].priceAverage));\r\n        //Check if the lot is already settled\r\n        require(frames[frameKey].lots[lotKeyWin].state != SLot.SETTLED, \"LOT ALREADY SETTLED\");\r\n        //Transfer winnings to last owner \r\n        accountingToken.transfer(frames[frameKey].lots[lotKeyWin].lotOwner, frames[frameKey].rewardFund);\r\n        //State is changed to settled\r\n        frames[frameKey].lots[lotKeyWin].state = SLot.SETTLED;\r\n\r\n        emit LotUpdate(frameKey, lotKeyWin);\r\n    }\r\n\r\n    /// TODO: edit the frame fund value if that money is taken \r\n    /// @notice Withdraw any amount out of the contract. Only to be used in extreme cases!\r\n    /// @param amount Amount you want to withdraw\r\n    function emptyFunds(uint amount) public isFactoryOwner {  \r\n        accountingToken.transfer(factory.owner(), amount);\r\n    }\r\n\r\n\r\n}"
      },
      "contracts/MarketFactory.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Market.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\";\r\nimport \"@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract MarketFactory {\r\n\r\n    IUniswapV2Factory public uniswapFactory;\r\n    mapping(address => Market) public markets;\r\n    address[] public marketsKeys;\r\n    address public owner;\r\n\r\n    constructor(address _uniswapFactory) {\r\n        owner = msg.sender;\r\n        uniswapFactory = IUniswapV2Factory(_uniswapFactory);\r\n    }\r\n\r\n    function addMarket(address _token, address _uniswapPair, uint _period, uint _initTimestamp, uint _tax, uint _fee, uint _dPrice, uint _tReporting, uint _minTax) external {\r\n        Market market = new Market(this, IERC20(_token), IUniswapV2Pair(_uniswapPair), _period, _initTimestamp, _tax, _fee, _dPrice, _tReporting, _minTax);\r\n        markets[address(market)] = market;\r\n        marketsKeys.push(address(market));\r\n    }\r\n\r\n    function getMarketsCount() public view returns (uint){\r\n        return marketsKeys.length;\r\n    }\r\n}\r\n"
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
        "content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n"
      },
      "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol": {
        "content": "pragma solidity >=0.5.0;\n\nimport '@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol';\nimport '@uniswap/lib/contracts/libraries/FixedPoint.sol';\n\n// library with helper methods for oracles that are concerned with computing average prices\nlibrary UniswapV2OracleLibrary {\n    using FixedPoint for *;\n\n    // helper function that returns the current block timestamp within the range of uint32, i.e. [0, 2**32 - 1]\n    function currentBlockTimestamp() internal view returns (uint32) {\n        return uint32(block.timestamp % 2 ** 32);\n    }\n\n    // produces the cumulative price using counterfactuals to save gas and avoid a call to sync.\n    function currentCumulativePrices(\n        address pair\n    ) internal view returns (uint price0Cumulative, uint price1Cumulative, uint32 blockTimestamp) {\n        blockTimestamp = currentBlockTimestamp();\n        price0Cumulative = IUniswapV2Pair(pair).price0CumulativeLast();\n        price1Cumulative = IUniswapV2Pair(pair).price1CumulativeLast();\n\n        // if time has elapsed since the last update on the pair, mock the accumulated price values\n        (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast) = IUniswapV2Pair(pair).getReserves();\n        if (blockTimestampLast != blockTimestamp) {\n            // subtraction overflow is desired\n            uint32 timeElapsed = blockTimestamp - blockTimestampLast;\n            // addition overflow is desired\n            // counterfactual\n            price0Cumulative += uint(FixedPoint.fraction(reserve1, reserve0)._x) * timeElapsed;\n            // counterfactual\n            price1Cumulative += uint(FixedPoint.fraction(reserve0, reserve1)._x) * timeElapsed;\n        }\n    }\n}\n"
      },
      "@uniswap/lib/contracts/libraries/FixedPoint.sol": {
        "content": "pragma solidity >=0.4.0;\n\n// a library for handling binary fixed point numbers (https://en.wikipedia.org/wiki/Q_(number_format))\nlibrary FixedPoint {\n    // range: [0, 2**112 - 1]\n    // resolution: 1 / 2**112\n    struct uq112x112 {\n        uint224 _x;\n    }\n\n    // range: [0, 2**144 - 1]\n    // resolution: 1 / 2**112\n    struct uq144x112 {\n        uint _x;\n    }\n\n    uint8 private constant RESOLUTION = 112;\n\n    // encode a uint112 as a UQ112x112\n    function encode(uint112 x) internal pure returns (uq112x112 memory) {\n        return uq112x112(uint224(x) << RESOLUTION);\n    }\n\n    // encodes a uint144 as a UQ144x112\n    function encode144(uint144 x) internal pure returns (uq144x112 memory) {\n        return uq144x112(uint256(x) << RESOLUTION);\n    }\n\n    // divide a UQ112x112 by a uint112, returning a UQ112x112\n    function div(uq112x112 memory self, uint112 x) internal pure returns (uq112x112 memory) {\n        require(x != 0, 'FixedPoint: DIV_BY_ZERO');\n        return uq112x112(self._x / uint224(x));\n    }\n\n    // multiply a UQ112x112 by a uint, returning a UQ144x112\n    // reverts on overflow\n    function mul(uq112x112 memory self, uint y) internal pure returns (uq144x112 memory) {\n        uint z;\n        require(y == 0 || (z = uint(self._x) * y) / y == uint(self._x), \"FixedPoint: MULTIPLICATION_OVERFLOW\");\n        return uq144x112(z);\n    }\n\n    // returns a UQ112x112 which represents the ratio of the numerator to the denominator\n    // equivalent to encode(numerator).div(denominator)\n    function fraction(uint112 numerator, uint112 denominator) internal pure returns (uq112x112 memory) {\n        require(denominator > 0, \"FixedPoint: DIV_BY_ZERO\");\n        return uq112x112((uint224(numerator) << RESOLUTION) / denominator);\n    }\n\n    // decode a UQ112x112 into a uint112 by truncating after the radix point\n    function decode(uq112x112 memory self) internal pure returns (uint112) {\n        return uint112(self._x >> RESOLUTION);\n    }\n\n    // decode a UQ144x112 into a uint144 by truncating after the radix point\n    function decode144(uq144x112 memory self) internal pure returns (uint144) {\n        return uint144(self._x >> RESOLUTION);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
        "content": "pragma solidity >=0.5.0;\n\ninterface IUniswapV2Factory {\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    function feeTo() external view returns (address);\n    function feeToSetter() external view returns (address);\n\n    function getPair(address tokenA, address tokenB) external view returns (address pair);\n    function allPairs(uint) external view returns (address pair);\n    function allPairsLength() external view returns (uint);\n\n    function createPair(address tokenA, address tokenB) external returns (address pair);\n\n    function setFeeTo(address) external;\n    function setFeeToSetter(address) external;\n}\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers"
          ],
          "": [
            "ast"
          ]
        }
      }
    }
  },
  "output": {
    "contracts": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "SafeMath": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220765b27ffbbb2106fbdf2c5b485495f3a59fc309d4715543c8391db726c4aea7064736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x5B27FFBBB2106FBDF2C5B485495F3A59FC309D4715543C DUP4 SWAP2 0xDB PUSH19 0x6C4AEA7064736F6C6343000804003300000000 ",
              "sourceMap": "398:6301:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220765b27ffbbb2106fbdf2c5b485495f3a59fc309d4715543c8391db726c4aea7064736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x5B27FFBBB2106FBDF2C5B485495F3A59FC309D4715543C DUP4 SWAP2 0xDB PUSH19 0x6C4AEA7064736F6C6343000804003300000000 ",
              "sourceMap": "398:6301:1:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@uniswap/lib/contracts/libraries/FixedPoint.sol": {
        "FixedPoint": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e873339bbd8da86ef54f60da7d626e4180b35e9ad52726a9793ae56f1c263b464736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE DUP8 CALLER CODECOPY 0xBB 0xD8 0xDA DUP7 0xEF SLOAD 0xF6 0xD 0xA7 0xD6 0x26 0xE4 XOR SIGNEXTEND CALLDATALOAD 0xE9 0xAD MSTORE PUSH19 0x6A9793AE56F1C263B464736F6C634300080400 CALLER ",
              "sourceMap": "129:2052:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200e873339bbd8da86ef54f60da7d626e4180b35e9ad52726a9793ae56f1c263b464736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE DUP8 CALLER CODECOPY 0xBB 0xD8 0xDA DUP7 0xEF SLOAD 0xF6 0xD 0xA7 0xD6 0x26 0xE4 XOR SIGNEXTEND CALLDATALOAD 0xE9 0xAD MSTORE PUSH19 0x6A9793AE56F1C263B464736F6C634300080400 CALLER ",
              "sourceMap": "129:2052:2:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
        "IUniswapV2Factory": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token0",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "token1",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "PairCreated",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "allPairs",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "allPairsLength",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "createPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeTo",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeToSetter",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "tokenA",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "tokenB",
                  "type": "address"
                }
              ],
              "name": "getPair",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "pair",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "setFeeTo",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "setFeeToSetter",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allPairs(uint256)": "1e3dd18b",
              "allPairsLength()": "574f2ba3",
              "createPair(address,address)": "c9c65396",
              "feeTo()": "017e7e58",
              "feeToSetter()": "094b7415",
              "getPair(address,address)": "e6a43905",
              "setFeeTo(address)": "f46901ed",
              "setFeeToSetter(address)": "a2e74af6"
            }
          }
        }
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
        "IUniswapV2Pair": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Burn",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "name": "Mint",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1In",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "Swap",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "indexed": false,
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                }
              ],
              "name": "Sync",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "DOMAIN_SEPARATOR",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "MINIMUM_LIQUIDITY",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "PERMIT_TYPEHASH",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "burn",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getReserves",
              "outputs": [
                {
                  "internalType": "uint112",
                  "name": "reserve0",
                  "type": "uint112"
                },
                {
                  "internalType": "uint112",
                  "name": "reserve1",
                  "type": "uint112"
                },
                {
                  "internalType": "uint32",
                  "name": "blockTimestampLast",
                  "type": "uint32"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "initialize",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "kLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "mint",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "liquidity",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "nonces",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ],
              "name": "permit",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price0CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price1CumulativeLast",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                }
              ],
              "name": "skim",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount0Out",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount1Out",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ],
              "name": "swap",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "pure",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "sync",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token0",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token1",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "DOMAIN_SEPARATOR()": "3644e515",
              "MINIMUM_LIQUIDITY()": "ba9a7a56",
              "PERMIT_TYPEHASH()": "30adf81f",
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(address)": "89afcb44",
              "decimals()": "313ce567",
              "factory()": "c45a0155",
              "getReserves()": "0902f1ac",
              "initialize(address,address)": "485cc955",
              "kLast()": "7464fc3d",
              "mint(address)": "6a627842",
              "name()": "06fdde03",
              "nonces(address)": "7ecebe00",
              "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
              "price0CumulativeLast()": "5909c0d5",
              "price1CumulativeLast()": "5a3d5493",
              "skim(address)": "bc25cf77",
              "swap(uint256,uint256,address,bytes)": "022c0d9f",
              "symbol()": "95d89b41",
              "sync()": "fff6cae9",
              "token0()": "0dfe1681",
              "token1()": "d21220a7",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          }
        }
      },
      "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol": {
        "UniswapV2OracleLibrary": {
          "abi": [],
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1c39aa391a50161e3cae883f538c862acb7d473385b498002c791cf6011664964736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xC3 SWAP11 LOG3 SWAP2 0xA5 ADD PUSH2 0xE3CA 0xE8 DUP4 CREATE2 CODESIZE 0xC8 PUSH3 0xACB7D4 PUSH20 0x385B498002C791CF6011664964736F6C63430008 DIV STOP CALLER ",
              "sourceMap": "244:1444:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e1c39aa391a50161e3cae883f538c862acb7d473385b498002c791cf6011664964736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 0xC3 SWAP11 LOG3 SWAP2 0xA5 ADD PUSH2 0xE3CA 0xE8 DUP4 CREATE2 CODESIZE 0xC8 PUSH3 0xACB7D4 PUSH20 0x385B498002C791CF6011664964736F6C63430008 DIV STOP CALLER ",
              "sourceMap": "244:1444:5:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          }
        }
      },
      "contracts/Market.sol": {
        "Market": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "contract MarketFactory",
                  "name": "_factory",
                  "type": "address"
                },
                {
                  "internalType": "contract IERC20",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "contract IUniswapV2Pair",
                  "name": "_uniswapPair",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_period",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_initTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_taxMarket",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_feeMarket",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_dPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_tReporting",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minTax",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "FrameUpdate",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "lotKey",
                  "type": "uint256"
                }
              ],
              "name": "LotUpdate",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "accountingToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acqPrice",
                  "type": "uint256"
                }
              ],
              "name": "buyLot",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acqPrice",
                  "type": "uint256"
                }
              ],
              "name": "clcAmountToApprove",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "cmpltAmnt",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "clcFrameTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "clcFramesLeft",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "clcLotInterval",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acquisitionPrice",
                  "type": "uint256"
                }
              ],
              "name": "clcTax",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "tax",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "closeFrame",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "dPrice",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "emptyFunds",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "factory",
              "outputs": [
                {
                  "internalType": "contract MarketFactory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeMarket",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "feeProtocol",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "frames",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Market.SFrame",
                  "name": "state",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "priceAverage",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "rewardFund",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oraclePrice0CumulativeStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oraclePrice0CumulativeEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oracleTimestampStart",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "oracleTimestampEnd",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lastBlockNum",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "framesKeys",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "lotKey",
                  "type": "uint256"
                }
              ],
              "name": "getLot",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "lotKey",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "lotOwner",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "acquisitionPrice",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Market.SLot",
                      "name": "state",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct Market.Lot",
                  "name": "",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "index",
                  "type": "uint256"
                }
              ],
              "name": "getLotKey",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "getLotsCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getNumberOfFrameKeys",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "getOrCreateFrame",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "getRewardAmount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "initTimestamp",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "minTax",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "ownerMarket",
              "outputs": [
                {
                  "internalType": "address payable",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "period",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "frameKey",
                  "type": "uint256"
                }
              ],
              "name": "settleLot",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "tReporting",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "taxMarket",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "uniswapPair",
              "outputs": [
                {
                  "internalType": "contract IUniswapV2Pair",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "PriceCumulative",
                  "type": "uint256"
                }
              ],
              "name": "updateFramePrices",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "pairPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "acqPrice",
                  "type": "uint256"
                }
              ],
              "name": "updateLotPrice",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:3835:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "83:93:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "93:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "108:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "102:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "102:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "93:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "164:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_IERC20_$77",
                                  "nodeType": "YulIdentifier",
                                  "src": "124:39:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "124:46:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "124:46:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "61:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "69:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "77:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "267:102:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "277:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "292:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "286:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "286:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "277:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "357:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_IUniswapV2Pair_$880",
                                  "nodeType": "YulIdentifier",
                                  "src": "308:48:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "308:55:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "308:55:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_IUniswapV2Pair_$880_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "245:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "253:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "261:5:8",
                            "type": ""
                          }
                        ],
                        "src": "182:187:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "460:102:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "470:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "485:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "479:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "479:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "470:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "550:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_contract$_MarketFactory_$2475",
                                  "nodeType": "YulIdentifier",
                                  "src": "501:48:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "501:55:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "501:55:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_contract$_MarketFactory_$2475_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "438:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "446:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "454:5:8",
                            "type": ""
                          }
                        ],
                        "src": "375:187:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "631:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "641:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "656:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "650:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "650:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "641:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "699:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "672:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "672:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "672:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "609:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "617:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "625:5:8",
                            "type": ""
                          }
                        ],
                        "src": "568:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1004:1522:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1051:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1060:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1063:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1053:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1053:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1053:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1025:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1034:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1021:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1021:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1046:3:8",
                                    "type": "",
                                    "value": "320"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1017:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1017:33:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1014:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1077:150:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1092:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1106:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1096:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1121:96:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1189:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1200:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1185:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1185:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1209:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_MarketFactory_$2475_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1131:53:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1131:86:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1121:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1237:142:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1252:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1266:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1256:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1282:87:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1341:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1352:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1337:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1337:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1361:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IERC20_$77_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1292:44:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1292:77:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1282:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1389:151:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1404:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1418:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1408:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1434:96:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1502:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1513:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1498:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1498:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1522:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_contract$_IUniswapV2Pair_$880_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1444:53:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1444:86:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1434:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1550:129:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1565:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1579:2:8",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1569:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1595:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1641:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1652:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1637:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1637:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1661:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1605:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1605:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1595:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1689:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1704:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1718:3:8",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1708:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1735:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1781:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1792:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1777:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1777:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1801:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1745:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1745:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1735:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1829:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1844:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1858:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1848:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1875:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1921:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1932:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1917:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1917:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1941:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1885:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1885:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value5",
                                      "nodeType": "YulIdentifier",
                                      "src": "1875:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1969:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1984:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1998:3:8",
                                    "type": "",
                                    "value": "192"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1988:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2015:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2061:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2072:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2057:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2057:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2081:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2025:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2025:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value6",
                                      "nodeType": "YulIdentifier",
                                      "src": "2015:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2109:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2124:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2138:3:8",
                                    "type": "",
                                    "value": "224"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2128:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2155:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2201:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2212:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2197:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2197:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2221:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2165:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2165:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value7",
                                      "nodeType": "YulIdentifier",
                                      "src": "2155:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2249:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2264:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2278:3:8",
                                    "type": "",
                                    "value": "256"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2268:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2295:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2341:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2352:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2337:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2337:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2361:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2305:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2305:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value8",
                                      "nodeType": "YulIdentifier",
                                      "src": "2295:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2389:130:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2404:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2418:3:8",
                                    "type": "",
                                    "value": "288"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2408:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2435:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2481:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2492:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2477:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2477:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2501:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "2445:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2445:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value9",
                                      "nodeType": "YulIdentifier",
                                      "src": "2435:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_contract$_MarketFactory_$2475t_contract$_IERC20_$77t_contract$_IUniswapV2Pair_$880t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "902:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "913:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "925:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "933:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "941:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "949:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "957:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "965:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "973:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "981:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "989:6:8",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "997:6:8",
                            "type": ""
                          }
                        ],
                        "src": "717:1809:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2577:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2587:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2616:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "2598:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2598:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2587:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2559:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2569:7:8",
                            "type": ""
                          }
                        ],
                        "src": "2532:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2692:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2702:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2731:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2713:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2713:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2702:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_IERC20_$77",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2674:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2684:7:8",
                            "type": ""
                          }
                        ],
                        "src": "2634:109:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2816:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2826:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2855:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2837:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2837:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2826:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_IUniswapV2Pair_$880",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2798:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2808:7:8",
                            "type": ""
                          }
                        ],
                        "src": "2749:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2940:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2950:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2979:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "2961:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2961:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "2950:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_contract$_MarketFactory_$2475",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2922:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "2932:7:8",
                            "type": ""
                          }
                        ],
                        "src": "2873:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3042:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3052:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3067:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3074:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3063:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3063:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3052:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3024:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3034:7:8",
                            "type": ""
                          }
                        ],
                        "src": "2997:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3174:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3184:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3195:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "3184:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3156:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "3166:7:8",
                            "type": ""
                          }
                        ],
                        "src": "3129:77:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3268:92:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3338:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3347:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3350:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3340:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3340:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3340:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3291:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3329:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_IERC20_$77",
                                          "nodeType": "YulIdentifier",
                                          "src": "3298:30:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3298:37:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3288:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3288:48:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3281:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3281:56:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3278:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_IERC20_$77",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3261:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3212:148:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3431:101:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3510:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3519:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3522:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3512:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3512:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3512:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3454:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3501:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_IUniswapV2Pair_$880",
                                          "nodeType": "YulIdentifier",
                                          "src": "3461:39:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3461:46:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3451:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3451:57:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3444:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3444:65:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3441:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_IUniswapV2Pair_$880",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3424:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3366:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3603:101:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3682:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3691:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3694:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3684:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3684:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3684:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3626:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3673:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_contract$_MarketFactory_$2475",
                                          "nodeType": "YulIdentifier",
                                          "src": "3633:39:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3633:46:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3623:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3623:57:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3616:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3616:65:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3613:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_contract$_MarketFactory_$2475",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3596:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3538:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3753:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3810:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3819:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3822:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3812:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3812:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3812:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3776:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3801:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "3783:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3783:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3773:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3773:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3766:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3766:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "3763:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3746:5:8",
                            "type": ""
                          }
                        ],
                        "src": "3710:122:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_contract$_IERC20_$77_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IERC20_$77(value)\n    }\n\n    function abi_decode_t_contract$_IUniswapV2Pair_$880_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_IUniswapV2Pair_$880(value)\n    }\n\n    function abi_decode_t_contract$_MarketFactory_$2475_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_MarketFactory_$2475(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_MarketFactory_$2475t_contract$_IERC20_$77t_contract$_IUniswapV2Pair_$880t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8, value9 {\n        if slt(sub(dataEnd, headStart), 320) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_MarketFactory_$2475_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$77_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_contract$_IUniswapV2Pair_$880_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 288\n\n            value9 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$77(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_IUniswapV2Pair_$880(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_contract$_MarketFactory_$2475(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_contract$_IERC20_$77(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$77(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_IUniswapV2Pair_$880(value) {\n        if iszero(eq(value, cleanup_t_contract$_IUniswapV2Pair_$880(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_contract$_MarketFactory_$2475(value) {\n        if iszero(eq(value, cleanup_t_contract$_MarketFactory_$2475(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x9 SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3D37 CODESIZE SUB DUP1 PUSH3 0x3D37 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x1EA JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x3BC JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x19F DUP2 PUSH3 0x354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1B6 DUP2 PUSH3 0x36E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1CD DUP2 PUSH3 0x388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E4 DUP2 PUSH3 0x3A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x21B DUP14 DUP3 DUP15 ADD PUSH3 0x1BC JUMP JUMPDEST SWAP11 POP POP PUSH1 0x20 PUSH3 0x22E DUP14 DUP3 DUP15 ADD PUSH3 0x18E JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 PUSH3 0x241 DUP14 DUP3 DUP15 ADD PUSH3 0x1A5 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x60 PUSH3 0x254 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x80 PUSH3 0x267 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xA0 PUSH3 0x27A DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xC0 PUSH3 0x28D DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xE0 PUSH3 0x2A0 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 PUSH3 0x2B4 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x120 PUSH3 0x2C8 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E7 DUP3 PUSH3 0x32A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2FB DUP3 PUSH3 0x2DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30F DUP3 PUSH3 0x2DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x323 DUP3 PUSH3 0x2DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x35F DUP2 PUSH3 0x2EE JUMP JUMPDEST DUP2 EQ PUSH3 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x379 DUP2 PUSH3 0x302 JUMP JUMPDEST DUP2 EQ PUSH3 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x393 DUP2 PUSH3 0x316 JUMP JUMPDEST DUP2 EQ PUSH3 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x3AD DUP2 PUSH3 0x34A JUMP JUMPDEST DUP2 EQ PUSH3 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x396B DUP1 PUSH3 0x3CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D6AE6A0 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE107FB4F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE107FB4F EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x608 JUMPI DUP1 PUSH4 0xFC950702 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x642 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x5BA JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x89DA88A3 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x532 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x7D6AE6A0 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x7E996639 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x830AB119 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x888BDBCD EQ PUSH2 0x47C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x45084775 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x6F7CB60B EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x3E0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x45084775 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x4D3EE2DC EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x346 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x2D0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xCBCFF8F EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x2A0EFD44 EQ PUSH2 0x24A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x16DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x436 PUSH2 0x196A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B4 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x1AA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH2 0x1FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x30D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x574 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x30B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1FFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C2 PUSH2 0x201C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x309C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x610 PUSH2 0x211E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x640 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x2124 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64A PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x690 DUP4 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x728 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x736 JUMPI DUP1 SWAP2 POP POP PUSH2 0x866 JUMP JUMPDEST PUSH2 0x73F TIMESTAMP PUSH2 0x1565 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP1 PUSH2 0x314D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7FC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x876 TIMESTAMP PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP NUMBER PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0x3 SLOAD DUP3 PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x94A JUMPI DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x3 SLOAD DUP3 PUSH2 0x95B SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH2 0x965 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST TIMESTAMP LT PUSH2 0x9D9 JUMPI DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP4 PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x9FD SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA4F DUP7 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA5D DUP3 DUP8 PUSH2 0x28EE JUMP JUMPDEST SWAP1 POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0F SWAP1 PUSH2 0x320D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB24 DUP4 DUP8 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP3 SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x2C7D JUMP JUMPDEST LT ISZERO PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC41 SWAP1 PUSH2 0x322D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD30 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDA7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE17 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 PUSH2 0xE53 DUP5 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0xF14 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF31 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF83 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x103A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1109 SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1171 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x128C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1283 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AD PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x12E8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1358 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1399 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1390 SWAP1 PUSH2 0x318D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1456 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1484 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1553 SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x157A JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD DUP4 PUSH2 0x158B SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x1595 SWAP2 SWAP1 PUSH2 0x361E JUMP JUMPDEST DUP3 PUSH2 0x15A0 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B0 PUSH2 0x2B07 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1697 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1755 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1779 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DD SWAP1 PUSH2 0x316D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x189E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18C2 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E0 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x190E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 SLOAD TIMESTAMP DUP5 PUSH2 0x194F SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x1959 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x1963 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x19A6 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x6 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH2 0x19BA SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x19C4 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A4A DUP6 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A57 DUP6 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A65 DUP4 DUP7 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1A9D SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1ABE SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x1AC8 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B06 SWAP1 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B1A DUP7 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B28 DUP3 DUP8 PUSH2 0x28EE JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD9 SWAP1 PUSH2 0x31CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BEE DUP4 DUP8 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C26 DUP5 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E33 JUMPI DUP1 DUP3 PUSH2 0x1C3C SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C99 SWAP3 SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CE9 SWAP2 SWAP1 PUSH2 0x2C7D JUMP JUMPDEST LT ISZERO PUSH2 0x1D2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D21 SWAP1 PUSH2 0x322D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x1D76 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D94 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DE6 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1E14 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1F3F JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1F3E JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x1E86 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA3 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ED1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EF5 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x1F02 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1F23 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP7 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F9F SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2074 TIMESTAMP PUSH2 0x2066 PUSH2 0x2061 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x2A2B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x2A41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 PUSH1 0xC SLOAD PUSH2 0x2089 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2093 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20A0 DUP7 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP8 PUSH2 0x20B5 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x20BF SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x20C9 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP8 PUSH2 0x20DF SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x20E9 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD DUP4 DUP3 PUSH2 0x20FA SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2104 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH2 0x2112 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD GT ISZERO DUP1 PUSH2 0x2162 JUMPI POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x2207 JUMPI PUSH1 0x3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21C7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21FE SWAP1 PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD EQ ISZERO PUSH2 0x22DB JUMPI PUSH1 0x3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x229B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2315 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2371 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x23B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23A8 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD DUP4 PUSH2 0x23C0 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST GT ISZERO PUSH2 0x2401 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F8 SWAP1 PUSH2 0x310D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2461 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x24A0 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x24DC SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP PUSH2 0x2514 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP DUP3 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SHL PUSH2 0x258B SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x70 PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SHR PUSH2 0x25B3 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x25BD SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2601 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x260B SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x9 SLOAD PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2637 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2641 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2666 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x2670 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2709 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2737 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x275B SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2814 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2838 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2856 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28A8 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP7 PUSH1 0x40 MLOAD PUSH2 0x28D8 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28FA DUP4 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2936 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x29A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x29B4 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2A25 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A39 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A4F SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A5F PUSH2 0x2B7D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2AB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AAA SWAP1 PUSH2 0x324D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2ADE SWAP2 SWAP1 PUSH2 0x33C0 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B77 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BBD DUP2 PUSH2 0x38F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BD2 DUP2 PUSH2 0x3907 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BE7 DUP2 PUSH2 0x391E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BFC DUP2 PUSH2 0x391E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP5 DUP3 DUP6 ADD PUSH2 0x2BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C4B DUP5 DUP3 DUP6 ADD PUSH2 0x2BC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C74 DUP5 DUP3 DUP6 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C9D DUP5 DUP3 DUP6 ADD PUSH2 0x2BED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CC7 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CD8 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D05 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2D16 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D27 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2D3A DUP2 PUSH2 0x3558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D49 DUP2 PUSH2 0x34C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D58 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D67 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D76 DUP2 PUSH2 0x356A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D85 DUP2 PUSH2 0x358E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D94 DUP2 PUSH2 0x35B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DA3 DUP2 PUSH2 0x35D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DB2 DUP2 PUSH2 0x35E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC5 PUSH1 0xE DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD0 DUP3 PUSH2 0x36DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE8 PUSH1 0x1A DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF3 DUP3 PUSH2 0x3705 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0B PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E16 DUP3 PUSH2 0x372E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2E PUSH1 0x1A DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E39 DUP3 PUSH2 0x3757 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E51 PUSH1 0x1D DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5C DUP3 PUSH2 0x3780 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E74 PUSH1 0x13 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7F DUP3 PUSH2 0x37A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E97 PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA2 DUP3 PUSH2 0x37D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EBA PUSH1 0x1D DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC5 DUP3 PUSH2 0x37FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDD PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EE8 DUP3 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F00 PUSH1 0x1F DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F0B DUP3 PUSH2 0x384D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F23 PUSH1 0x1C DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F2E DUP3 PUSH2 0x3876 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F46 PUSH1 0x17 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F51 DUP3 PUSH2 0x389F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2F72 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2FB1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2F85 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2D4F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2F98 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2FB1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2FAB PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2DA9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2FBA DUP2 PUSH2 0x354E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2FC9 DUP2 PUSH2 0x354E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FFF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D31 JUMP JUMPDEST PUSH2 0x300C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3028 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x3035 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D5E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3051 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x305E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x306B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3088 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x3095 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3106 DUP2 PUSH2 0x2DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3126 DUP2 PUSH2 0x2DDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3146 DUP2 PUSH2 0x2DFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3166 DUP2 PUSH2 0x2E21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3186 DUP2 PUSH2 0x2E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31A6 DUP2 PUSH2 0x2E67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31C6 DUP2 PUSH2 0x2E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31E6 DUP2 PUSH2 0x2EAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3206 DUP2 PUSH2 0x2ED0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3226 DUP2 PUSH2 0x2EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3246 DUP2 PUSH2 0x2F16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3266 DUP2 PUSH2 0x2F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3282 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x329D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x32B9 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32C6 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x32D3 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32E0 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32ED PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32FA PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3307 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3314 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3322 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3345 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3352 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3375 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3380 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x33B5 JUMPI PUSH2 0x33B4 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33CB DUP3 PUSH2 0x3526 JUMP JUMPDEST SWAP2 POP PUSH2 0x33D6 DUP4 PUSH2 0x3526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x33E6 JUMPI PUSH2 0x33E5 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33FC DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3407 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3417 JUMPI PUSH2 0x3416 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342D DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3438 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3471 JUMPI PUSH2 0x3470 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3487 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3492 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x34A5 JUMPI PUSH2 0x34A4 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34BB DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34CD DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x34EE DUP3 PUSH2 0x38C8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3501 DUP3 PUSH2 0x38DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3563 DUP3 PUSH2 0x35FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3575 DUP3 PUSH2 0x357C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3587 DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3599 DUP3 PUSH2 0x35A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35AB DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35BD DUP3 PUSH2 0x35C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35CF DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E1 DUP3 PUSH2 0x34E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F3 DUP3 PUSH2 0x34F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3605 DUP3 PUSH2 0x360C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3617 DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3629 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3634 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3644 JUMPI PUSH2 0x3643 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x494E56414C494420505249434553000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F54204F50454E454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43414E275420435245415445204652414D4520494E2050415354000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x594F5520415245204E4F542054484520464143544F5259204F574E4552000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x544849532041444452455353204953204E4F5420544845204F574E4552000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4144445245535320414C5245414459204F574E53205448452050415243454C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420495320544F4F20534D414C4C00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x38D9 JUMPI PUSH2 0x38D8 PUSH2 0x36AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x38ED JUMPI PUSH2 0x38EC PUSH2 0x36AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x38F9 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x3904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3910 DUP2 PUSH2 0x34D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x391B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3927 DUP2 PUSH2 0x354E JUMP JUMPDEST DUP2 EQ PUSH2 0x3932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x843C92FF2E 0x48 0xAD DUP10 0x1E 0xCD PUSH24 0x1D661BFB541308F49C73F90E23C7788910BE97E364736F6C PUSH4 0x43000804 STOP CALLER ",
              "sourceMap": "576:16875:6:-:0;;;1371:3;1345:29;;1573:4;1559:18;;2345:572;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2569:6;2551:15;;:24;;;;;;;;;;;;;;;;;;2608:10;2586:11;;:33;;;;;;;;;;;;;;;;;;2639:7;2630:6;:16;;;;2673:14;2657:13;:30;;;;2711:10;2699:9;:22;;;;2744:10;2732:9;:22;;;;2779:12;2765:11;;:26;;;;;;;;;;;;;;;;;;2811:7;2802:6;:16;;;;2839:8;2829:7;;:18;;;;;;;;;;;;;;;;;;2871:11;2858:10;:24;;;;2902:7;2893:6;:16;;;;2345:572;;;;;;;;;;576:16875;;7:169:8;77:5;108:6;102:13;93:22;;124:46;164:5;124:46;:::i;:::-;83:93;;;;:::o;182:187::-;261:5;292:6;286:13;277:22;;308:55;357:5;308:55;:::i;:::-;267:102;;;;:::o;375:187::-;454:5;485:6;479:13;470:22;;501:55;550:5;501:55;:::i;:::-;460:102;;;;:::o;568:143::-;625:5;656:6;650:13;641:22;;672:33;699:5;672:33;:::i;:::-;631:80;;;;:::o;717:1809::-;925:6;933;941;949;957;965;973;981;989;997;1046:3;1034:9;1025:7;1021:23;1017:33;1014:2;;;1063:1;1060;1053:12;1014:2;1106:1;1131:86;1209:7;1200:6;1189:9;1185:22;1131:86;:::i;:::-;1121:96;;1077:150;1266:2;1292:77;1361:7;1352:6;1341:9;1337:22;1292:77;:::i;:::-;1282:87;;1237:142;1418:2;1444:86;1522:7;1513:6;1502:9;1498:22;1444:86;:::i;:::-;1434:96;;1389:151;1579:2;1605:64;1661:7;1652:6;1641:9;1637:22;1605:64;:::i;:::-;1595:74;;1550:129;1718:3;1745:64;1801:7;1792:6;1781:9;1777:22;1745:64;:::i;:::-;1735:74;;1689:130;1858:3;1885:64;1941:7;1932:6;1921:9;1917:22;1885:64;:::i;:::-;1875:74;;1829:130;1998:3;2025:64;2081:7;2072:6;2061:9;2057:22;2025:64;:::i;:::-;2015:74;;1969:130;2138:3;2165:64;2221:7;2212:6;2201:9;2197:22;2165:64;:::i;:::-;2155:74;;2109:130;2278:3;2305:64;2361:7;2352:6;2341:9;2337:22;2305:64;:::i;:::-;2295:74;;2249:130;2418:3;2445:64;2501:7;2492:6;2481:9;2477:22;2445:64;:::i;:::-;2435:74;;2389:130;1004:1522;;;;;;;;;;;;;:::o;2532:96::-;2569:7;2598:24;2616:5;2598:24;:::i;:::-;2587:35;;2577:51;;;:::o;2634:109::-;2684:7;2713:24;2731:5;2713:24;:::i;:::-;2702:35;;2692:51;;;:::o;2749:118::-;2808:7;2837:24;2855:5;2837:24;:::i;:::-;2826:35;;2816:51;;;:::o;2873:118::-;2932:7;2961:24;2979:5;2961:24;:::i;:::-;2950:35;;2940:51;;;:::o;2997:126::-;3034:7;3074:42;3067:5;3063:54;3052:65;;3042:81;;;:::o;3129:77::-;3166:7;3195:5;3184:16;;3174:32;;;:::o;3212:148::-;3298:37;3329:5;3298:37;:::i;:::-;3291:5;3288:48;3278:2;;3350:1;3347;3340:12;3278:2;3268:92;:::o;3366:166::-;3461:46;3501:5;3461:46;:::i;:::-;3454:5;3451:57;3441:2;;3522:1;3519;3512:12;3441:2;3431:101;:::o;3538:166::-;3633:46;3673:5;3633:46;:::i;:::-;3626:5;3623:57;3613:2;;3694:1;3691;3684:12;3613:2;3603:101;:::o;3710:122::-;3783:24;3801:5;3783:24;:::i;:::-;3776:5;3773:35;3763:2;;3822:1;3819;3812:12;3763:2;3753:79;:::o;576:16875:6:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:26785:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "80:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "138:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "48:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "56:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "216:77:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "226:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "241:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "226:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "281:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "257:23:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "257:30:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "257:30:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "194:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "202:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "210:5:8",
                            "type": ""
                          }
                        ],
                        "src": "156:137:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "351:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "361:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "383:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "370:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "370:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "361:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "426:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "399:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "399:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "399:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "329:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "337:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "345:5:8",
                            "type": ""
                          }
                        ],
                        "src": "299:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "507:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "517:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "532:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "526:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "526:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "517:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "575:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "548:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "548:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "548:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "485:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "493:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "501:5:8",
                            "type": ""
                          }
                        ],
                        "src": "444:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "670:207:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "716:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "725:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "728:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "718:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "718:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "718:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "691:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "700:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "687:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "687:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "712:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "683:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "683:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "680:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "742:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "757:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "771:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "761:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "786:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "832:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "843:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "828:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "828:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "852:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "796:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "796:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "786:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "640:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "651:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "663:6:8",
                            "type": ""
                          }
                        ],
                        "src": "593:284:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "957:204:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1003:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1012:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1015:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1005:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1005:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1005:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "978:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "987:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "974:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "974:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "999:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "970:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "970:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "967:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1029:125:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1044:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1058:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1048:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1073:71:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1116:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1127:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1112:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1112:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1136:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_bool_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1083:28:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1083:61:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1073:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "927:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "938:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "950:6:8",
                            "type": ""
                          }
                        ],
                        "src": "883:278:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1233:196:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1279:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1288:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1291:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1281:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1281:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1281:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1254:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1263:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1250:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1250:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1275:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1246:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1246:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1243:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1305:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1320:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1334:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1324:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1349:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1384:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1395:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1380:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1380:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1404:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1359:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1359:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1349:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1203:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1214:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1226:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1167:262:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1512:207:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1558:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1567:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1570:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1560:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1560:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1560:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1533:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1542:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1529:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1529:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1554:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1525:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1525:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1522:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1584:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1599:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1613:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1603:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1628:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1674:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1685:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1670:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1670:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1694:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "1638:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1638:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1628:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1482:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1493:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1505:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1435:284:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1808:324:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1854:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1863:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1866:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1856:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1856:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1856:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1829:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1838:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1825:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1825:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1850:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1821:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1821:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "1818:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1880:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1895:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1909:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1899:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1924:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1959:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1970:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1955:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1955:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1979:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1934:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1934:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "1924:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2007:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2022:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2036:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2026:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2052:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2087:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2098:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2083:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2083:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2107:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2062:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2062:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2052:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1770:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1781:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1793:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1801:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1725:407:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2238:452:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2284:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2293:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2296:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2286:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2286:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2286:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2259:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2268:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2255:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2255:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2280:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2251:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2251:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2248:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2310:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2325:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2339:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2329:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2354:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2389:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2400:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2385:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2385:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2409:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2364:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2364:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2354:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2437:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2452:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2466:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2456:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2482:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2517:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2528:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2513:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2513:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2537:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2492:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2492:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2482:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2565:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2580:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2594:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2584:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2610:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2645:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2656:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2641:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2641:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2665:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2620:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2620:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "2610:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2192:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2203:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2215:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "2223:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "2231:6:8",
                            "type": ""
                          }
                        ],
                        "src": "2138:552:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2769:74:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2786:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2830:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_address_payable_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2791:38:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2791:45:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2779:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2779:58:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2779:58:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2757:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2764:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2696:147:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2930:61:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2947:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2978:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address_payable",
                                      "nodeType": "YulIdentifier",
                                      "src": "2952:25:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2952:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2940:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2940:45:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2940:45:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2918:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2925:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2849:142:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3052:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3069:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3092:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3074:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3074:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3062:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3062:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3062:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3040:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3047:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2997:108:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3176:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3193:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3216:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3198:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3198:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3186:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3186:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3186:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3164:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3171:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3111:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3313:79:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3330:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3379:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IERC20_$77_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3335:43:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3335:50:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3323:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3323:63:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3323:63:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3301:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3308:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3235:157:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3485:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3502:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3560:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IUniswapV2Pair_$880_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3507:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3507:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3495:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3495:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3495:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IUniswapV2Pair_$880_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3473:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3480:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3398:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3666:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3683:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3741:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_MarketFactory_$2475_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3688:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3688:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3676:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3676:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3676:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_MarketFactory_$2475_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3654:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3661:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3579:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3834:75:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3851:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3896:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_SFrame_$1035_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3856:39:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3856:46:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3844:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3844:59:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3844:59:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_SFrame_$1035_to_t_uint8_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3822:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3829:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3760:149:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3977:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3994:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4037:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_enum$_SLot_$1079_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "3999:37:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3999:44:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3987:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3987:57:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3987:57:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_enum$_SLot_$1079_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3965:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3972:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3915:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4202:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4212:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4278:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4283:2:8",
                                    "type": "",
                                    "value": "14"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4219:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4219:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4212:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4384:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745",
                                  "nodeType": "YulIdentifier",
                                  "src": "4295:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4295:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4295:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4397:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4408:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4413:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4404:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4404:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4397:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4190:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4198:3:8",
                            "type": ""
                          }
                        ],
                        "src": "4056:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4574:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4584:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4650:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4655:2:8",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4591:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4591:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4584:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4756:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                                  "nodeType": "YulIdentifier",
                                  "src": "4667:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4667:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4667:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4769:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4780:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4785:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4776:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4776:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4769:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4562:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4570:3:8",
                            "type": ""
                          }
                        ],
                        "src": "4428:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4946:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4956:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5022:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5027:2:8",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4963:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4963:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "4956:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5128:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6",
                                  "nodeType": "YulIdentifier",
                                  "src": "5039:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5039:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5039:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5141:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5152:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5157:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5148:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5148:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5141:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "4934:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "4942:3:8",
                            "type": ""
                          }
                        ],
                        "src": "4800:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5318:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5328:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5394:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5399:2:8",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5335:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5335:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5328:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5500:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba",
                                  "nodeType": "YulIdentifier",
                                  "src": "5411:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5411:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5411:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5513:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5524:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5529:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5520:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5520:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5513:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5306:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5314:3:8",
                            "type": ""
                          }
                        ],
                        "src": "5172:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5690:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5700:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5766:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5771:2:8",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5707:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5707:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "5700:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5872:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b",
                                  "nodeType": "YulIdentifier",
                                  "src": "5783:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5783:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5783:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5885:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "5896:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5901:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5892:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5892:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "5885:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "5678:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "5686:3:8",
                            "type": ""
                          }
                        ],
                        "src": "5544:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6062:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6072:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6138:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6143:2:8",
                                    "type": "",
                                    "value": "19"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6079:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6079:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6072:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6244:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                                  "nodeType": "YulIdentifier",
                                  "src": "6155:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6155:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6155:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6257:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6268:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6273:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6264:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6264:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6257:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6050:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6058:3:8",
                            "type": ""
                          }
                        ],
                        "src": "5916:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6434:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6444:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6510:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6515:2:8",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6451:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6451:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6444:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6616:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                                  "nodeType": "YulIdentifier",
                                  "src": "6527:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6527:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6527:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6629:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6640:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6645:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6636:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6636:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "6629:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6422:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6430:3:8",
                            "type": ""
                          }
                        ],
                        "src": "6288:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6806:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6816:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6882:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6887:2:8",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "6823:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6823:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6816:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6988:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630",
                                  "nodeType": "YulIdentifier",
                                  "src": "6899:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6899:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6899:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7001:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7012:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7017:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7008:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7008:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7001:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6794:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6802:3:8",
                            "type": ""
                          }
                        ],
                        "src": "6660:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7178:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7188:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7254:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7259:2:8",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7195:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7195:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7188:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7360:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                                  "nodeType": "YulIdentifier",
                                  "src": "7271:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7271:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7271:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7373:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7384:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7389:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7380:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7380:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7373:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7166:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7174:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7032:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7550:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7560:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7626:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7631:2:8",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7567:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7567:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7560:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7732:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc",
                                  "nodeType": "YulIdentifier",
                                  "src": "7643:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7643:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7643:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7745:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7756:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7761:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7752:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7752:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7745:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7538:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7546:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7404:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7922:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7932:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7998:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8003:2:8",
                                    "type": "",
                                    "value": "28"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "7939:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7939:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "7932:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8104:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194",
                                  "nodeType": "YulIdentifier",
                                  "src": "8015:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8015:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8015:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8117:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8128:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8133:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8124:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8124:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8117:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7910:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7918:3:8",
                            "type": ""
                          }
                        ],
                        "src": "7776:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8294:220:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8304:74:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8370:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8375:2:8",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "8311:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8311:67:8"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "8304:3:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8476:3:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                  "nodeType": "YulIdentifier",
                                  "src": "8387:88:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8387:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8387:93:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8489:19:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8500:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8505:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8496:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8496:12:8"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8489:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8282:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8290:3:8",
                            "type": ""
                          }
                        ],
                        "src": "8148:366:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8674:765:8",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8684:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8700:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8705:4:8",
                                    "type": "",
                                    "value": "0x80"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8696:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8696:14:8"
                              },
                              "variables": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulTypedName",
                                  "src": "8688:4:8",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8720:166:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8757:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "8787:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8794:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8783:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8783:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "8777:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8777:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "8761:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "8847:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "8865:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8870:4:8",
                                            "type": "",
                                            "value": "0x00"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8861:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8861:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "8813:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8813:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8813:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "8896:168:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "8935:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "8965:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8972:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "8961:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8961:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "8955:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8955:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "8939:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "9025:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "9043:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9048:4:8",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9039:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9039:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_address_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "8991:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8991:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "8991:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9074:176:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9121:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "9151:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9158:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9147:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9147:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9141:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9141:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "9125:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "9211:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "9229:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9234:4:8",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9225:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9225:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_uint256_to_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "9177:33:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9177:63:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9177:63:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "9260:172:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "9296:43:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "9326:5:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9333:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9322:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9322:16:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "9316:5:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9316:23:8"
                                  },
                                  "variables": [
                                    {
                                      "name": "memberValue0",
                                      "nodeType": "YulTypedName",
                                      "src": "9300:12:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulIdentifier",
                                        "src": "9393:12:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "pos",
                                            "nodeType": "YulIdentifier",
                                            "src": "9411:3:8"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9416:4:8",
                                            "type": "",
                                            "value": "0x60"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "9407:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9407:14:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_encode_t_enum$_SLot_$1079_to_t_uint8",
                                      "nodeType": "YulIdentifier",
                                      "src": "9352:40:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9352:70:8"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9352:70:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_t_struct$_Lot_$1089_memory_ptr_to_t_struct$_Lot_$1089_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "8661:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8668:3:8",
                            "type": ""
                          }
                        ],
                        "src": "8566:873:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9500:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9517:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "9540:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "9522:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9522:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9510:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9510:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9510:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9488:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9495:3:8",
                            "type": ""
                          }
                        ],
                        "src": "9445:108:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9624:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9641:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "9664:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "9646:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9646:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9634:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9634:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9634:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9612:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9619:3:8",
                            "type": ""
                          }
                        ],
                        "src": "9559:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9797:140:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9807:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9819:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9830:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9815:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9815:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9807:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9903:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9916:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9927:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9912:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9912:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "9843:59:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9843:87:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9843:87:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9769:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9781:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9792:4:8",
                            "type": ""
                          }
                        ],
                        "src": "9683:254:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10077:214:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10087:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10099:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10110:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10095:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10095:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10087:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10175:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10188:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10199:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10184:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10184:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_payable_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10123:51:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10123:79:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10123:79:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10256:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10269:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10280:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10265:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10265:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10212:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10212:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10212:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10041:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10053:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10061:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10072:4:8",
                            "type": ""
                          }
                        ],
                        "src": "9943:348:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10423:206:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10433:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10445:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10456:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10441:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10441:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10433:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10513:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10526:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10537:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10522:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10522:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10469:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10469:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10469:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10594:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10607:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10618:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10603:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10603:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10550:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10550:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10550:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10387:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10399:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10407:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10418:4:8",
                            "type": ""
                          }
                        ],
                        "src": "10297:332:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10789:288:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10799:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10811:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10822:2:8",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10807:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10807:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10799:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10879:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10892:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10903:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10888:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10888:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10835:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10835:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10835:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10960:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10973:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10984:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10969:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10969:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10916:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10916:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10916:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "11042:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11055:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11066:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11051:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11051:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "10998:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10998:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10998:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10745:9:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "10757:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10765:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10773:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10784:4:8",
                            "type": ""
                          }
                        ],
                        "src": "10635:442:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11209:206:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11219:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11231:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11242:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11227:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11227:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11219:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11299:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11312:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11323:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11308:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11308:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11255:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11255:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11255:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "11380:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11393:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11404:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11389:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11389:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11336:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11336:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11336:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11173:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "11185:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11193:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11204:4:8",
                            "type": ""
                          }
                        ],
                        "src": "11083:332:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11532:137:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11542:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11554:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11565:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11550:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11550:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11542:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11635:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11648:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11659:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11644:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11644:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11578:56:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11578:84:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11578:84:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11504:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11516:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11527:4:8",
                            "type": ""
                          }
                        ],
                        "src": "11421:248:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11795:146:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11805:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11817:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11828:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11813:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11813:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11805:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "11907:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11920:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11931:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11916:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11916:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IUniswapV2Pair_$880_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "11841:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11841:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11841:93:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IUniswapV2Pair_$880__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11767:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "11779:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11790:4:8",
                            "type": ""
                          }
                        ],
                        "src": "11675:266:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12067:146:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12077:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12089:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12100:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12085:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12085:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12077:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "12179:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12192:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12203:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12188:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12188:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_MarketFactory_$2475_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12113:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12113:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12113:93:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_MarketFactory_$2475__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12039:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "12051:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12062:4:8",
                            "type": ""
                          }
                        ],
                        "src": "11947:266:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12390:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12400:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12412:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12423:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12408:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12408:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12400:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12447:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12458:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12443:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12443:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "12466:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12472:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "12462:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12462:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12436:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12436:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12436:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12492:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "12626:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12500:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12500:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12492:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12370:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12385:4:8",
                            "type": ""
                          }
                        ],
                        "src": "12219:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12815:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "12825:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12837:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12848:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12833:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12833:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12825:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12872:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12883:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12868:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12868:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "12891:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12897:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "12887:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12887:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12861:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12861:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12861:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12917:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13051:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "12925:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12925:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12917:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12795:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12810:4:8",
                            "type": ""
                          }
                        ],
                        "src": "12644:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13240:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13250:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13262:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13273:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13258:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13258:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13250:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13297:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13308:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13293:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13293:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "13316:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13322:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13312:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13312:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13286:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13286:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13286:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13342:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13476:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13350:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13350:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13342:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13220:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13235:4:8",
                            "type": ""
                          }
                        ],
                        "src": "13069:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13665:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "13675:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13687:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13698:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13683:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13683:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13675:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13722:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13733:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13718:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13718:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "13741:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13747:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "13737:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13737:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13711:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13711:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13711:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13767:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "13901:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "13775:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13775:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13767:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13645:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13660:4:8",
                            "type": ""
                          }
                        ],
                        "src": "13494:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14090:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14100:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14112:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14123:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14108:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14108:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14100:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14147:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14158:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14143:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14143:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "14166:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14172:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14162:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14162:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14136:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14136:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14136:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14192:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "14326:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14200:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14200:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14192:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14070:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14085:4:8",
                            "type": ""
                          }
                        ],
                        "src": "13919:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14515:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14525:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14537:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14548:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14533:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14533:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14525:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14572:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14583:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14568:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14568:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "14591:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14597:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "14587:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14587:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14561:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14561:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14561:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14617:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "14751:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "14625:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14625:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14617:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14495:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14510:4:8",
                            "type": ""
                          }
                        ],
                        "src": "14344:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14940:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "14950:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14962:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14973:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14958:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14958:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14950:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14997:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15008:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14993:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14993:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "15016:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15022:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15012:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15012:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14986:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14986:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14986:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15042:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "15176:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15050:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15050:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15042:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14920:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14935:4:8",
                            "type": ""
                          }
                        ],
                        "src": "14769:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15365:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15375:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15387:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15398:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15383:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15383:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15375:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15422:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15433:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15418:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15418:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "15441:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15447:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15437:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15437:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15411:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15411:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15411:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15467:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "15601:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15475:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15475:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15467:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15345:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15360:4:8",
                            "type": ""
                          }
                        ],
                        "src": "15194:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15790:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "15800:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15812:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15823:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15808:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15808:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15800:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15847:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15858:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15843:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15843:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "15866:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15872:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "15862:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15862:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15836:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15836:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15836:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15892:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "16026:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "15900:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15900:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15892:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15770:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15785:4:8",
                            "type": ""
                          }
                        ],
                        "src": "15619:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16215:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16225:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16237:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16248:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16233:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16233:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16225:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16272:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16283:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16268:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16268:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "16291:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16297:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16287:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16287:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16261:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16261:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16261:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16317:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "16451:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16325:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16325:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16317:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16195:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16210:4:8",
                            "type": ""
                          }
                        ],
                        "src": "16044:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16640:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16650:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16662:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16673:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16658:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16658:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16650:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16697:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16708:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16693:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16693:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "16716:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16722:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "16712:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16712:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16686:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16686:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16686:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16742:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "16876:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "16750:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16750:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16742:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16620:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16635:4:8",
                            "type": ""
                          }
                        ],
                        "src": "16469:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17065:248:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17075:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17087:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17098:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17083:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17083:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17075:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17122:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17133:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17118:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17118:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail",
                                        "nodeType": "YulIdentifier",
                                        "src": "17141:4:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17147:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "17137:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17137:20:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17111:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17111:47:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17111:47:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17167:139:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "tail",
                                    "nodeType": "YulIdentifier",
                                    "src": "17301:4:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17175:124:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17175:131:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17167:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17045:9:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17060:4:8",
                            "type": ""
                          }
                        ],
                        "src": "16894:419:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17459:167:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17469:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17481:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17492:3:8",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17477:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17477:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17469:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17592:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17605:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17616:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17601:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17601:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_struct$_Lot_$1089_memory_ptr_to_t_struct$_Lot_$1089_memory_ptr_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17506:85:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17506:113:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17506:113:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_Lot_$1089_memory_ptr__to_t_struct$_Lot_$1089_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17431:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17443:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17454:4:8",
                            "type": ""
                          }
                        ],
                        "src": "17319:307:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17730:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17740:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17752:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17763:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17748:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17748:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17740:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17820:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17833:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17844:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17829:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17829:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "17776:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17776:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17776:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17702:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17714:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17725:4:8",
                            "type": ""
                          }
                        ],
                        "src": "17632:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18191:795:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "18201:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18213:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18224:3:8",
                                    "type": "",
                                    "value": "288"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18209:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18209:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18201:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "18282:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18295:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18306:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18291:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18291:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18238:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18238:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18238:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "18372:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18385:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18396:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18381:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18381:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_enum$_SFrame_$1035_to_t_uint8_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18319:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18319:81:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18319:81:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "18454:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18467:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18478:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18463:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18463:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18410:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18410:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18410:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "18536:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18549:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18560:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18545:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18545:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18492:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18492:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18492:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "18618:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18631:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18642:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18627:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18627:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18574:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18574:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18574:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "18701:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18714:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18725:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18710:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18710:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18657:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18657:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18657:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "18784:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18797:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18808:3:8",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18793:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18793:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18740:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18740:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18740:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "18867:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18880:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18891:3:8",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18876:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18876:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18823:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18823:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18823:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "18950:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18963:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18974:3:8",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18959:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18959:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "18906:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18906:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18906:73:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_enum$_SFrame_$1035_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18099:9:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "18111:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "18119:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "18127:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "18135:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "18143:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "18151:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "18159:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "18167:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "18175:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18186:4:8",
                            "type": ""
                          }
                        ],
                        "src": "17860:1126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19118:206:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19128:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "19140:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19151:2:8",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19136:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19136:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "19128:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "19208:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19221:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19232:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19217:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19217:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19164:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19164:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19164:71:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "19289:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "19302:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19313:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "19298:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19298:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "19245:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19245:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19245:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "19082:9:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "19094:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "19102:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "19113:4:8",
                            "type": ""
                          }
                        ],
                        "src": "18992:332:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19426:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19443:3:8"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "19448:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "19436:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19436:19:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19436:19:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19464:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "19483:3:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19488:4:8",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19479:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19479:14:8"
                              },
                              "variableNames": [
                                {
                                  "name": "updated_pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "19464:11:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "19398:3:8",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "19403:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "updated_pos",
                            "nodeType": "YulTypedName",
                            "src": "19414:11:8",
                            "type": ""
                          }
                        ],
                        "src": "19330:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19549:261:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19559:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "19582:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "19564:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19564:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "19559:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19593:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "19616:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "19598:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19598:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "19593:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19756:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "19758:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19758:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "19758:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "19677:1:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "19684:66:8",
                                        "type": "",
                                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                      },
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "19752:1:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "19680:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19680:74:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "19674:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19674:81:8"
                              },
                              "nodeType": "YulIf",
                              "src": "19671:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19788:16:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "19799:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "19802:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "19795:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19795:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "19788:3:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "19536:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "19539:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "19545:3:8",
                            "type": ""
                          }
                        ],
                        "src": "19505:305:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "19858:143:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "19868:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "19891:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint224",
                                  "nodeType": "YulIdentifier",
                                  "src": "19873:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19873:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "19868:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19902:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "19925:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint224",
                                  "nodeType": "YulIdentifier",
                                  "src": "19907:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19907:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "19902:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19949:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "19951:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19951:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "19951:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "19946:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "19939:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19939:9:8"
                              },
                              "nodeType": "YulIf",
                              "src": "19936:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "19981:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "19990:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "19993:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "19986:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19986:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "19981:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint224",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "19847:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "19850:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "19856:1:8",
                            "type": ""
                          }
                        ],
                        "src": "19816:185:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20049:143:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20059:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "20082:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "20064:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20064:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "20059:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20093:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "20116:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "20098:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20098:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "20093:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20140:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "20142:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20142:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20142:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "20137:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "20130:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20130:9:8"
                              },
                              "nodeType": "YulIf",
                              "src": "20127:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20172:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "20181:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "20184:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "20177:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20177:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "20172:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "20038:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "20041:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "20047:1:8",
                            "type": ""
                          }
                        ],
                        "src": "20007:185:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20246:300:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20256:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "20279:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "20261:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20261:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "20256:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20290:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "20313:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "20295:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20295:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "20290:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20488:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "20490:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20490:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20490:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "20400:1:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "20393:6:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20393:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "20386:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20386:17:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "20408:1:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "20415:66:8",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "20483:1:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "20411:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20411:74:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "20405:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20405:81:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "20382:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20382:105:8"
                              },
                              "nodeType": "YulIf",
                              "src": "20379:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20520:20:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "20535:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "20538:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "20531:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20531:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "20520:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "20229:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "20232:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "20238:7:8",
                            "type": ""
                          }
                        ],
                        "src": "20198:348:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20597:146:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20607:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "20630:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "20612:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20612:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "20607:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20641:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "20664:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "20646:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20646:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "20641:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20688:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "20690:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20690:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20690:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "20682:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "20685:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "20679:2:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20679:8:8"
                              },
                              "nodeType": "YulIf",
                              "src": "20676:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20720:17:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "20732:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "20735:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "20728:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20728:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "20720:4:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "20583:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "20586:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "20592:4:8",
                            "type": ""
                          }
                        ],
                        "src": "20552:191:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20794:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20804:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "20833:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "20815:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20815:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "20804:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20776:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "20786:7:8",
                            "type": ""
                          }
                        ],
                        "src": "20749:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20904:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20914:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "20943:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "20925:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20925:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "20914:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address_payable",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20886:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "20896:7:8",
                            "type": ""
                          }
                        ],
                        "src": "20851:104:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21003:48:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21013:32:8",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "21038:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "21031:6:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21031:13:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "21024:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21024:21:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "21013:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "20985:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "20995:7:8",
                            "type": ""
                          }
                        ],
                        "src": "20961:90:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21113:77:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21123:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21134:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "21123:7:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21178:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_SFrame_$1035",
                                  "nodeType": "YulIdentifier",
                                  "src": "21140:37:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21140:44:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21140:44:8"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_SFrame_$1035",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21095:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "21105:7:8",
                            "type": ""
                          }
                        ],
                        "src": "21057:133:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21250:75:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21260:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21271:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "21260:7:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21313:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_assert_t_enum$_SLot_$1079",
                                  "nodeType": "YulIdentifier",
                                  "src": "21277:35:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21277:42:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21277:42:8"
                            }
                          ]
                        },
                        "name": "cleanup_t_enum$_SLot_$1079",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21232:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "21242:7:8",
                            "type": ""
                          }
                        ],
                        "src": "21196:129:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21376:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21386:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21401:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21408:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21397:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21397:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "21386:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21358:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "21368:7:8",
                            "type": ""
                          }
                        ],
                        "src": "21331:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21508:97:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21518:81:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21533:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21540:58:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "21529:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21529:70:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "21518:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint224",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21490:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "21500:7:8",
                            "type": ""
                          }
                        ],
                        "src": "21463:142:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21656:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21666:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "21677:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "21666:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21638:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "21648:7:8",
                            "type": ""
                          }
                        ],
                        "src": "21611:77:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21762:66:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21772:50:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21816:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "21785:30:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21785:37:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "21772:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_address_payable_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21742:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "21752:9:8",
                            "type": ""
                          }
                        ],
                        "src": "21694:134:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21907:79:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21917:63:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "21974:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "21930:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21930:50:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "21917:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "21887:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "21897:9:8",
                            "type": ""
                          }
                        ],
                        "src": "21834:152:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22065:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22075:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22106:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "22088:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22088:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "22075:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "22045:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "22055:9:8",
                            "type": ""
                          }
                        ],
                        "src": "21992:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22206:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22216:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22282:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IUniswapV2Pair_$880_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "22229:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22229:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "22216:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$880_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "22186:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "22196:9:8",
                            "type": ""
                          }
                        ],
                        "src": "22124:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22382:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22392:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22423:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "22405:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22405:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "22392:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$880_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "22362:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "22372:9:8",
                            "type": ""
                          }
                        ],
                        "src": "22300:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22523:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22533:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22599:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_MarketFactory_$2475_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "22546:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22546:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "22533:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2475_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "22503:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "22513:9:8",
                            "type": ""
                          }
                        ],
                        "src": "22441:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22699:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22709:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22740:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "22722:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22722:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "22709:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2475_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "22679:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "22689:9:8",
                            "type": ""
                          }
                        ],
                        "src": "22617:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22827:64:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22837:48:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "22879:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_SFrame_$1035",
                                  "nodeType": "YulIdentifier",
                                  "src": "22850:28:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22850:35:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "22837:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_SFrame_$1035_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "22807:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "22817:9:8",
                            "type": ""
                          }
                        ],
                        "src": "22758:133:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22964:62:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22974:46:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "23014:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_enum$_SLot_$1079",
                                  "nodeType": "YulIdentifier",
                                  "src": "22987:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22987:33:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "22974:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_enum$_SLot_$1079_to_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "22944:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "22954:9:8",
                            "type": ""
                          }
                        ],
                        "src": "22897:129:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23092:66:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23102:50:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "23146:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_uint160_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "23115:30:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23115:37:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "23102:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23072:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "23082:9:8",
                            "type": ""
                          }
                        ],
                        "src": "23032:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23224:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23234:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "23265:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "23247:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23247:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "23234:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_uint160_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "23204:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "23214:9:8",
                            "type": ""
                          }
                        ],
                        "src": "23164:113:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23317:142:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "23327:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "23350:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "23332:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23332:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "x",
                                  "nodeType": "YulIdentifier",
                                  "src": "23327:1:8"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23361:25:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "23384:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "23366:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23366:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "y",
                                  "nodeType": "YulIdentifier",
                                  "src": "23361:1:8"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "23408:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x12",
                                        "nodeType": "YulIdentifier",
                                        "src": "23410:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "23410:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "23410:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "23405:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "23398:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23398:9:8"
                              },
                              "nodeType": "YulIf",
                              "src": "23395:2:8"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "23439:14:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "23448:1:8"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "23451:1:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mod",
                                  "nodeType": "YulIdentifier",
                                  "src": "23444:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23444:9:8"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "23439:1:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "mod_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "23306:1:8",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "23309:1:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "23315:1:8",
                            "type": ""
                          }
                        ],
                        "src": "23283:176:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23493:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23510:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23513:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23503:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23503:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23503:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23607:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23610:4:8",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23600:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23600:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23600:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23631:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23634:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "23624:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23624:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23624:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "23465:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23679:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23696:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23699:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23689:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23689:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23689:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23793:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23796:4:8",
                                    "type": "",
                                    "value": "0x12"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23786:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23786:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23786:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23817:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23820:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "23810:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23810:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23810:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x12",
                        "nodeType": "YulFunctionDefinition",
                        "src": "23651:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "23865:152:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23882:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23885:77:8",
                                    "type": "",
                                    "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23875:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23875:88:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23875:88:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23979:1:8",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "23982:4:8",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "23972:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23972:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23972:15:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24003:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "24006:4:8",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "23996:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "23996:15:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "23996:15:8"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "23837:180:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24129:58:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "24151:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24159:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24147:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24147:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "24163:16:8",
                                    "type": "",
                                    "value": "INVALID PRICES"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24140:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24140:40:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24140:40:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "24121:6:8",
                            "type": ""
                          }
                        ],
                        "src": "24023:164:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24299:70:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "24321:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24329:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24317:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24317:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "24333:28:8",
                                    "type": "",
                                    "value": "FRAME END TIME NOT REACHED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24310:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24310:52:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24310:52:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "24291:6:8",
                            "type": ""
                          }
                        ],
                        "src": "24193:176:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24481:60:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "24503:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24511:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24499:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24499:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "24515:18:8",
                                    "type": "",
                                    "value": "FRAME NOT OPENED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24492:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24492:42:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24492:42:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "24473:6:8",
                            "type": ""
                          }
                        ],
                        "src": "24375:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24653:70:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "24675:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24683:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24671:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24671:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "24687:28:8",
                                    "type": "",
                                    "value": "CAN'T CREATE FRAME IN PAST"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24664:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24664:52:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24664:52:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "24645:6:8",
                            "type": ""
                          }
                        ],
                        "src": "24547:176:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "24835:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "24857:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "24865:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "24853:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "24853:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "24869:31:8",
                                    "type": "",
                                    "value": "YOU ARE NOT THE FACTORY OWNER"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "24846:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "24846:55:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "24846:55:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "24827:6:8",
                            "type": ""
                          }
                        ],
                        "src": "24729:179:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25020:63:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "25042:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25050:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25038:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25038:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25054:21:8",
                                    "type": "",
                                    "value": "LOT ALREADY SETTLED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25031:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25031:45:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25031:45:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "25012:6:8",
                            "type": ""
                          }
                        ],
                        "src": "24914:169:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25195:60:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "25217:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25225:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25213:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25213:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25229:18:8",
                                    "type": "",
                                    "value": "PRICE IS TOO LOW"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25206:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25206:42:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25206:42:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "25187:6:8",
                            "type": ""
                          }
                        ],
                        "src": "25089:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25367:73:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "25389:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25397:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25385:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25385:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25401:31:8",
                                    "type": "",
                                    "value": "THIS ADDRESS IS NOT THE OWNER"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25378:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25378:55:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25378:55:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "25359:6:8",
                            "type": ""
                          }
                        ],
                        "src": "25261:179:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25552:60:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "25574:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25582:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25570:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25570:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25586:18:8",
                                    "type": "",
                                    "value": "FRAME NOT CLOSED"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25563:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25563:42:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25563:42:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "25544:6:8",
                            "type": ""
                          }
                        ],
                        "src": "25446:166:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25724:75:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "25746:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25754:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25742:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25742:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25758:33:8",
                                    "type": "",
                                    "value": "ADDRESS ALREADY OWNS THE PARCEL"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25735:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25735:57:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25735:57:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "25716:6:8",
                            "type": ""
                          }
                        ],
                        "src": "25618:181:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "25911:72:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "25933:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "25941:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "25929:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "25929:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "25945:30:8",
                                    "type": "",
                                    "value": "APPROVED AMOUNT IS TOO SMALL"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "25922:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "25922:54:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "25922:54:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "25903:6:8",
                            "type": ""
                          }
                        ],
                        "src": "25805:178:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26095:67:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "26117:6:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26125:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "26113:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26113:14:8"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "26129:25:8",
                                    "type": "",
                                    "value": "FixedPoint: DIV_BY_ZERO"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "26106:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26106:49:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "26106:49:8"
                            }
                          ]
                        },
                        "name": "store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "26087:6:8",
                            "type": ""
                          }
                        ],
                        "src": "25989:173:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26222:62:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26256:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "26258:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26258:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26258:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "26245:5:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26252:1:8",
                                        "type": "",
                                        "value": "4"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "26242:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26242:12:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "26235:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26235:20:8"
                              },
                              "nodeType": "YulIf",
                              "src": "26232:2:8"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_SFrame_$1035",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26215:5:8",
                            "type": ""
                          }
                        ],
                        "src": "26168:116:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26342:62:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26376:22:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x21",
                                        "nodeType": "YulIdentifier",
                                        "src": "26378:16:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26378:18:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26378:18:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "26365:5:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "26372:1:8",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "26362:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26362:12:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "26355:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26355:20:8"
                              },
                              "nodeType": "YulIf",
                              "src": "26352:2:8"
                            }
                          ]
                        },
                        "name": "validator_assert_t_enum$_SLot_$1079",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26335:5:8",
                            "type": ""
                          }
                        ],
                        "src": "26290:114:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26453:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26510:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26519:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26522:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "26512:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26512:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26512:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "26476:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "26501:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "26483:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26483:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "26473:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26473:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "26466:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26466:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "26463:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26446:5:8",
                            "type": ""
                          }
                        ],
                        "src": "26410:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26578:76:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26632:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26641:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26644:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "26634:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26634:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26634:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "26601:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "26623:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_bool",
                                          "nodeType": "YulIdentifier",
                                          "src": "26608:14:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26608:21:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "26598:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26598:32:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "26591:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26591:40:8"
                              },
                              "nodeType": "YulIf",
                              "src": "26588:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26571:5:8",
                            "type": ""
                          }
                        ],
                        "src": "26538:116:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "26703:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "26760:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26769:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "26772:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "26762:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "26762:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "26762:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "26726:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "26751:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "26733:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "26733:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "26723:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "26723:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "26716:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "26716:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "26713:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "26696:5:8",
                            "type": ""
                          }
                        ],
                        "src": "26660:122:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Pair_$880_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Pair_$880_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_MarketFactory_$2475_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MarketFactory_$2475_to_t_address(value))\n    }\n\n    function abi_encode_t_enum$_SFrame_$1035_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_SFrame_$1035_to_t_uint8(value))\n    }\n\n    function abi_encode_t_enum$_SLot_$1079_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_SLot_$1079_to_t_uint8(value))\n    }\n\n    function abi_encode_t_stringliteral_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12(pos)\n        end := add(pos, 32)\n    }\n\n    // struct Market.Lot -> struct Market.Lot\n    function abi_encode_t_struct$_Lot_$1089_memory_ptr_to_t_struct$_Lot_$1089_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // lotKey\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // lotOwner\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // acquisitionPrice\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // state\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_enum$_SLot_$1079_to_t_uint8(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$77__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Pair_$880__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Pair_$880_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_MarketFactory_$2475__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_MarketFactory_$2475_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_struct$_Lot_$1089_memory_ptr__to_t_struct$_Lot_$1089_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_struct$_Lot_$1089_memory_ptr_to_t_struct$_Lot_$1089_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_enum$_SFrame_$1035_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint8_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 288)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_enum$_SFrame_$1035_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint224(x, y) -> r {\n        x := cleanup_t_uint224(x)\n        y := cleanup_t_uint224(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_enum$_SFrame_$1035(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_SFrame_$1035(value)\n    }\n\n    function cleanup_t_enum$_SLot_$1079(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_SLot_$1079(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint224(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$77_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$880_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswapV2Pair_$880_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$880_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2475_to_t_address(value) -> converted {\n        converted := convert_t_contract$_MarketFactory_$2475_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2475_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_enum$_SFrame_$1035_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_SFrame_$1035(value)\n    }\n\n    function convert_t_enum$_SLot_$1079_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_SLot_$1079(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745(memPtr) {\n\n        mstore(add(memPtr, 0), \"INVALID PRICES\")\n\n    }\n\n    function store_literal_in_memory_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c(memPtr) {\n\n        mstore(add(memPtr, 0), \"FRAME END TIME NOT REACHED\")\n\n    }\n\n    function store_literal_in_memory_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6(memPtr) {\n\n        mstore(add(memPtr, 0), \"FRAME NOT OPENED\")\n\n    }\n\n    function store_literal_in_memory_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba(memPtr) {\n\n        mstore(add(memPtr, 0), \"CAN'T CREATE FRAME IN PAST\")\n\n    }\n\n    function store_literal_in_memory_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"YOU ARE NOT THE FACTORY OWNER\")\n\n    }\n\n    function store_literal_in_memory_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494(memPtr) {\n\n        mstore(add(memPtr, 0), \"LOT ALREADY SETTLED\")\n\n    }\n\n    function store_literal_in_memory_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f(memPtr) {\n\n        mstore(add(memPtr, 0), \"PRICE IS TOO LOW\")\n\n    }\n\n    function store_literal_in_memory_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630(memPtr) {\n\n        mstore(add(memPtr, 0), \"THIS ADDRESS IS NOT THE OWNER\")\n\n    }\n\n    function store_literal_in_memory_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f(memPtr) {\n\n        mstore(add(memPtr, 0), \"FRAME NOT CLOSED\")\n\n    }\n\n    function store_literal_in_memory_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc(memPtr) {\n\n        mstore(add(memPtr, 0), \"ADDRESS ALREADY OWNS THE PARCEL\")\n\n    }\n\n    function store_literal_in_memory_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194(memPtr) {\n\n        mstore(add(memPtr, 0), \"APPROVED AMOUNT IS TOO SMALL\")\n\n    }\n\n    function store_literal_in_memory_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12(memPtr) {\n\n        mstore(add(memPtr, 0), \"FixedPoint: DIV_BY_ZERO\")\n\n    }\n\n    function validator_assert_t_enum$_SFrame_$1035(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function validator_assert_t_enum$_SLot_$1079(value) {\n        if iszero(lt(value, 3)) { panic_error_0x21() }\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D6AE6A0 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE107FB4F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE107FB4F EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x608 JUMPI DUP1 PUSH4 0xFC950702 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x642 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x5BA JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x89DA88A3 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x532 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x7D6AE6A0 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x7E996639 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x830AB119 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x888BDBCD EQ PUSH2 0x47C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x45084775 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x6F7CB60B EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x3E0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x45084775 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x4D3EE2DC EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x346 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x2D0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xCBCFF8F EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x2A0EFD44 EQ PUSH2 0x24A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x16DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x436 PUSH2 0x196A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B4 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x1AA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH2 0x1FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x30D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x574 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x30B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1FFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C2 PUSH2 0x201C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x309C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x610 PUSH2 0x211E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x640 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x2124 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64A PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x690 DUP4 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x728 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x736 JUMPI DUP1 SWAP2 POP POP PUSH2 0x866 JUMP JUMPDEST PUSH2 0x73F TIMESTAMP PUSH2 0x1565 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP1 PUSH2 0x314D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7FC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x876 TIMESTAMP PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP NUMBER PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0x3 SLOAD DUP3 PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x94A JUMPI DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x3 SLOAD DUP3 PUSH2 0x95B SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH2 0x965 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST TIMESTAMP LT PUSH2 0x9D9 JUMPI DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP4 PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x9FD SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA4F DUP7 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA5D DUP3 DUP8 PUSH2 0x28EE JUMP JUMPDEST SWAP1 POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0F SWAP1 PUSH2 0x320D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB24 DUP4 DUP8 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP3 SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x2C7D JUMP JUMPDEST LT ISZERO PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC41 SWAP1 PUSH2 0x322D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD30 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDA7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE17 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 PUSH2 0xE53 DUP5 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0xF14 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF31 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF83 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x103A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1109 SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1171 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x128C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1283 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AD PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x12E8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1358 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1399 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1390 SWAP1 PUSH2 0x318D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1456 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1484 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1553 SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x157A JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD DUP4 PUSH2 0x158B SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x1595 SWAP2 SWAP1 PUSH2 0x361E JUMP JUMPDEST DUP3 PUSH2 0x15A0 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B0 PUSH2 0x2B07 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1697 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1755 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1779 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DD SWAP1 PUSH2 0x316D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x189E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18C2 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E0 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x190E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 SLOAD TIMESTAMP DUP5 PUSH2 0x194F SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x1959 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x1963 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x19A6 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x6 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH2 0x19BA SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x19C4 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A4A DUP6 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A57 DUP6 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A65 DUP4 DUP7 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1A9D SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1ABE SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x1AC8 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B06 SWAP1 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B1A DUP7 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B28 DUP3 DUP8 PUSH2 0x28EE JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD9 SWAP1 PUSH2 0x31CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BEE DUP4 DUP8 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C26 DUP5 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E33 JUMPI DUP1 DUP3 PUSH2 0x1C3C SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C99 SWAP3 SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CE9 SWAP2 SWAP1 PUSH2 0x2C7D JUMP JUMPDEST LT ISZERO PUSH2 0x1D2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D21 SWAP1 PUSH2 0x322D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x1D76 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D94 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DE6 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1E14 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1F3F JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1F3E JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x1E86 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA3 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ED1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EF5 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x1F02 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1F23 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP7 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F9F SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2074 TIMESTAMP PUSH2 0x2066 PUSH2 0x2061 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x2A2B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x2A41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 PUSH1 0xC SLOAD PUSH2 0x2089 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2093 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20A0 DUP7 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP8 PUSH2 0x20B5 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x20BF SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x20C9 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP8 PUSH2 0x20DF SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x20E9 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD DUP4 DUP3 PUSH2 0x20FA SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2104 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH2 0x2112 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD GT ISZERO DUP1 PUSH2 0x2162 JUMPI POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x2207 JUMPI PUSH1 0x3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21C7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21FE SWAP1 PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD EQ ISZERO PUSH2 0x22DB JUMPI PUSH1 0x3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x229B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2315 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2371 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x23B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23A8 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD DUP4 PUSH2 0x23C0 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST GT ISZERO PUSH2 0x2401 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F8 SWAP1 PUSH2 0x310D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2461 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x24A0 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x24DC SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP PUSH2 0x2514 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP DUP3 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SHL PUSH2 0x258B SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x70 PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SHR PUSH2 0x25B3 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x25BD SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2601 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x260B SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x9 SLOAD PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2637 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2641 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2666 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x2670 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2709 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2737 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x275B SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2814 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2838 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2856 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28A8 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP7 PUSH1 0x40 MLOAD PUSH2 0x28D8 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28FA DUP4 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2936 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x29A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x29B4 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2A25 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A39 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A4F SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A5F PUSH2 0x2B7D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2AB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AAA SWAP1 PUSH2 0x324D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2ADE SWAP2 SWAP1 PUSH2 0x33C0 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B77 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BBD DUP2 PUSH2 0x38F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BD2 DUP2 PUSH2 0x3907 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BE7 DUP2 PUSH2 0x391E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BFC DUP2 PUSH2 0x391E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP5 DUP3 DUP6 ADD PUSH2 0x2BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C4B DUP5 DUP3 DUP6 ADD PUSH2 0x2BC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C74 DUP5 DUP3 DUP6 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C9D DUP5 DUP3 DUP6 ADD PUSH2 0x2BED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CC7 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CD8 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D05 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2D16 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D27 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2D3A DUP2 PUSH2 0x3558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D49 DUP2 PUSH2 0x34C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D58 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D67 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D76 DUP2 PUSH2 0x356A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D85 DUP2 PUSH2 0x358E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D94 DUP2 PUSH2 0x35B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DA3 DUP2 PUSH2 0x35D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DB2 DUP2 PUSH2 0x35E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC5 PUSH1 0xE DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD0 DUP3 PUSH2 0x36DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE8 PUSH1 0x1A DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF3 DUP3 PUSH2 0x3705 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0B PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E16 DUP3 PUSH2 0x372E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2E PUSH1 0x1A DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E39 DUP3 PUSH2 0x3757 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E51 PUSH1 0x1D DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5C DUP3 PUSH2 0x3780 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E74 PUSH1 0x13 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7F DUP3 PUSH2 0x37A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E97 PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA2 DUP3 PUSH2 0x37D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EBA PUSH1 0x1D DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC5 DUP3 PUSH2 0x37FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDD PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EE8 DUP3 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F00 PUSH1 0x1F DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F0B DUP3 PUSH2 0x384D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F23 PUSH1 0x1C DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F2E DUP3 PUSH2 0x3876 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F46 PUSH1 0x17 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F51 DUP3 PUSH2 0x389F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2F72 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2FB1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2F85 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2D4F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2F98 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2FB1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2FAB PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2DA9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2FBA DUP2 PUSH2 0x354E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2FC9 DUP2 PUSH2 0x354E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FFF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D31 JUMP JUMPDEST PUSH2 0x300C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3028 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x3035 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D5E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3051 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x305E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x306B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3088 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x3095 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3106 DUP2 PUSH2 0x2DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3126 DUP2 PUSH2 0x2DDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3146 DUP2 PUSH2 0x2DFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3166 DUP2 PUSH2 0x2E21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3186 DUP2 PUSH2 0x2E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31A6 DUP2 PUSH2 0x2E67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31C6 DUP2 PUSH2 0x2E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31E6 DUP2 PUSH2 0x2EAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3206 DUP2 PUSH2 0x2ED0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3226 DUP2 PUSH2 0x2EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3246 DUP2 PUSH2 0x2F16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3266 DUP2 PUSH2 0x2F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3282 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x329D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x32B9 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32C6 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x32D3 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32E0 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32ED PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32FA PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3307 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3314 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3322 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3345 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3352 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3375 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3380 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x33B5 JUMPI PUSH2 0x33B4 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33CB DUP3 PUSH2 0x3526 JUMP JUMPDEST SWAP2 POP PUSH2 0x33D6 DUP4 PUSH2 0x3526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x33E6 JUMPI PUSH2 0x33E5 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33FC DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3407 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3417 JUMPI PUSH2 0x3416 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342D DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3438 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3471 JUMPI PUSH2 0x3470 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3487 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3492 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x34A5 JUMPI PUSH2 0x34A4 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34BB DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34CD DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x34EE DUP3 PUSH2 0x38C8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3501 DUP3 PUSH2 0x38DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3563 DUP3 PUSH2 0x35FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3575 DUP3 PUSH2 0x357C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3587 DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3599 DUP3 PUSH2 0x35A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35AB DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35BD DUP3 PUSH2 0x35C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35CF DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E1 DUP3 PUSH2 0x34E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F3 DUP3 PUSH2 0x34F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3605 DUP3 PUSH2 0x360C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3617 DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3629 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3634 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3644 JUMPI PUSH2 0x3643 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x494E56414C494420505249434553000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F54204F50454E454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43414E275420435245415445204652414D4520494E2050415354000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x594F5520415245204E4F542054484520464143544F5259204F574E4552000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x544849532041444452455353204953204E4F5420544845204F574E4552000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4144445245535320414C5245414459204F574E53205448452050415243454C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420495320544F4F20534D414C4C00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x38D9 JUMPI PUSH2 0x38D8 PUSH2 0x36AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x38ED JUMPI PUSH2 0x38EC PUSH2 0x36AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x38F9 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x3904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3910 DUP2 PUSH2 0x34D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x391B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3927 DUP2 PUSH2 0x354E JUMP JUMPDEST DUP2 EQ PUSH2 0x3932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x843C92FF2E 0x48 0xAD DUP10 0x1E 0xCD PUSH24 0x1D661BFB541308F49C73F90E23C7788910BE97E364736F6C PUSH4 0x43000804 STOP CALLER ",
              "sourceMap": "576:16875:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2092:24;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6502:585;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13851:824;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9223:1783;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1480:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5534:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1250:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;943:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1188:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16371:732;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1345:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3875:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4942:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17319:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1064:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4638:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1297:21;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5221:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4246:166;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6227:101;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2049:36;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;8539:388;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11352:1246;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;787:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1126:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6004:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;879:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7601:593;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1009:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14755:1453;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1418:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2092:24;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6502:585::-;6560:4;6621:13;6637:28;6655:9;6637:17;:28::i;:::-;6621:44;;6739:11;6713:37;;;;;;;;;;;;;;;;:6;:16;6720:8;6713:16;;;;;;;;;;;:22;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;6709:58;;6759:8;6752:15;;;;;6709:58;6798:34;6816:15;6798:17;:34::i;:::-;6786:8;:46;;6778:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6923:8;6895:6;:16;6902:8;6895:16;;;;;;;;;;;:25;;:36;;;;6967:13;6942:6;:16;6949:8;6942:16;;;;;;;;;;;:22;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6991:10;7007:8;6991:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7032:21;7044:8;7032:21;;;;;;:::i;:::-;;;;;;;;7071:8;7064:15;;;6502:585;;;;:::o;13851:824::-;13918:13;13934:34;13952:15;13934:17;:34::i;:::-;13918:50;;14011:12;13979:6;:16;13986:8;13979:16;;;;;;;;;;;:29;;:44;;;;14132:10;;14122:6;;14111:8;:17;;;;:::i;:::-;14110:32;;;;:::i;:::-;14090:15;:53;;:106;;;;;14195:1;14147:6;:16;14154:8;14147:16;;;;;;;;;;;:44;;;:49;14090:106;14086:582;;;14260:15;14213:6;:16;14220:8;14213:16;;;;;;;;;;;:44;;:62;;;;14330:15;14290:6;:16;14297:8;14290:16;;;;;;;;;;;:37;;:55;;;;14365:21;14377:8;14365:21;;;;;;:::i;:::-;;;;;;;;14086:582;;;14459:10;;14449:6;;14438:8;:17;;;;:::i;:::-;14437:32;;;;:::i;:::-;14417:15;:53;14413:255;;14532:15;14487:6;:16;14494:8;14487:16;;;;;;;;;;;:42;;:60;;;;14600:15;14562:6;:16;14569:8;14562:16;;;;;;;;;;;:35;;:53;;;;14635:21;14647:8;14635:21;;;;;;:::i;:::-;;;;;;;;14413:255;14086:582;13851:824;;:::o;9223:1783::-;9305:8;2972;3009:6;2995:9;;2983:8;:22;;;;:::i;:::-;:33;;;;:::i;:::-;2972:44;;3042:6;;3035:3;:13;;3027:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;9368:13:::1;9385:27;9402:9;9385:16;:27::i;:::-;9368:44;;9449:11;9463:35;9478:8;9488:9;9463:14;:35::i;:::-;9449:49;;9531:6;:16;9538:8;9531:16;;;;;;;;;;;:21;;:29;9553:6;9531:29;;;;;;;;;;;:38;;;;;;;;;;;;9517:52;;:10;:52;;;;9509:96;;;;;;;;;;;;:::i;:::-;;;;;;;;;9618:8;9629:26;9636:8;9646;9629:6;:26::i;:::-;9618:37;;9863:3;9814:6;:16;9821:8;9814:16;;;;;;;;;;;:21;;:29;9836:6;9814:29;;;;;;;;;;;:46;;;:52;;;;:::i;:::-;9757:15;;;;;;;;;;;:25;;;9783:10;9803:4;9757:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:110;;9749:151;;;;;;;;;;;;:::i;:::-;;;;;;;;;9965:15;;;;;;;;;;;:28;;;9994:10;10014:4;10071:3;10022:6;:16;10029:8;10022:16;;;;;;;;;;;:21;;:29;10044:6;10022:29;;;;;;;;;;;:46;;;:52;;;;:::i;:::-;9965:111;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10148:3;10118:6;:16;10125:8;10118:16;;;;;;;;;;;:27;;;:33;;;;:::i;:::-;10087:6;:16;10094:8;10087:16;;;;;;;;;;;:27;;:65;;;;10263:11;10224:50;;;;;;;;;;;;;;;;:6;:16;10231:8;10224:16;;;;;;;;;;;:21;;:29;10246:6;10224:29;;;;;;;;;;;:35;;;;;;;;;;;;:50;;;;;;;;;;;;;;;;;10220:541;;;10291:13;10307:64;10314:8;10324:6;:16;10331:8;10324:16;;;;;;;;;;;:21;;:29;10346:6;10324:29;;;;;;;;;;;:46;;;10307:6;:64::i;:::-;10291:80;;10416:15;;;;;;;;;;;:24;;;10441:6;:16;10448:8;10441:16;;;;;;;;;;;:21;;:29;10463:6;10441:29;;;;;;;;;;;:38;;;;;;;;;;;;10493:6;:16;10500:8;10493:16;;;;;;;;;;;:21;;:29;10515:6;10493:29;;;;;;;;;;;:46;;;10482:8;:57;;;;:::i;:::-;10416:125;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;10650:8;10620:6;:16;10627:8;10620:16;;;;;;;;;;;:27;;;:38;;;;:::i;:::-;10590:6;:16;10597:8;10590:16;;;;;;;;;;;:27;;:68;;;;10220:541;;;;10738:11;10700:6;:16;10707:8;10700:16;;;;;;;;;;;:21;;:29;10722:6;10700:29;;;;;;;;;;;:35;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10220:541;10843:10;10802:6;:16;10809:8;10802:16;;;;;;;;;;;:21;;:29;10824:6;10802:29;;;;;;;;;;;:38;;;:51;;;;;;;;;;;;;;;;;;10913:8;10864:6;:16;10871:8;10864:16;;;;;;;;;;;:21;;:29;10886:6;10864:29;;;;;;;;;;;:46;;:57;;;;10971:27;10981:8;10991:6;10971:27;;;;;;;:::i;:::-;;;;;;;;3080:1;;;9223:1783:::0;;;;;:::o;1480:18::-;;;;:::o;5534:146::-;5601:4;5641:6;:16;5648:8;5641:16;;;;;;;;;;;:24;;5666:5;5641:31;;;;;;;;;;;;;;;;;;;;;;;;5634:38;;5534:146;;;;:::o;1250:21::-;;;;:::o;943:34::-;;;;;;;;;;;;;:::o;1188:18::-;;;;:::o;16371:732::-;16495:13;16469:39;;;;;;;;;;;;;;;;:6;:16;16476:8;16469:16;;;;;;;;;;;:22;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;16461:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;16585:14;16603:45;16618:6;:16;16625:8;16618:16;;;;;;;;;;;:29;;;16603:14;:45::i;:::-;16585:64;;16757:12;16715:54;;;;;;;;;;;;;;;;:6;:16;16722:8;16715:16;;;;;;;;;;;:21;;:32;16737:9;16715:32;;;;;;;;;;;:38;;;;;;;;;;;;:54;;;;;;;;;;;;;;;;;;16707:86;;;;;;;;;;;;:::i;:::-;;;;;;;;;16848:15;;;;;;;;;;;:24;;;16873:6;:16;16880:8;16873:16;;;;;;;;;;;:21;;:32;16895:9;16873:32;;;;;;;;;;;:41;;;;;;;;;;;;16916:6;:16;16923:8;16916:16;;;;;;;;;;;:27;;;16848:96;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17035:12;16994:6;:16;17001:8;16994:16;;;;;;;;;;;:21;;:32;17016:9;16994:32;;;;;;;;;;;:38;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17065:30;17075:8;17085:9;17065:30;;;;;;;:::i;:::-;;;;;;;;16371:732;;:::o;1345:29::-;;;;:::o;3875:212::-;3939:4;3972:13;;3959:9;:26;3955:52;;3994:13;;3987:20;;;;3955:52;4071:6;;4052:13;;4039:9;:27;;;;:::i;:::-;4038:40;;;;:::i;:::-;4025:9;:54;;;;:::i;:::-;4018:61;;3875:212;;;;:::o;4942:148::-;5007:10;;:::i;:::-;5053:6;:16;5060:8;5053:16;;;;;;;;;;;:21;;:29;5075:6;5053:29;;;;;;;;;;;5046:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4942:148;;;;:::o;17319:125::-;3156:7;;;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3142:29;;:10;:29;;;3134:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;17387:15:::1;;;;;;;;;;;:24;;;17412:7;::::0;::::1;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17429:6;17387:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;17319:125:::0;:::o;1064:25::-;;;;:::o;4638:159::-;4697:4;4787:1;4777:6;;4757:15;4745:8;:28;;;;:::i;:::-;4744:39;;;;:::i;:::-;4743:45;;;;:::i;:::-;4735:54;;4638:159;;;:::o;1297:21::-;;;;:::o;5221:137::-;5279:4;5319:6;:16;5326:8;5319:16;;;;;;;;;;;:24;;:31;;;;5312:38;;5221:137;;;:::o;4246:166::-;4303:4;4332:1;4323:5;:10;4319:29;;4342:6;;4335:13;;;;4319:29;4397:6;;4386;;4375;;4366:5;:16;;;;:::i;:::-;:27;;;;:::i;:::-;:38;;;;:::i;:::-;4359:45;;4246:166;;;;:::o;6227:101::-;6280:4;6303:10;:17;;;;6296:24;;6227:101;:::o;2049:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8539:388::-;8635:14;8666:13;8682:28;8700:9;8682:17;:28::i;:::-;8666:44;;8730:11;8744:25;8759:9;8744:14;:25::i;:::-;8730:39;;8780:8;8791:26;8798:8;8808;8791:6;:26::i;:::-;8780:37;;8889:3;8840:6;:16;8847:8;8840:16;;;;;;;;;;;:21;;:29;8862:6;8840:29;;;;;;;;;;;:46;;;:52;;;;:::i;:::-;8828:64;;8903:16;;;8539:388;;;;;:::o;11352:1246::-;11442:8;2972;3009:6;2995:9;;2983:8;:22;;;;:::i;:::-;:33;;;;:::i;:::-;2972:44;;3042:6;;3035:3;:13;;3027:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;11463:13:::1;11479:27;11496:9;11479:16;:27::i;:::-;11463:43;;11518:11;11532:35;11547:8;11557:9;11532:14;:35::i;:::-;11518:49;;11629:10;11587:52;;:6;:16;11594:8;11587:16;;;;;;;;;;;:21;;:29;11609:6;11587:29;;;;;;;;;;;:38;;;;;;;;;;;;:52;;;11579:94;;;;;;;;;;;;:::i;:::-;;;;;;;;;11686:11;11700:26;11707:8;11717;11700:6;:26::i;:::-;11686:40;;11737:11;11751:64;11758:8;11768:6;:16;11775:8;11768:16;;;;;;;;;;;:21;;:29;11790:6;11768:29;;;;;;;;;;;:46;;;11751:6;:64::i;:::-;11737:78;;11841:6;11832;:15;11828:618;;;11938:6;11929;:15;;;;:::i;:::-;11872;;;;;;;;;;;:25;;;11898:10;11918:4;11872:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:73;;11864:114;;;;;;;;;;;;:::i;:::-;;;;;;;;;12061:15;;;;;;;;;;;:28;;;12090:10;12110:4;12127:6;12118;:15;;;;:::i;:::-;12061:74;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12219:6;12211;:14;;;;:::i;:::-;12180:6;:16;12187:8;12180:16;;;;;;;;;;;:27;;;:46;;;;:::i;:::-;12150:6;:16;12157:8;12150:16;;;;;;;;;;;:27;;:76;;;;11828:618;;;12266:6;12257;:15;12253:193;;;12289:15;;;;;;;;;;;:24;;;12314:10;12335:6;12326;:15;;;;:::i;:::-;12289:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12427:6;12418;:15;;;;:::i;:::-;12387:6;:16;12394:8;12387:16;;;;;;;;;;;:27;;;:47;;;;:::i;:::-;12357:6;:16;12364:8;12357:16;;;;;;;;;;;:27;;:77;;;;12253:193;11828:618;12505:8;12456:6;:16;12463:8;12456:16;;;;;;;;;;;:21;;:29;12478:6;12456:29;;;;;;;;;;;:46;;:57;;;;12563:27;12573:8;12583:6;12563:27;;;;;;;:::i;:::-;;;;;;;;3080:1;;;;11352:1246:::0;;;;;:::o;787:28::-;;;;;;;;;;;;:::o;1126:33::-;;;;;;;;;;;;;:::o;6004:146::-;6065:4;6114:6;:16;6121:8;6114:16;;;;;;;;;;;:27;;;6107:34;;6004:146;;;:::o;879:29::-;;;;;;;;;;;;;:::o;7601:593::-;7676:8;7710:11;7724:69;7777:15;7725:46;7743:27;7763:6;;7743:15;:19;;:27;;;;:::i;:::-;7725:17;:46::i;:::-;7724:52;;:69;;;;:::i;:::-;7710:83;;7805:12;7839:6;;7829;7820;;:15;;;;:::i;:::-;:26;;;;:::i;:::-;7805:41;;7919:20;7942:23;7956:8;7942:13;:23::i;:::-;7919:46;;8022:15;8013:6;8001:9;;7982:16;:28;;;;:::i;:::-;:37;;;;:::i;:::-;:55;;;;:::i;:::-;7976:61;;8048:9;8091:6;8079:9;;8060:16;:28;;;;:::i;:::-;:37;;;;:::i;:::-;8048:49;;8132:6;;8122:7;8115:4;:14;;;;:::i;:::-;:23;;;;:::i;:::-;8108:30;;8161:4;8155:3;:10;;;;:::i;:::-;8149:16;;8176:10;;;;7601:593;;;;:::o;1009:18::-;;;;:::o;14755:1453::-;14812:8;3335:1;3287:6;:16;3294:8;3287:16;;;;;;;;;;;:44;;;:49;;:100;;;;3386:1;3340:6;:16;3347:8;3340:16;;;;;;;;;;;:42;;;:47;;3287:100;3283:211;;;3429:14;3404:6;:16;3411:8;3404:16;;;;;;;;;;;:22;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3458:24;;;;;;;;;;:::i;:::-;;;;;;;;3283:211;3556:6;:16;3563:8;3556:16;;;;;;;;;;;:42;;;3508:6;:16;3515:8;3508:16;;;;;;;;;;;:44;;;:90;3504:201;;;3640:14;3615:6;:16;3622:8;3615:16;;;;;;;;;;;:22;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3669:24;;;;;;;;;;:::i;:::-;;;;;;;;3504:201;14867:13:::1;14841:39;;;;;;;;;;;;;;;;:6;:16;14848:8;14841:16;;;;;;;;;;;:22;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;14833:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;14944:15;14933:6;;14922:8;:17;;;;:::i;:::-;14921:38;;14912:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;15026:13;15001:6;:16;15008:8;15001:16;;;;;;;;;;;:22;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15079:14;15141:6;:16;15148:8;15141:16;;;;;;;;;;;:44;;;15096:6;:16;15103:8;15096:16;;;;;;;;;;;:42;;;:89;;;;:::i;:::-;15079:106;;15196:13;15250:6;:16;15257:8;15250:16;;;;;;;;;;;:37;;;15212:6;:16;15219:8;15212:16;;;;;;;;;;;:35;;;:75;;;;:::i;:::-;15196:91;;15407:77;15422:40;;;;;;;;15451:9;15422:40;;;;::::0;15473:8:::1;15407:14;:77::i;:::-;15405:84;;;15400:90;;15368:6;:16;15375:8;15368:16;;;;;;;;;;;:29;;:122;;;;15659:4;15651:3;15618:6;:16;15625:8;15618:16;;;;;;;;;;;:29;;;:36;;15617:47;;;;:::i;:::-;15608:6;;15601:3;15568:6;:16;15575:8;15568:16;;;;;;;;;;;:29;;;:36;;15567:47;;;;:::i;:::-;:97;;;;:::i;:::-;15535:6;:16;15542:8;15535:16;;;;;;;;;;;:29;;:129;;;;15725:20;15792:6;15779:9;;15748:6;:16;15755:8;15748:16;;;;;;;;;;;:27;;;:41;;;;:::i;:::-;:50;;;;:::i;:::-;15725:73;;15809:22;15880:6;15865:11;;15834:6;:16;15841:8;15834:16;;;;;;;;;;;:27;;;:43;;;;:::i;:::-;:52;;;;:::i;:::-;15809:77;;15975:17;15957:15;15927:6;:16;15934:8;15927:16;;;;;;;;;;;:27;;;:45;;;;:::i;:::-;:65;;;;:::i;:::-;15897:6;:16;15904:8;15897:16;;;;;;;;;;;:27;;:95;;;;16038:15;;;;;;;;;;;:24;;;16063:11;;;;;;;;;;;16076:15;16038:54;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16103:15;;;;;;;;;;;:24;;;16128:7;::::0;::::1;;;;;;;;:13;;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16145:17;16103:60;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;16179:21;16191:8;16179:21;;;;;;:::i;:::-;;;;;;;;3715:1;;;;14755:1453:::0;;:::o;1418:22::-;;;;:::o;7252:341::-;7324:4;7340:11;7354:25;7369:9;7354:14;:25::i;:::-;7340:39;;7433:9;7394:48;;;;;;;;;;;;;;;;:6;:16;7401:8;7394:16;;;;;;;;;;;:21;;:29;7416:6;7394:29;;;;;;;;;;;:35;;;;;;;;;;;;:48;;;;;;;;;;;;;;;;;7390:67;;7451:6;7444:13;;;;;7390:67;7507:6;7468;:16;7475:8;7468:16;;;;;;;;;;;:21;;:29;7490:6;7468:29;;;;;;;;;;;:36;;:45;;;;7524:6;:16;7531:8;7524:16;;;;;;;;;;;:24;;7554:6;7524:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7579:6;7572:13;;;7252:341;;;;;:::o;2672:96:1:-;2730:7;2760:1;2756;:5;;;;:::i;:::-;2749:12;;2672:96;;;;:::o;3039:::-;3097:7;3127:1;3123;:5;;;;:::i;:::-;3116:12;;3039:96;;;;:::o;827:195:2:-;897:16;;:::i;:::-;938:1;933;:6;;;;925:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;984:31;;;;;;;;1012:1;1004:10;;994:4;:7;;;:20;;;;:::i;:::-;984:31;;;;;977:38;;827:195;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;7:143:8:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:137::-;210:5;241:6;235:13;226:22;;257:30;281:5;257:30;:::i;:::-;216:77;;;;:::o;299:139::-;345:5;383:6;370:20;361:29;;399:33;426:5;399:33;:::i;:::-;351:87;;;;:::o;444:143::-;501:5;532:6;526:13;517:22;;548:33;575:5;548:33;:::i;:::-;507:80;;;;:::o;593:284::-;663:6;712:2;700:9;691:7;687:23;683:32;680:2;;;728:1;725;718:12;680:2;771:1;796:64;852:7;843:6;832:9;828:22;796:64;:::i;:::-;786:74;;742:128;670:207;;;;:::o;883:278::-;950:6;999:2;987:9;978:7;974:23;970:32;967:2;;;1015:1;1012;1005:12;967:2;1058:1;1083:61;1136:7;1127:6;1116:9;1112:22;1083:61;:::i;:::-;1073:71;;1029:125;957:204;;;;:::o;1167:262::-;1226:6;1275:2;1263:9;1254:7;1250:23;1246:32;1243:2;;;1291:1;1288;1281:12;1243:2;1334:1;1359:53;1404:7;1395:6;1384:9;1380:22;1359:53;:::i;:::-;1349:63;;1305:117;1233:196;;;;:::o;1435:284::-;1505:6;1554:2;1542:9;1533:7;1529:23;1525:32;1522:2;;;1570:1;1567;1560:12;1522:2;1613:1;1638:64;1694:7;1685:6;1674:9;1670:22;1638:64;:::i;:::-;1628:74;;1584:128;1512:207;;;;:::o;1725:407::-;1793:6;1801;1850:2;1838:9;1829:7;1825:23;1821:32;1818:2;;;1866:1;1863;1856:12;1818:2;1909:1;1934:53;1979:7;1970:6;1959:9;1955:22;1934:53;:::i;:::-;1924:63;;1880:117;2036:2;2062:53;2107:7;2098:6;2087:9;2083:22;2062:53;:::i;:::-;2052:63;;2007:118;1808:324;;;;;:::o;2138:552::-;2215:6;2223;2231;2280:2;2268:9;2259:7;2255:23;2251:32;2248:2;;;2296:1;2293;2286:12;2248:2;2339:1;2364:53;2409:7;2400:6;2389:9;2385:22;2364:53;:::i;:::-;2354:63;;2310:117;2466:2;2492:53;2537:7;2528:6;2517:9;2513:22;2492:53;:::i;:::-;2482:63;;2437:118;2594:2;2620:53;2665:7;2656:6;2645:9;2641:22;2620:53;:::i;:::-;2610:63;;2565:118;2238:452;;;;;:::o;2696:147::-;2791:45;2830:5;2791:45;:::i;:::-;2786:3;2779:58;2769:74;;:::o;2849:142::-;2952:32;2978:5;2952:32;:::i;:::-;2947:3;2940:45;2930:61;;:::o;2997:108::-;3074:24;3092:5;3074:24;:::i;:::-;3069:3;3062:37;3052:53;;:::o;3111:118::-;3198:24;3216:5;3198:24;:::i;:::-;3193:3;3186:37;3176:53;;:::o;3235:157::-;3335:50;3379:5;3335:50;:::i;:::-;3330:3;3323:63;3313:79;;:::o;3398:175::-;3507:59;3560:5;3507:59;:::i;:::-;3502:3;3495:72;3485:88;;:::o;3579:175::-;3688:59;3741:5;3688:59;:::i;:::-;3683:3;3676:72;3666:88;;:::o;3760:149::-;3856:46;3896:5;3856:46;:::i;:::-;3851:3;3844:59;3834:75;;:::o;3915:135::-;3999:44;4037:5;3999:44;:::i;:::-;3994:3;3987:57;3977:73;;:::o;4056:366::-;4198:3;4219:67;4283:2;4278:3;4219:67;:::i;:::-;4212:74;;4295:93;4384:3;4295:93;:::i;:::-;4413:2;4408:3;4404:12;4397:19;;4202:220;;;:::o;4428:366::-;4570:3;4591:67;4655:2;4650:3;4591:67;:::i;:::-;4584:74;;4667:93;4756:3;4667:93;:::i;:::-;4785:2;4780:3;4776:12;4769:19;;4574:220;;;:::o;4800:366::-;4942:3;4963:67;5027:2;5022:3;4963:67;:::i;:::-;4956:74;;5039:93;5128:3;5039:93;:::i;:::-;5157:2;5152:3;5148:12;5141:19;;4946:220;;;:::o;5172:366::-;5314:3;5335:67;5399:2;5394:3;5335:67;:::i;:::-;5328:74;;5411:93;5500:3;5411:93;:::i;:::-;5529:2;5524:3;5520:12;5513:19;;5318:220;;;:::o;5544:366::-;5686:3;5707:67;5771:2;5766:3;5707:67;:::i;:::-;5700:74;;5783:93;5872:3;5783:93;:::i;:::-;5901:2;5896:3;5892:12;5885:19;;5690:220;;;:::o;5916:366::-;6058:3;6079:67;6143:2;6138:3;6079:67;:::i;:::-;6072:74;;6155:93;6244:3;6155:93;:::i;:::-;6273:2;6268:3;6264:12;6257:19;;6062:220;;;:::o;6288:366::-;6430:3;6451:67;6515:2;6510:3;6451:67;:::i;:::-;6444:74;;6527:93;6616:3;6527:93;:::i;:::-;6645:2;6640:3;6636:12;6629:19;;6434:220;;;:::o;6660:366::-;6802:3;6823:67;6887:2;6882:3;6823:67;:::i;:::-;6816:74;;6899:93;6988:3;6899:93;:::i;:::-;7017:2;7012:3;7008:12;7001:19;;6806:220;;;:::o;7032:366::-;7174:3;7195:67;7259:2;7254:3;7195:67;:::i;:::-;7188:74;;7271:93;7360:3;7271:93;:::i;:::-;7389:2;7384:3;7380:12;7373:19;;7178:220;;;:::o;7404:366::-;7546:3;7567:67;7631:2;7626:3;7567:67;:::i;:::-;7560:74;;7643:93;7732:3;7643:93;:::i;:::-;7761:2;7756:3;7752:12;7745:19;;7550:220;;;:::o;7776:366::-;7918:3;7939:67;8003:2;7998:3;7939:67;:::i;:::-;7932:74;;8015:93;8104:3;8015:93;:::i;:::-;8133:2;8128:3;8124:12;8117:19;;7922:220;;;:::o;8148:366::-;8290:3;8311:67;8375:2;8370:3;8311:67;:::i;:::-;8304:74;;8387:93;8476:3;8387:93;:::i;:::-;8505:2;8500:3;8496:12;8489:19;;8294:220;;;:::o;8566:873::-;8705:4;8700:3;8696:14;8794:4;8787:5;8783:16;8777:23;8813:63;8870:4;8865:3;8861:14;8847:12;8813:63;:::i;:::-;8720:166;8972:4;8965:5;8961:16;8955:23;8991:63;9048:4;9043:3;9039:14;9025:12;8991:63;:::i;:::-;8896:168;9158:4;9151:5;9147:16;9141:23;9177:63;9234:4;9229:3;9225:14;9211:12;9177:63;:::i;:::-;9074:176;9333:4;9326:5;9322:16;9316:23;9352:70;9416:4;9411:3;9407:14;9393:12;9352:70;:::i;:::-;9260:172;8674:765;;;:::o;9445:108::-;9522:24;9540:5;9522:24;:::i;:::-;9517:3;9510:37;9500:53;;:::o;9559:118::-;9646:24;9664:5;9646:24;:::i;:::-;9641:3;9634:37;9624:53;;:::o;9683:254::-;9792:4;9830:2;9819:9;9815:18;9807:26;;9843:87;9927:1;9916:9;9912:17;9903:6;9843:87;:::i;:::-;9797:140;;;;:::o;9943:348::-;10072:4;10110:2;10099:9;10095:18;10087:26;;10123:79;10199:1;10188:9;10184:17;10175:6;10123:79;:::i;:::-;10212:72;10280:2;10269:9;10265:18;10256:6;10212:72;:::i;:::-;10077:214;;;;;:::o;10297:332::-;10418:4;10456:2;10445:9;10441:18;10433:26;;10469:71;10537:1;10526:9;10522:17;10513:6;10469:71;:::i;:::-;10550:72;10618:2;10607:9;10603:18;10594:6;10550:72;:::i;:::-;10423:206;;;;;:::o;10635:442::-;10784:4;10822:2;10811:9;10807:18;10799:26;;10835:71;10903:1;10892:9;10888:17;10879:6;10835:71;:::i;:::-;10916:72;10984:2;10973:9;10969:18;10960:6;10916:72;:::i;:::-;10998;11066:2;11055:9;11051:18;11042:6;10998:72;:::i;:::-;10789:288;;;;;;:::o;11083:332::-;11204:4;11242:2;11231:9;11227:18;11219:26;;11255:71;11323:1;11312:9;11308:17;11299:6;11255:71;:::i;:::-;11336:72;11404:2;11393:9;11389:18;11380:6;11336:72;:::i;:::-;11209:206;;;;;:::o;11421:248::-;11527:4;11565:2;11554:9;11550:18;11542:26;;11578:84;11659:1;11648:9;11644:17;11635:6;11578:84;:::i;:::-;11532:137;;;;:::o;11675:266::-;11790:4;11828:2;11817:9;11813:18;11805:26;;11841:93;11931:1;11920:9;11916:17;11907:6;11841:93;:::i;:::-;11795:146;;;;:::o;11947:266::-;12062:4;12100:2;12089:9;12085:18;12077:26;;12113:93;12203:1;12192:9;12188:17;12179:6;12113:93;:::i;:::-;12067:146;;;;:::o;12219:419::-;12385:4;12423:2;12412:9;12408:18;12400:26;;12472:9;12466:4;12462:20;12458:1;12447:9;12443:17;12436:47;12500:131;12626:4;12500:131;:::i;:::-;12492:139;;12390:248;;;:::o;12644:419::-;12810:4;12848:2;12837:9;12833:18;12825:26;;12897:9;12891:4;12887:20;12883:1;12872:9;12868:17;12861:47;12925:131;13051:4;12925:131;:::i;:::-;12917:139;;12815:248;;;:::o;13069:419::-;13235:4;13273:2;13262:9;13258:18;13250:26;;13322:9;13316:4;13312:20;13308:1;13297:9;13293:17;13286:47;13350:131;13476:4;13350:131;:::i;:::-;13342:139;;13240:248;;;:::o;13494:419::-;13660:4;13698:2;13687:9;13683:18;13675:26;;13747:9;13741:4;13737:20;13733:1;13722:9;13718:17;13711:47;13775:131;13901:4;13775:131;:::i;:::-;13767:139;;13665:248;;;:::o;13919:419::-;14085:4;14123:2;14112:9;14108:18;14100:26;;14172:9;14166:4;14162:20;14158:1;14147:9;14143:17;14136:47;14200:131;14326:4;14200:131;:::i;:::-;14192:139;;14090:248;;;:::o;14344:419::-;14510:4;14548:2;14537:9;14533:18;14525:26;;14597:9;14591:4;14587:20;14583:1;14572:9;14568:17;14561:47;14625:131;14751:4;14625:131;:::i;:::-;14617:139;;14515:248;;;:::o;14769:419::-;14935:4;14973:2;14962:9;14958:18;14950:26;;15022:9;15016:4;15012:20;15008:1;14997:9;14993:17;14986:47;15050:131;15176:4;15050:131;:::i;:::-;15042:139;;14940:248;;;:::o;15194:419::-;15360:4;15398:2;15387:9;15383:18;15375:26;;15447:9;15441:4;15437:20;15433:1;15422:9;15418:17;15411:47;15475:131;15601:4;15475:131;:::i;:::-;15467:139;;15365:248;;;:::o;15619:419::-;15785:4;15823:2;15812:9;15808:18;15800:26;;15872:9;15866:4;15862:20;15858:1;15847:9;15843:17;15836:47;15900:131;16026:4;15900:131;:::i;:::-;15892:139;;15790:248;;;:::o;16044:419::-;16210:4;16248:2;16237:9;16233:18;16225:26;;16297:9;16291:4;16287:20;16283:1;16272:9;16268:17;16261:47;16325:131;16451:4;16325:131;:::i;:::-;16317:139;;16215:248;;;:::o;16469:419::-;16635:4;16673:2;16662:9;16658:18;16650:26;;16722:9;16716:4;16712:20;16708:1;16697:9;16693:17;16686:47;16750:131;16876:4;16750:131;:::i;:::-;16742:139;;16640:248;;;:::o;16894:419::-;17060:4;17098:2;17087:9;17083:18;17075:26;;17147:9;17141:4;17137:20;17133:1;17122:9;17118:17;17111:47;17175:131;17301:4;17175:131;:::i;:::-;17167:139;;17065:248;;;:::o;17319:307::-;17454:4;17492:3;17481:9;17477:19;17469:27;;17506:113;17616:1;17605:9;17601:17;17592:6;17506:113;:::i;:::-;17459:167;;;;:::o;17632:222::-;17725:4;17763:2;17752:9;17748:18;17740:26;;17776:71;17844:1;17833:9;17829:17;17820:6;17776:71;:::i;:::-;17730:124;;;;:::o;17860:1126::-;18186:4;18224:3;18213:9;18209:19;18201:27;;18238:71;18306:1;18295:9;18291:17;18282:6;18238:71;:::i;:::-;18319:81;18396:2;18385:9;18381:18;18372:6;18319:81;:::i;:::-;18410:72;18478:2;18467:9;18463:18;18454:6;18410:72;:::i;:::-;18492;18560:2;18549:9;18545:18;18536:6;18492:72;:::i;:::-;18574:73;18642:3;18631:9;18627:19;18618:6;18574:73;:::i;:::-;18657;18725:3;18714:9;18710:19;18701:6;18657:73;:::i;:::-;18740;18808:3;18797:9;18793:19;18784:6;18740:73;:::i;:::-;18823;18891:3;18880:9;18876:19;18867:6;18823:73;:::i;:::-;18906;18974:3;18963:9;18959:19;18950:6;18906:73;:::i;:::-;18191:795;;;;;;;;;;;;:::o;18992:332::-;19113:4;19151:2;19140:9;19136:18;19128:26;;19164:71;19232:1;19221:9;19217:17;19208:6;19164:71;:::i;:::-;19245:72;19313:2;19302:9;19298:18;19289:6;19245:72;:::i;:::-;19118:206;;;;;:::o;19330:169::-;19414:11;19448:6;19443:3;19436:19;19488:4;19483:3;19479:14;19464:29;;19426:73;;;;:::o;19505:305::-;19545:3;19564:20;19582:1;19564:20;:::i;:::-;19559:25;;19598:20;19616:1;19598:20;:::i;:::-;19593:25;;19752:1;19684:66;19680:74;19677:1;19674:81;19671:2;;;19758:18;;:::i;:::-;19671:2;19802:1;19799;19795:9;19788:16;;19549:261;;;;:::o;19816:185::-;19856:1;19873:20;19891:1;19873:20;:::i;:::-;19868:25;;19907:20;19925:1;19907:20;:::i;:::-;19902:25;;19946:1;19936:2;;19951:18;;:::i;:::-;19936:2;19993:1;19990;19986:9;19981:14;;19858:143;;;;:::o;20007:185::-;20047:1;20064:20;20082:1;20064:20;:::i;:::-;20059:25;;20098:20;20116:1;20098:20;:::i;:::-;20093:25;;20137:1;20127:2;;20142:18;;:::i;:::-;20127:2;20184:1;20181;20177:9;20172:14;;20049:143;;;;:::o;20198:348::-;20238:7;20261:20;20279:1;20261:20;:::i;:::-;20256:25;;20295:20;20313:1;20295:20;:::i;:::-;20290:25;;20483:1;20415:66;20411:74;20408:1;20405:81;20400:1;20393:9;20386:17;20382:105;20379:2;;;20490:18;;:::i;:::-;20379:2;20538:1;20535;20531:9;20520:20;;20246:300;;;;:::o;20552:191::-;20592:4;20612:20;20630:1;20612:20;:::i;:::-;20607:25;;20646:20;20664:1;20646:20;:::i;:::-;20641:25;;20685:1;20682;20679:8;20676:2;;;20690:18;;:::i;:::-;20676:2;20735:1;20732;20728:9;20720:17;;20597:146;;;;:::o;20749:96::-;20786:7;20815:24;20833:5;20815:24;:::i;:::-;20804:35;;20794:51;;;:::o;20851:104::-;20896:7;20925:24;20943:5;20925:24;:::i;:::-;20914:35;;20904:51;;;:::o;20961:90::-;20995:7;21038:5;21031:13;21024:21;21013:32;;21003:48;;;:::o;21057:133::-;21105:7;21134:5;21123:16;;21140:44;21178:5;21140:44;:::i;:::-;21113:77;;;:::o;21196:129::-;21242:7;21271:5;21260:16;;21277:42;21313:5;21277:42;:::i;:::-;21250:75;;;:::o;21331:126::-;21368:7;21408:42;21401:5;21397:54;21386:65;;21376:81;;;:::o;21463:142::-;21500:7;21540:58;21533:5;21529:70;21518:81;;21508:97;;;:::o;21611:77::-;21648:7;21677:5;21666:16;;21656:32;;;:::o;21694:134::-;21752:9;21785:37;21816:5;21785:37;:::i;:::-;21772:50;;21762:66;;;:::o;21834:152::-;21897:9;21930:50;21974:5;21930:50;:::i;:::-;21917:63;;21907:79;;;:::o;21992:126::-;22055:9;22088:24;22106:5;22088:24;:::i;:::-;22075:37;;22065:53;;;:::o;22124:170::-;22196:9;22229:59;22282:5;22229:59;:::i;:::-;22216:72;;22206:88;;;:::o;22300:135::-;22372:9;22405:24;22423:5;22405:24;:::i;:::-;22392:37;;22382:53;;;:::o;22441:170::-;22513:9;22546:59;22599:5;22546:59;:::i;:::-;22533:72;;22523:88;;;:::o;22617:135::-;22689:9;22722:24;22740:5;22722:24;:::i;:::-;22709:37;;22699:53;;;:::o;22758:133::-;22817:9;22850:35;22879:5;22850:35;:::i;:::-;22837:48;;22827:64;;;:::o;22897:129::-;22954:9;22987:33;23014:5;22987:33;:::i;:::-;22974:46;;22964:62;;;:::o;23032:126::-;23082:9;23115:37;23146:5;23115:37;:::i;:::-;23102:50;;23092:66;;;:::o;23164:113::-;23214:9;23247:24;23265:5;23247:24;:::i;:::-;23234:37;;23224:53;;;:::o;23283:176::-;23315:1;23332:20;23350:1;23332:20;:::i;:::-;23327:25;;23366:20;23384:1;23366:20;:::i;:::-;23361:25;;23405:1;23395:2;;23410:18;;:::i;:::-;23395:2;23451:1;23448;23444:9;23439:14;;23317:142;;;;:::o;23465:180::-;23513:77;23510:1;23503:88;23610:4;23607:1;23600:15;23634:4;23631:1;23624:15;23651:180;23699:77;23696:1;23689:88;23796:4;23793:1;23786:15;23820:4;23817:1;23810:15;23837:180;23885:77;23882:1;23875:88;23982:4;23979:1;23972:15;24006:4;24003:1;23996:15;24023:164;24163:16;24159:1;24151:6;24147:14;24140:40;24129:58;:::o;24193:176::-;24333:28;24329:1;24321:6;24317:14;24310:52;24299:70;:::o;24375:166::-;24515:18;24511:1;24503:6;24499:14;24492:42;24481:60;:::o;24547:176::-;24687:28;24683:1;24675:6;24671:14;24664:52;24653:70;:::o;24729:179::-;24869:31;24865:1;24857:6;24853:14;24846:55;24835:73;:::o;24914:169::-;25054:21;25050:1;25042:6;25038:14;25031:45;25020:63;:::o;25089:166::-;25229:18;25225:1;25217:6;25213:14;25206:42;25195:60;:::o;25261:179::-;25401:31;25397:1;25389:6;25385:14;25378:55;25367:73;:::o;25446:166::-;25586:18;25582:1;25574:6;25570:14;25563:42;25552:60;:::o;25618:181::-;25758:33;25754:1;25746:6;25742:14;25735:57;25724:75;:::o;25805:178::-;25945:30;25941:1;25933:6;25929:14;25922:54;25911:72;:::o;25989:173::-;26129:25;26125:1;26117:6;26113:14;26106:49;26095:67;:::o;26168:116::-;26252:1;26245:5;26242:12;26232:2;;26258:18;;:::i;:::-;26232:2;26222:62;:::o;26290:114::-;26372:1;26365:5;26362:12;26352:2;;26378:18;;:::i;:::-;26352:2;26342:62;:::o;26410:122::-;26483:24;26501:5;26483:24;:::i;:::-;26476:5;26473:35;26463:2;;26522:1;26519;26512:12;26463:2;26453:79;:::o;26538:116::-;26608:21;26623:5;26608:21;:::i;:::-;26601:5;26598:32;26588:2;;26644:1;26641;26634:12;26588:2;26578:76;:::o;26660:122::-;26733:24;26751:5;26733:24;:::i;:::-;26726:5;26723:35;26713:2;;26772:1;26769;26762:12;26713:2;26703:79;:::o"
            },
            "methodIdentifiers": {
              "accountingToken()": "da68cf8b",
              "buyLot(uint256,uint256,uint256)": "3c80d8ea",
              "clcAmountToApprove(uint256,uint256,uint256)": "a4d246ff",
              "clcFrameTimestamp(uint256)": "5b3ad63e",
              "clcFramesLeft(uint256)": "7d6ae6a0",
              "clcLotInterval(uint256)": "888bdbcd",
              "clcTax(uint256,uint256)": "e107fb4f",
              "closeFrame(uint256)": "fc950702",
              "dPrice()": "499a0fc4",
              "emptyFunds(uint256)": "6f7cb60b",
              "factory()": "c45a0155",
              "feeMarket()": "410f0710",
              "feeProtocol()": "527eb4bc",
              "frames(uint256)": "a10340bc",
              "framesKeys(uint256)": "050e8840",
              "getLot(uint256,uint256)": "6f1aefc3",
              "getLotKey(uint256,uint256)": "3e16bc20",
              "getLotsCount(uint256)": "830ab119",
              "getNumberOfFrameKeys()": "89da88a3",
              "getOrCreateFrame(uint256)": "0cbcff8f",
              "getRewardAmount(uint256)": "c84993af",
              "initTimestamp()": "7358c57a",
              "minTax()": "3d09a82a",
              "ownerMarket()": "45084775",
              "period()": "ef78d4fd",
              "settleLot(uint256)": "4d3ee2dc",
              "tReporting()": "ff5c86b0",
              "taxMarket()": "7e996639",
              "uniswapPair()": "c816841b",
              "updateFramePrices(uint256)": "2a0efd44",
              "updateLotPrice(uint256,uint256,uint256)": "bb15d2dd"
            }
          }
        }
      },
      "contracts/MarketFactory.sol": {
        "MarketFactory": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_uniswapFactory",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "_uniswapPair",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "_period",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_initTimestamp",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_tax",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_fee",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_dPrice",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_tReporting",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "_minTax",
                  "type": "uint256"
                }
              ],
              "name": "addMarket",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getMarketsCount",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "name": "markets",
              "outputs": [
                {
                  "internalType": "contract Market",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "marketsKeys",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "uniswapFactory",
              "outputs": [
                {
                  "internalType": "contract IUniswapV2Factory",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:805:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "70:80:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "80:22:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "89:5:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "89:13:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "80:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "138:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "111:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "111:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "111:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "48:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "56:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "64:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:143:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "233:207:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "279:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "288:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "291:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "281:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "281:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "281:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "254:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "263:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "250:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "250:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "275:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "246:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "246:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "243:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "305:128:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "320:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "334:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "324:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "349:74:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "395:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "406:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "391:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "391:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "415:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address_fromMemory",
                                      "nodeType": "YulIdentifier",
                                      "src": "359:31:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "359:64:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "349:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "203:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "214:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "226:6:8",
                            "type": ""
                          }
                        ],
                        "src": "156:284:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "491:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "501:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "530:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "512:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "512:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "501:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "473:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "483:7:8",
                            "type": ""
                          }
                        ],
                        "src": "446:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "593:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "603:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "618:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "625:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "614:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "614:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "603:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "575:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "585:7:8",
                            "type": ""
                          }
                        ],
                        "src": "548:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "723:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "780:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "789:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "792:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "782:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "782:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "782:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "746:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "771:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "753:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "753:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "743:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "743:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "736:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "736:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "733:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "716:5:8",
                            "type": ""
                          }
                        ],
                        "src": "680:122:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x4665 CODESIZE SUB DUP1 PUSH2 0x4665 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0xCE JUMP JUMPDEST CALLER PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x140 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xC8 DUP2 PUSH2 0x129 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xEE DUP5 DUP3 DUP6 ADD PUSH2 0xB9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x102 DUP3 PUSH2 0x109 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x132 DUP2 PUSH2 0xF7 JUMP JUMPDEST DUP2 EQ PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x4516 DUP1 PUSH2 0x14F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x6A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27FA35C3 EQ PUSH3 0x6F JUMPI DUP1 PUSH4 0x46A81C00 EQ PUSH3 0x91 JUMPI DUP1 PUSH4 0x8BDB2AFA EQ PUSH3 0xC7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0xE9 JUMPI DUP1 PUSH4 0x8E8F294B EQ PUSH3 0x10B JUMPI DUP1 PUSH4 0xF4541DA5 EQ PUSH3 0x141 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x79 PUSH3 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x88 SWAP2 SWAP1 PUSH3 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xA9 SWAP2 SWAP1 PUSH3 0x4A8 JUMP JUMPDEST PUSH3 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xBE SWAP2 SWAP1 PUSH3 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xD1 PUSH3 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xE0 SWAP2 SWAP1 PUSH3 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xF3 PUSH3 0x1D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x102 SWAP2 SWAP1 PUSH3 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x123 SWAP2 SWAP1 PUSH3 0x3A3 JUMP JUMPDEST PUSH3 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x138 SWAP2 SWAP1 PUSH3 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x159 SWAP2 SWAP1 PUSH3 0x3CF JUMP JUMPDEST PUSH3 0x22B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH3 0x245 SWAP1 PUSH3 0x367 JUMP JUMPDEST PUSH3 0x25A SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3D37 DUP1 PUSH3 0x7AA DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x386 DUP2 PUSH3 0x775 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x39D DUP2 PUSH3 0x78F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3C6 DUP5 DUP3 DUP6 ADD PUSH3 0x375 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH3 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3FF DUP13 DUP3 DUP14 ADD PUSH3 0x375 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH3 0x412 DUP13 DUP3 DUP14 ADD PUSH3 0x375 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH3 0x425 DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH3 0x438 DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH3 0x44B DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH3 0x45E DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH3 0x471 DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 PUSH3 0x484 DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH3 0x498 DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x4CB DUP5 DUP3 DUP6 ADD PUSH3 0x38C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4DF DUP2 PUSH3 0x66F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x4F0 DUP2 PUSH3 0x6AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x501 DUP2 PUSH3 0x6D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x512 DUP2 PUSH3 0x6FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x523 DUP2 PUSH3 0x725 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x534 DUP2 PUSH3 0x74D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x545 DUP2 PUSH3 0x6A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x562 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x4D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x57F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x4F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH3 0x59D PUSH1 0x0 DUP4 ADD DUP14 PUSH3 0x518 JUMP JUMPDEST PUSH3 0x5AC PUSH1 0x20 DUP4 ADD DUP13 PUSH3 0x4E5 JUMP JUMPDEST PUSH3 0x5BB PUSH1 0x40 DUP4 ADD DUP12 PUSH3 0x507 JUMP JUMPDEST PUSH3 0x5CA PUSH1 0x60 DUP4 ADD DUP11 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x5D9 PUSH1 0x80 DUP4 ADD DUP10 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x5E8 PUSH1 0xA0 DUP4 ADD DUP9 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x5F7 PUSH1 0xC0 DUP4 ADD DUP8 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x606 PUSH1 0xE0 DUP4 ADD DUP7 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x616 PUSH2 0x100 DUP4 ADD DUP6 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x626 PUSH2 0x120 DUP4 ADD DUP5 PUSH3 0x53A JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x64C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x669 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x53A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x67C DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6BA DUP3 PUSH3 0x6C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6CE DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6E2 DUP3 PUSH3 0x6E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6F6 DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x70A DUP3 PUSH3 0x711 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x71E DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x732 DUP3 PUSH3 0x739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x746 DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x75A DUP3 PUSH3 0x761 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76E DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x780 DUP2 PUSH3 0x66F JUMP JUMPDEST DUP2 EQ PUSH3 0x78C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x79A DUP2 PUSH3 0x6A3 JUMP JUMPDEST DUP2 EQ PUSH3 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x9 SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3D37 CODESIZE SUB DUP1 PUSH3 0x3D37 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x1EA JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x3BC JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x19F DUP2 PUSH3 0x354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1B6 DUP2 PUSH3 0x36E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1CD DUP2 PUSH3 0x388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E4 DUP2 PUSH3 0x3A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x21B DUP14 DUP3 DUP15 ADD PUSH3 0x1BC JUMP JUMPDEST SWAP11 POP POP PUSH1 0x20 PUSH3 0x22E DUP14 DUP3 DUP15 ADD PUSH3 0x18E JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 PUSH3 0x241 DUP14 DUP3 DUP15 ADD PUSH3 0x1A5 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x60 PUSH3 0x254 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x80 PUSH3 0x267 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xA0 PUSH3 0x27A DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xC0 PUSH3 0x28D DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xE0 PUSH3 0x2A0 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 PUSH3 0x2B4 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x120 PUSH3 0x2C8 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E7 DUP3 PUSH3 0x32A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2FB DUP3 PUSH3 0x2DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30F DUP3 PUSH3 0x2DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x323 DUP3 PUSH3 0x2DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x35F DUP2 PUSH3 0x2EE JUMP JUMPDEST DUP2 EQ PUSH3 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x379 DUP2 PUSH3 0x302 JUMP JUMPDEST DUP2 EQ PUSH3 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x393 DUP2 PUSH3 0x316 JUMP JUMPDEST DUP2 EQ PUSH3 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x3AD DUP2 PUSH3 0x34A JUMP JUMPDEST DUP2 EQ PUSH3 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x396B DUP1 PUSH3 0x3CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D6AE6A0 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE107FB4F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE107FB4F EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x608 JUMPI DUP1 PUSH4 0xFC950702 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x642 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x5BA JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x89DA88A3 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x532 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x7D6AE6A0 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x7E996639 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x830AB119 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x888BDBCD EQ PUSH2 0x47C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x45084775 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x6F7CB60B EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x3E0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x45084775 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x4D3EE2DC EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x346 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x2D0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xCBCFF8F EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x2A0EFD44 EQ PUSH2 0x24A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x16DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x436 PUSH2 0x196A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B4 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x1AA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH2 0x1FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x30D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x574 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x30B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1FFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C2 PUSH2 0x201C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x309C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x610 PUSH2 0x211E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x640 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x2124 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64A PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x690 DUP4 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x728 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x736 JUMPI DUP1 SWAP2 POP POP PUSH2 0x866 JUMP JUMPDEST PUSH2 0x73F TIMESTAMP PUSH2 0x1565 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP1 PUSH2 0x314D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7FC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x876 TIMESTAMP PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP NUMBER PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0x3 SLOAD DUP3 PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x94A JUMPI DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x3 SLOAD DUP3 PUSH2 0x95B SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH2 0x965 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST TIMESTAMP LT PUSH2 0x9D9 JUMPI DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP4 PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x9FD SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA4F DUP7 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA5D DUP3 DUP8 PUSH2 0x28EE JUMP JUMPDEST SWAP1 POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0F SWAP1 PUSH2 0x320D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB24 DUP4 DUP8 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP3 SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x2C7D JUMP JUMPDEST LT ISZERO PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC41 SWAP1 PUSH2 0x322D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD30 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDA7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE17 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 PUSH2 0xE53 DUP5 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0xF14 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF31 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF83 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x103A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1109 SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1171 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x128C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1283 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AD PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x12E8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1358 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1399 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1390 SWAP1 PUSH2 0x318D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1456 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1484 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1553 SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x157A JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD DUP4 PUSH2 0x158B SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x1595 SWAP2 SWAP1 PUSH2 0x361E JUMP JUMPDEST DUP3 PUSH2 0x15A0 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B0 PUSH2 0x2B07 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1697 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1755 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1779 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DD SWAP1 PUSH2 0x316D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x189E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18C2 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E0 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x190E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 SLOAD TIMESTAMP DUP5 PUSH2 0x194F SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x1959 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x1963 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x19A6 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x6 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH2 0x19BA SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x19C4 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A4A DUP6 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A57 DUP6 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A65 DUP4 DUP7 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1A9D SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1ABE SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x1AC8 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B06 SWAP1 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B1A DUP7 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B28 DUP3 DUP8 PUSH2 0x28EE JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD9 SWAP1 PUSH2 0x31CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BEE DUP4 DUP8 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C26 DUP5 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E33 JUMPI DUP1 DUP3 PUSH2 0x1C3C SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C99 SWAP3 SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CE9 SWAP2 SWAP1 PUSH2 0x2C7D JUMP JUMPDEST LT ISZERO PUSH2 0x1D2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D21 SWAP1 PUSH2 0x322D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x1D76 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D94 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DE6 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1E14 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1F3F JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1F3E JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x1E86 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA3 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ED1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EF5 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x1F02 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1F23 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP7 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F9F SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2074 TIMESTAMP PUSH2 0x2066 PUSH2 0x2061 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x2A2B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x2A41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 PUSH1 0xC SLOAD PUSH2 0x2089 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2093 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20A0 DUP7 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP8 PUSH2 0x20B5 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x20BF SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x20C9 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP8 PUSH2 0x20DF SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x20E9 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD DUP4 DUP3 PUSH2 0x20FA SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2104 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH2 0x2112 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD GT ISZERO DUP1 PUSH2 0x2162 JUMPI POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x2207 JUMPI PUSH1 0x3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21C7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21FE SWAP1 PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD EQ ISZERO PUSH2 0x22DB JUMPI PUSH1 0x3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x229B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2315 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2371 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x23B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23A8 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD DUP4 PUSH2 0x23C0 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST GT ISZERO PUSH2 0x2401 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F8 SWAP1 PUSH2 0x310D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2461 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x24A0 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x24DC SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP PUSH2 0x2514 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP DUP3 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SHL PUSH2 0x258B SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x70 PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SHR PUSH2 0x25B3 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x25BD SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2601 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x260B SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x9 SLOAD PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2637 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2641 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2666 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x2670 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2709 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2737 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x275B SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2814 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2838 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2856 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28A8 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP7 PUSH1 0x40 MLOAD PUSH2 0x28D8 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28FA DUP4 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2936 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x29A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x29B4 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2A25 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A39 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A4F SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A5F PUSH2 0x2B7D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2AB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AAA SWAP1 PUSH2 0x324D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2ADE SWAP2 SWAP1 PUSH2 0x33C0 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B77 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BBD DUP2 PUSH2 0x38F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BD2 DUP2 PUSH2 0x3907 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BE7 DUP2 PUSH2 0x391E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BFC DUP2 PUSH2 0x391E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP5 DUP3 DUP6 ADD PUSH2 0x2BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C4B DUP5 DUP3 DUP6 ADD PUSH2 0x2BC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C74 DUP5 DUP3 DUP6 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C9D DUP5 DUP3 DUP6 ADD PUSH2 0x2BED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CC7 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CD8 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D05 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2D16 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D27 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2D3A DUP2 PUSH2 0x3558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D49 DUP2 PUSH2 0x34C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D58 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D67 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D76 DUP2 PUSH2 0x356A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D85 DUP2 PUSH2 0x358E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D94 DUP2 PUSH2 0x35B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DA3 DUP2 PUSH2 0x35D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DB2 DUP2 PUSH2 0x35E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC5 PUSH1 0xE DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD0 DUP3 PUSH2 0x36DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE8 PUSH1 0x1A DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF3 DUP3 PUSH2 0x3705 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0B PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E16 DUP3 PUSH2 0x372E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2E PUSH1 0x1A DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E39 DUP3 PUSH2 0x3757 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E51 PUSH1 0x1D DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5C DUP3 PUSH2 0x3780 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E74 PUSH1 0x13 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7F DUP3 PUSH2 0x37A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E97 PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA2 DUP3 PUSH2 0x37D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EBA PUSH1 0x1D DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC5 DUP3 PUSH2 0x37FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDD PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EE8 DUP3 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F00 PUSH1 0x1F DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F0B DUP3 PUSH2 0x384D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F23 PUSH1 0x1C DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F2E DUP3 PUSH2 0x3876 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F46 PUSH1 0x17 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F51 DUP3 PUSH2 0x389F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2F72 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2FB1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2F85 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2D4F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2F98 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2FB1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2FAB PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2DA9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2FBA DUP2 PUSH2 0x354E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2FC9 DUP2 PUSH2 0x354E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FFF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D31 JUMP JUMPDEST PUSH2 0x300C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3028 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x3035 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D5E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3051 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x305E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x306B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3088 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x3095 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3106 DUP2 PUSH2 0x2DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3126 DUP2 PUSH2 0x2DDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3146 DUP2 PUSH2 0x2DFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3166 DUP2 PUSH2 0x2E21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3186 DUP2 PUSH2 0x2E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31A6 DUP2 PUSH2 0x2E67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31C6 DUP2 PUSH2 0x2E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31E6 DUP2 PUSH2 0x2EAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3206 DUP2 PUSH2 0x2ED0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3226 DUP2 PUSH2 0x2EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3246 DUP2 PUSH2 0x2F16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3266 DUP2 PUSH2 0x2F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3282 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x329D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x32B9 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32C6 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x32D3 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32E0 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32ED PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32FA PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3307 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3314 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3322 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3345 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3352 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3375 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3380 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x33B5 JUMPI PUSH2 0x33B4 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33CB DUP3 PUSH2 0x3526 JUMP JUMPDEST SWAP2 POP PUSH2 0x33D6 DUP4 PUSH2 0x3526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x33E6 JUMPI PUSH2 0x33E5 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33FC DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3407 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3417 JUMPI PUSH2 0x3416 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342D DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3438 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3471 JUMPI PUSH2 0x3470 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3487 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3492 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x34A5 JUMPI PUSH2 0x34A4 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34BB DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34CD DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x34EE DUP3 PUSH2 0x38C8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3501 DUP3 PUSH2 0x38DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3563 DUP3 PUSH2 0x35FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3575 DUP3 PUSH2 0x357C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3587 DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3599 DUP3 PUSH2 0x35A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35AB DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35BD DUP3 PUSH2 0x35C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35CF DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E1 DUP3 PUSH2 0x34E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F3 DUP3 PUSH2 0x34F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3605 DUP3 PUSH2 0x360C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3617 DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3629 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3634 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3644 JUMPI PUSH2 0x3643 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x494E56414C494420505249434553000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F54204F50454E454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43414E275420435245415445204652414D4520494E2050415354000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x594F5520415245204E4F542054484520464143544F5259204F574E4552000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x544849532041444452455353204953204E4F5420544845204F574E4552000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4144445245535320414C5245414459204F574E53205448452050415243454C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420495320544F4F20534D414C4C00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x38D9 JUMPI PUSH2 0x38D8 PUSH2 0x36AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x38ED JUMPI PUSH2 0x38EC PUSH2 0x36AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x38F9 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x3904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3910 DUP2 PUSH2 0x34D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x391B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3927 DUP2 PUSH2 0x354E JUMP JUMPDEST DUP2 EQ PUSH2 0x3932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x843C92FF2E 0x48 0xAD DUP10 0x1E 0xCD PUSH24 0x1D661BFB541308F49C73F90E23C7788910BE97E364736F6C PUSH4 0x43000804 STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xEE 0xE 0xD9 CALLVALUE 0x2A 0x27 CODECOPY MLOAD STOP NOT 0xAD 0xE0 0xC7 OR 0xF 0xB4 0x4A 0xB4 SWAP4 DUP15 0x21 DIFFICULTY 0xBD SWAP13 0xA6 DUP5 SWAP8 ORIGIN PUSH27 0xAE5764736F6C634300080400330000000000000000000000000000 ",
              "sourceMap": "283:864:7:-:0;;;473:136;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;529:10;521:5;;:18;;;;;;;;;;;;;;;;;;585:15;550:14;;:51;;;;;;;;;;;;;;;;;;473:136;283:864;;7:143:8;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;70:80;;;;:::o;156:284::-;226:6;275:2;263:9;254:7;250:23;246:32;243:2;;;291:1;288;281:12;243:2;334:1;359:64;415:7;406:6;395:9;391:22;359:64;:::i;:::-;349:74;;305:128;233:207;;;;:::o;446:96::-;483:7;512:24;530:5;512:24;:::i;:::-;501:35;;491:51;;;:::o;548:126::-;585:7;625:42;618:5;614:54;603:65;;593:81;;;:::o;680:122::-;753:24;771:5;753:24;:::i;:::-;746:5;743:35;733:2;;792:1;789;782:12;733:2;723:79;:::o;283:864:7:-;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:7841:8",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "59:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "69:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "91:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "78:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "78:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "69:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "107:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "107:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "107:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "37:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "45:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "204:87:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "214:29:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "236:6:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "223:12:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "223:20:8"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "214:5:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "279:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_t_uint256",
                                  "nodeType": "YulIdentifier",
                                  "src": "252:26:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "252:33:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "252:33:8"
                            }
                          ]
                        },
                        "name": "abi_decode_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "182:6:8",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "190:3:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "198:5:8",
                            "type": ""
                          }
                        ],
                        "src": "152:139:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "363:196:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "409:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "418:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "421:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "411:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "411:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "411:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "384:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "393:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "380:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "380:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "405:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "376:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "376:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "373:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "435:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "450:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "464:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "454:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "479:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "514:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "525:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "510:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "510:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "534:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "489:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "489:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "479:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "333:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "344:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "356:6:8",
                            "type": ""
                          }
                        ],
                        "src": "297:262:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "767:1226:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "814:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "823:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "826:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "816:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "816:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "816:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "788:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "797:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "784:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "784:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "809:3:8",
                                    "type": "",
                                    "value": "288"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "780:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "780:33:8"
                              },
                              "nodeType": "YulIf",
                              "src": "777:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "840:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "855:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "869:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "859:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "884:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "919:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "930:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "915:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "915:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "939:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "894:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "894:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "884:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "967:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "982:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "996:2:8",
                                    "type": "",
                                    "value": "32"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "986:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1012:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1047:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1058:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1043:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1043:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1067:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "1022:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1022:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1012:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1095:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1110:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1124:2:8",
                                    "type": "",
                                    "value": "64"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1114:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1140:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1175:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1186:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1171:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1171:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1195:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1150:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1150:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value2",
                                      "nodeType": "YulIdentifier",
                                      "src": "1140:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1223:118:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1238:16:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1252:2:8",
                                    "type": "",
                                    "value": "96"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1242:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1268:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1303:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1314:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1299:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1299:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1323:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1278:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1278:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value3",
                                      "nodeType": "YulIdentifier",
                                      "src": "1268:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1351:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1366:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1380:3:8",
                                    "type": "",
                                    "value": "128"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1370:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1397:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1432:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1443:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1428:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1428:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1452:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1407:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1407:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value4",
                                      "nodeType": "YulIdentifier",
                                      "src": "1397:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1480:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1495:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1509:3:8",
                                    "type": "",
                                    "value": "160"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1499:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1526:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1561:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1572:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1557:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1557:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1581:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1536:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1536:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value5",
                                      "nodeType": "YulIdentifier",
                                      "src": "1526:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1609:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1624:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1638:3:8",
                                    "type": "",
                                    "value": "192"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1628:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1655:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1690:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1701:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1686:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1686:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1710:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1665:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1665:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value6",
                                      "nodeType": "YulIdentifier",
                                      "src": "1655:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1738:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1753:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1767:3:8",
                                    "type": "",
                                    "value": "224"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1757:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1784:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1819:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1830:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1815:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1815:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1839:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1794:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1794:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value7",
                                      "nodeType": "YulIdentifier",
                                      "src": "1784:6:8"
                                    }
                                  ]
                                }
                              ]
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "1867:119:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "1882:17:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1896:3:8",
                                    "type": "",
                                    "value": "256"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "1886:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "1913:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "1948:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "1959:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1944:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1944:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1968:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "1923:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1923:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value8",
                                      "nodeType": "YulIdentifier",
                                      "src": "1913:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "673:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "684:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "696:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "704:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "712:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "720:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "728:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "736:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "744:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "752:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "760:6:8",
                            "type": ""
                          }
                        ],
                        "src": "565:1428:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2065:196:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2111:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2120:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2123:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2113:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2113:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2113:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2086:7:8"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2095:9:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2082:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2082:23:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2107:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2078:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2078:32:8"
                              },
                              "nodeType": "YulIf",
                              "src": "2075:2:8"
                            },
                            {
                              "nodeType": "YulBlock",
                              "src": "2137:117:8",
                              "statements": [
                                {
                                  "nodeType": "YulVariableDeclaration",
                                  "src": "2152:15:8",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2166:1:8",
                                    "type": "",
                                    "value": "0"
                                  },
                                  "variables": [
                                    {
                                      "name": "offset",
                                      "nodeType": "YulTypedName",
                                      "src": "2156:6:8",
                                      "type": ""
                                    }
                                  ]
                                },
                                {
                                  "nodeType": "YulAssignment",
                                  "src": "2181:63:8",
                                  "value": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "2216:9:8"
                                          },
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "2227:6:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2212:3:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2212:22:8"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2236:7:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "abi_decode_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "2191:20:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2191:53:8"
                                  },
                                  "variableNames": [
                                    {
                                      "name": "value0",
                                      "nodeType": "YulIdentifier",
                                      "src": "2181:6:8"
                                    }
                                  ]
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2035:9:8",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2046:7:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2058:6:8",
                            "type": ""
                          }
                        ],
                        "src": "1999:262:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2332:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2349:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2372:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2354:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2354:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2342:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2342:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2342:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_address_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2320:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2327:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2267:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2469:79:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2486:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2535:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IERC20_$77_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2491:43:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2491:50:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2479:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2479:63:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2479:63:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2457:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2464:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2391:157:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2644:91:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2661:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2722:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IUniswapV2Factory_$638_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2666:55:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2666:62:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2654:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2654:75:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2654:75:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IUniswapV2Factory_$638_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2632:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2639:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2554:181:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2828:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "2845:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2903:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_IUniswapV2Pair_$880_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "2850:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2850:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2838:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2838:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2838:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_IUniswapV2Pair_$880_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2816:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "2823:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2741:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3009:88:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3026:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3084:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_MarketFactory_$2475_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3031:52:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3031:59:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3019:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3019:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3019:72:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_MarketFactory_$2475_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "2997:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3004:3:8",
                            "type": ""
                          }
                        ],
                        "src": "2922:175:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3183:81:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3200:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3251:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "convert_t_contract$_Market_$2367_to_t_address",
                                      "nodeType": "YulIdentifier",
                                      "src": "3205:45:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3205:52:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3193:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3193:65:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3193:65:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_contract$_Market_$2367_to_t_address_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3171:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3178:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3103:161:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3335:53:8",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "3352:3:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3375:5:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "cleanup_t_uint256",
                                      "nodeType": "YulIdentifier",
                                      "src": "3357:17:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3357:24:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3345:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3345:37:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3345:37:8"
                            }
                          ]
                        },
                        "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3323:5:8",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3330:3:8",
                            "type": ""
                          }
                        ],
                        "src": "3270:118:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3492:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3502:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3514:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3525:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3510:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3510:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3502:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3582:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3595:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3606:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3591:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3591:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_address_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3538:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3538:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3538:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3464:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3476:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3487:4:8",
                            "type": ""
                          }
                        ],
                        "src": "3394:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3745:149:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3755:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3767:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3778:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3763:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3763:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3755:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3860:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3873:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3884:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3869:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3869:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IUniswapV2Factory_$638_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "3791:68:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3791:96:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3791:96:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IUniswapV2Factory_$638__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3717:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3729:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3740:4:8",
                            "type": ""
                          }
                        ],
                        "src": "3622:272:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4307:926:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4317:27:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4329:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4340:3:8",
                                    "type": "",
                                    "value": "320"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4325:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4325:19:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4317:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4420:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4433:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4444:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4429:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4429:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_MarketFactory_$2475_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4354:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4354:93:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4354:93:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4514:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4527:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4538:2:8",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4523:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4523:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4457:56:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4457:85:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4457:85:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "4618:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4631:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4642:2:8",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4627:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4627:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_IUniswapV2Pair_$880_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4552:65:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4552:94:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4552:94:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "4700:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4713:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4724:2:8",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4709:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4709:18:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4656:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4656:72:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4656:72:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value4",
                                    "nodeType": "YulIdentifier",
                                    "src": "4782:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4795:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4806:3:8",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4791:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4791:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4738:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4738:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4738:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value5",
                                    "nodeType": "YulIdentifier",
                                    "src": "4865:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4878:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4889:3:8",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4874:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4874:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4821:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4821:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4821:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "4948:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4961:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4972:3:8",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4957:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4957:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4904:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4904:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4904:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value7",
                                    "nodeType": "YulIdentifier",
                                    "src": "5031:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5044:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5055:3:8",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5040:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5040:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "4987:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4987:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4987:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value8",
                                    "nodeType": "YulIdentifier",
                                    "src": "5114:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5127:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5138:3:8",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5123:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5123:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5070:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5070:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5070:73:8"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value9",
                                    "nodeType": "YulIdentifier",
                                    "src": "5197:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5210:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5221:3:8",
                                        "type": "",
                                        "value": "288"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5206:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5206:19:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5153:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5153:73:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5153:73:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_MarketFactory_$2475_t_contract$_IERC20_$77_t_contract$_IUniswapV2Pair_$880_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4207:9:8",
                            "type": ""
                          },
                          {
                            "name": "value9",
                            "nodeType": "YulTypedName",
                            "src": "4219:6:8",
                            "type": ""
                          },
                          {
                            "name": "value8",
                            "nodeType": "YulTypedName",
                            "src": "4227:6:8",
                            "type": ""
                          },
                          {
                            "name": "value7",
                            "nodeType": "YulTypedName",
                            "src": "4235:6:8",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "4243:6:8",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "4251:6:8",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "4259:6:8",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "4267:6:8",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "4275:6:8",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4283:6:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4291:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4302:4:8",
                            "type": ""
                          }
                        ],
                        "src": "3900:1333:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5352:139:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5362:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5374:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5385:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5370:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5370:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5362:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5457:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5470:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5481:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5466:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5466:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_contract$_Market_$2367_to_t_address_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5398:58:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5398:86:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5398:86:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_Market_$2367__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5324:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5336:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5347:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5239:252:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5595:124:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5605:26:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5617:9:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5628:2:8",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5613:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5613:18:8"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5605:4:8"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5685:6:8"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5698:9:8"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5709:1:8",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5694:3:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5694:17:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                                  "nodeType": "YulIdentifier",
                                  "src": "5641:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5641:71:8"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5641:71:8"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5567:9:8",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5579:6:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5590:4:8",
                            "type": ""
                          }
                        ],
                        "src": "5497:222:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5770:51:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5780:35:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5809:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "5791:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5791:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "5780:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5752:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5762:7:8",
                            "type": ""
                          }
                        ],
                        "src": "5725:96:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5872:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5882:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "5897:5:8"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5904:42:8",
                                    "type": "",
                                    "value": "0xffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5893:3:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5893:54:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "5882:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5854:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5864:7:8",
                            "type": ""
                          }
                        ],
                        "src": "5827:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6004:32:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6014:16:8",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6025:5:8"
                              },
                              "variableNames": [
                                {
                                  "name": "cleaned",
                                  "nodeType": "YulIdentifier",
                                  "src": "6014:7:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "cleanup_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "5986:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "cleaned",
                            "nodeType": "YulTypedName",
                            "src": "5996:7:8",
                            "type": ""
                          }
                        ],
                        "src": "5959:77:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6115:79:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6125:63:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6182:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6138:43:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6138:50:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6125:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6095:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6105:9:8",
                            "type": ""
                          }
                        ],
                        "src": "6042:152:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6273:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6283:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6314:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6296:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6296:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6283:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IERC20_$77_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6253:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6263:9:8",
                            "type": ""
                          }
                        ],
                        "src": "6200:126:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6417:91:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6427:75:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6496:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IUniswapV2Factory_$638_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6440:55:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6440:62:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6427:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Factory_$638_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6397:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6407:9:8",
                            "type": ""
                          }
                        ],
                        "src": "6332:176:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6599:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6609:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6640:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6622:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6622:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6609:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Factory_$638_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6579:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6589:9:8",
                            "type": ""
                          }
                        ],
                        "src": "6514:138:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6740:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6750:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6816:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_IUniswapV2Pair_$880_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6763:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6763:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6750:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$880_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6720:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6730:9:8",
                            "type": ""
                          }
                        ],
                        "src": "6658:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6916:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6926:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6957:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "6939:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6939:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "6926:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_IUniswapV2Pair_$880_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6896:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "6906:9:8",
                            "type": ""
                          }
                        ],
                        "src": "6834:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7057:88:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7067:72:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7133:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_MarketFactory_$2475_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7080:52:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7080:59:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7067:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2475_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7037:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7047:9:8",
                            "type": ""
                          }
                        ],
                        "src": "6975:170:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7233:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7243:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7274:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7256:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7256:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7243:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_MarketFactory_$2475_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7213:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7223:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7151:135:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7367:81:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7377:65:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7436:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "convert_t_contract$_Market_$2367_to_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7390:45:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7390:52:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7377:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_Market_$2367_to_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7347:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7357:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7292:156:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7529:53:8",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7539:37:8",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7570:5:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "cleanup_t_uint160",
                                  "nodeType": "YulIdentifier",
                                  "src": "7552:17:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7552:24:8"
                              },
                              "variableNames": [
                                {
                                  "name": "converted",
                                  "nodeType": "YulIdentifier",
                                  "src": "7539:9:8"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "convert_t_contract$_Market_$2367_to_t_uint160",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7509:5:8",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "converted",
                            "nodeType": "YulTypedName",
                            "src": "7519:9:8",
                            "type": ""
                          }
                        ],
                        "src": "7454:128:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7631:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7688:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7697:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7700:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7690:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7690:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7690:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7654:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7679:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_address",
                                          "nodeType": "YulIdentifier",
                                          "src": "7661:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7661:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "7651:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7651:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7644:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7644:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "7641:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7624:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7588:122:8"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7759:79:8",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7816:16:8",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7825:1:8",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7828:1:8",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7818:6:8"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7818:12:8"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7818:12:8"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "7782:5:8"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "7807:5:8"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "cleanup_t_uint256",
                                          "nodeType": "YulIdentifier",
                                          "src": "7789:17:8"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7789:24:8"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "7779:2:8"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7779:35:8"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7772:6:8"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7772:43:8"
                              },
                              "nodeType": "YulIf",
                              "src": "7769:2:8"
                            }
                          ]
                        },
                        "name": "validator_revert_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7752:5:8",
                            "type": ""
                          }
                        ],
                        "src": "7716:122:8"
                      }
                    ]
                  },
                  "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8 {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 224\n\n            value7 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 256\n\n            value8 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$77_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Factory_$638_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Factory_$638_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IUniswapV2Pair_$880_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IUniswapV2Pair_$880_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_MarketFactory_$2475_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_MarketFactory_$2475_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_Market_$2367_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_Market_$2367_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IUniswapV2Factory_$638__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IUniswapV2Factory_$638_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_MarketFactory_$2475_t_contract$_IERC20_$77_t_contract$_IUniswapV2Pair_$880_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_address_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 320)\n\n        abi_encode_t_contract$_MarketFactory_$2475_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_contract$_IERC20_$77_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_contract$_IUniswapV2Pair_$880_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value7,  add(headStart, 224))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value8,  add(headStart, 256))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value9,  add(headStart, 288))\n\n    }\n\n    function abi_encode_tuple_t_contract$_Market_$2367__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_Market_$2367_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IERC20_$77_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$77_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Factory_$638_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswapV2Factory_$638_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Factory_$638_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$880_to_t_address(value) -> converted {\n        converted := convert_t_contract$_IUniswapV2Pair_$880_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IUniswapV2Pair_$880_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2475_to_t_address(value) -> converted {\n        converted := convert_t_contract$_MarketFactory_$2475_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_MarketFactory_$2475_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function convert_t_contract$_Market_$2367_to_t_address(value) -> converted {\n        converted := convert_t_contract$_Market_$2367_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_Market_$2367_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
                  "id": 8,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH3 0x6A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x27FA35C3 EQ PUSH3 0x6F JUMPI DUP1 PUSH4 0x46A81C00 EQ PUSH3 0x91 JUMPI DUP1 PUSH4 0x8BDB2AFA EQ PUSH3 0xC7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH3 0xE9 JUMPI DUP1 PUSH4 0x8E8F294B EQ PUSH3 0x10B JUMPI DUP1 PUSH4 0xF4541DA5 EQ PUSH3 0x141 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x79 PUSH3 0x161 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x88 SWAP2 SWAP1 PUSH3 0x652 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xAF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0xA9 SWAP2 SWAP1 PUSH3 0x4A8 JUMP JUMPDEST PUSH3 0x16E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xBE SWAP2 SWAP1 PUSH3 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xD1 PUSH3 0x1AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0xE0 SWAP2 SWAP1 PUSH3 0x568 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0xF3 PUSH3 0x1D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x102 SWAP2 SWAP1 PUSH3 0x54B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x129 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x123 SWAP2 SWAP1 PUSH3 0x3A3 JUMP JUMPDEST PUSH3 0x1F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x138 SWAP2 SWAP1 PUSH3 0x635 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH3 0x15F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH3 0x159 SWAP2 SWAP1 PUSH3 0x3CF JUMP JUMPDEST PUSH3 0x22B JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP2 DUP2 SLOAD DUP2 LT PUSH3 0x17F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 ADDRESS DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH1 0x40 MLOAD PUSH3 0x245 SWAP1 PUSH3 0x367 JUMP JUMPDEST PUSH3 0x25A SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0x585 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH3 0x277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3D37 DUP1 PUSH3 0x7AA DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x386 DUP2 PUSH3 0x775 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH3 0x39D DUP2 PUSH3 0x78F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x3B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3C6 DUP5 DUP3 DUP6 ADD PUSH3 0x375 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x120 DUP11 DUP13 SUB SLT ISZERO PUSH3 0x3EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x3FF DUP13 DUP3 DUP14 ADD PUSH3 0x375 JUMP JUMPDEST SWAP10 POP POP PUSH1 0x20 PUSH3 0x412 DUP13 DUP3 DUP14 ADD PUSH3 0x375 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x40 PUSH3 0x425 DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP8 POP POP PUSH1 0x60 PUSH3 0x438 DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP7 POP POP PUSH1 0x80 PUSH3 0x44B DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP6 POP POP PUSH1 0xA0 PUSH3 0x45E DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP5 POP POP PUSH1 0xC0 PUSH3 0x471 DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP4 POP POP PUSH1 0xE0 PUSH3 0x484 DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP3 POP POP PUSH2 0x100 PUSH3 0x498 DUP13 DUP3 DUP14 ADD PUSH3 0x38C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x4CB DUP5 DUP3 DUP6 ADD PUSH3 0x38C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4DF DUP2 PUSH3 0x66F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x4F0 DUP2 PUSH3 0x6AD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x501 DUP2 PUSH3 0x6D5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x512 DUP2 PUSH3 0x6FD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x523 DUP2 PUSH3 0x725 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x534 DUP2 PUSH3 0x74D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x545 DUP2 PUSH3 0x6A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x562 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x4D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x57F PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x4F6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP3 ADD SWAP1 POP PUSH3 0x59D PUSH1 0x0 DUP4 ADD DUP14 PUSH3 0x518 JUMP JUMPDEST PUSH3 0x5AC PUSH1 0x20 DUP4 ADD DUP13 PUSH3 0x4E5 JUMP JUMPDEST PUSH3 0x5BB PUSH1 0x40 DUP4 ADD DUP12 PUSH3 0x507 JUMP JUMPDEST PUSH3 0x5CA PUSH1 0x60 DUP4 ADD DUP11 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x5D9 PUSH1 0x80 DUP4 ADD DUP10 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x5E8 PUSH1 0xA0 DUP4 ADD DUP9 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x5F7 PUSH1 0xC0 DUP4 ADD DUP8 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x606 PUSH1 0xE0 DUP4 ADD DUP7 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x616 PUSH2 0x100 DUP4 ADD DUP6 PUSH3 0x53A JUMP JUMPDEST PUSH3 0x626 PUSH2 0x120 DUP4 ADD DUP5 PUSH3 0x53A JUMP JUMPDEST SWAP12 SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x64C PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x529 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x669 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x53A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x67C DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6BA DUP3 PUSH3 0x6C1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6CE DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6E2 DUP3 PUSH3 0x6E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x6F6 DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x70A DUP3 PUSH3 0x711 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x71E DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x732 DUP3 PUSH3 0x739 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x746 DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x75A DUP3 PUSH3 0x761 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x76E DUP3 PUSH3 0x683 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x780 DUP2 PUSH3 0x66F JUMP JUMPDEST DUP2 EQ PUSH3 0x78C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x79A DUP2 PUSH3 0x6A3 JUMP JUMPDEST DUP2 EQ PUSH3 0x7A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x64 PUSH1 0x9 SSTORE PUSH10 0xD3C21BCECCEDA1000000 PUSH1 0xC SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3D37 CODESIZE SUB DUP1 PUSH3 0x3D37 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x4A SWAP2 SWAP1 PUSH3 0x1EA JUMP JUMPDEST DUP9 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 PUSH1 0x3 DUP2 SWAP1 SSTORE POP DUP6 PUSH1 0x4 DUP2 SWAP1 SSTORE POP DUP5 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP4 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP8 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP10 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0xA DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xB DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP POP POP PUSH3 0x3BC JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x19F DUP2 PUSH3 0x354 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1B6 DUP2 PUSH3 0x36E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1CD DUP2 PUSH3 0x388 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x1E4 DUP2 PUSH3 0x3A2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x140 DUP12 DUP14 SUB SLT ISZERO PUSH3 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH3 0x21B DUP14 DUP3 DUP15 ADD PUSH3 0x1BC JUMP JUMPDEST SWAP11 POP POP PUSH1 0x20 PUSH3 0x22E DUP14 DUP3 DUP15 ADD PUSH3 0x18E JUMP JUMPDEST SWAP10 POP POP PUSH1 0x40 PUSH3 0x241 DUP14 DUP3 DUP15 ADD PUSH3 0x1A5 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x60 PUSH3 0x254 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x80 PUSH3 0x267 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP7 POP POP PUSH1 0xA0 PUSH3 0x27A DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP6 POP POP PUSH1 0xC0 PUSH3 0x28D DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0xE0 PUSH3 0x2A0 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x100 PUSH3 0x2B4 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x120 PUSH3 0x2C8 DUP14 DUP3 DUP15 ADD PUSH3 0x1D3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP12 SWAP2 SWAP5 SWAP8 SWAP11 POP SWAP3 SWAP6 SWAP9 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2E7 DUP3 PUSH3 0x32A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2FB DUP3 PUSH3 0x2DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x30F DUP3 PUSH3 0x2DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x323 DUP3 PUSH3 0x2DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x35F DUP2 PUSH3 0x2EE JUMP JUMPDEST DUP2 EQ PUSH3 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x379 DUP2 PUSH3 0x302 JUMP JUMPDEST DUP2 EQ PUSH3 0x385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x393 DUP2 PUSH3 0x316 JUMP JUMPDEST DUP2 EQ PUSH3 0x39F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH3 0x3AD DUP2 PUSH3 0x34A JUMP JUMPDEST DUP2 EQ PUSH3 0x3B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x396B DUP1 PUSH3 0x3CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1E5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7D6AE6A0 GT PUSH2 0x10F JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE107FB4F GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE107FB4F EQ PUSH2 0x5D8 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x608 JUMPI DUP1 PUSH4 0xFC950702 EQ PUSH2 0x626 JUMPI DUP1 PUSH4 0xFF5C86B0 EQ PUSH2 0x642 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x54E JUMPI DUP1 PUSH4 0xC816841B EQ PUSH2 0x56C JUMPI DUP1 PUSH4 0xC84993AF EQ PUSH2 0x58A JUMPI DUP1 PUSH4 0xDA68CF8B EQ PUSH2 0x5BA JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x89DA88A3 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x89DA88A3 EQ PUSH2 0x4AC JUMPI DUP1 PUSH4 0xA10340BC EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xA4D246FF EQ PUSH2 0x502 JUMPI DUP1 PUSH4 0xBB15D2DD EQ PUSH2 0x532 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x7D6AE6A0 EQ PUSH2 0x3FE JUMPI DUP1 PUSH4 0x7E996639 EQ PUSH2 0x42E JUMPI DUP1 PUSH4 0x830AB119 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x888BDBCD EQ PUSH2 0x47C JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x45084775 GT PUSH2 0x187 JUMPI DUP1 PUSH4 0x5B3AD63E GT PUSH2 0x156 JUMPI DUP1 PUSH4 0x5B3AD63E EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x6F1AEFC3 EQ PUSH2 0x394 JUMPI DUP1 PUSH4 0x6F7CB60B EQ PUSH2 0x3C4 JUMPI DUP1 PUSH4 0x7358C57A EQ PUSH2 0x3E0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x45084775 EQ PUSH2 0x2EE JUMPI DUP1 PUSH4 0x499A0FC4 EQ PUSH2 0x30C JUMPI DUP1 PUSH4 0x4D3EE2DC EQ PUSH2 0x32A JUMPI DUP1 PUSH4 0x527EB4BC EQ PUSH2 0x346 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x3C80D8EA GT PUSH2 0x1C3 JUMPI DUP1 PUSH4 0x3C80D8EA EQ PUSH2 0x266 JUMPI DUP1 PUSH4 0x3D09A82A EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x3E16BC20 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x410F0710 EQ PUSH2 0x2D0 JUMPI PUSH2 0x1E5 JUMP JUMPDEST DUP1 PUSH4 0x50E8840 EQ PUSH2 0x1EA JUMPI DUP1 PUSH4 0xCBCFF8F EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x2A0EFD44 EQ PUSH2 0x24A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x204 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x660 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x234 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x684 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x264 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x86B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x280 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28A PUSH2 0x111B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x1121 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH2 0x1184 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F6 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x303 SWAP2 SWAP1 PUSH2 0x2FCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x314 PUSH2 0x11B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x321 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x344 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x11B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH2 0x155F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x15A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BB SWAP2 SWAP1 PUSH2 0x326D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x16DB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E8 PUSH2 0x1936 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F5 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x418 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x413 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x193C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x425 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x436 PUSH2 0x196A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x443 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x466 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x461 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1970 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1993 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B4 PUSH2 0x19D6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x19E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F9 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x51C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x517 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x1A3E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x529 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x547 SWAP2 SWAP1 PUSH2 0x2CE2 JUMP JUMPDEST PUSH2 0x1AA9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH2 0x1FB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x563 SWAP2 SWAP1 PUSH2 0x30D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x574 PUSH2 0x1FD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x581 SWAP2 SWAP1 PUSH2 0x30B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x59F SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x1FFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B1 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C2 PUSH2 0x201C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5CF SWAP2 SWAP1 PUSH2 0x309C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5ED SWAP2 SWAP1 PUSH2 0x2CA6 JUMP JUMPDEST PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FF SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x610 PUSH2 0x211E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x640 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x63B SWAP2 SWAP1 PUSH2 0x2C54 JUMP JUMPDEST PUSH2 0x2124 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x64A PUSH2 0x28E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x657 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x690 DUP4 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x6CC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x728 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x736 JUMPI DUP1 SWAP2 POP POP PUSH2 0x866 JUMP JUMPDEST PUSH2 0x73F TIMESTAMP PUSH2 0x1565 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x778 SWAP1 PUSH2 0x314D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7FC JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0xE DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x859 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 SWAP2 POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x876 TIMESTAMP PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP NUMBER PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xA SLOAD PUSH1 0x3 SLOAD DUP3 PUSH2 0x8A4 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH2 0x8AE SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST TIMESTAMP LT ISZERO DUP1 ISZERO PUSH2 0x8D3 JUMPI POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD EQ JUMPDEST ISZERO PUSH2 0x94A JUMPI DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x93D SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x9DA JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x3 SLOAD DUP3 PUSH2 0x95B SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH2 0x965 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST TIMESTAMP LT PUSH2 0x9D9 JUMPI DUP2 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD DUP2 SWAP1 SSTORE POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP2 PUSH1 0x40 MLOAD PUSH2 0x9D0 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMPDEST POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP4 PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x9FD SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xA4F DUP7 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA5D DUP3 DUP8 PUSH2 0x28EE JUMP JUMPDEST SWAP1 POP PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xB18 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB0F SWAP1 PUSH2 0x320D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB24 DUP4 DUP8 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xB5C SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBB9 SWAP3 SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBD1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBE5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC09 SWAP2 SWAP1 PUSH2 0x2C7D JUMP JUMPDEST LT ISZERO PUSH2 0xC4A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC41 SWAP1 PUSH2 0x322D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xCC0 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCF8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD30 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xD53 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xDA7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xE17 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0xFC6 JUMPI PUSH1 0x0 PUSH2 0xE53 DUP5 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0xF14 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF31 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF83 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0xFA6 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP PUSH2 0x1040 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x103A JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST CALLER PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP6 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1109 SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1171 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x11F0 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x128C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1283 SWAP1 PUSH2 0x31ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x12AD PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH2 0x12E8 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1358 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1399 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1390 SWAP1 PUSH2 0x318D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1456 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1470 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1484 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14A8 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH1 0x2 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1553 SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 SLOAD DUP3 GT PUSH2 0x157A JUMPI PUSH1 0x4 SLOAD SWAP1 POP PUSH2 0x15A3 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x4 SLOAD DUP4 PUSH2 0x158B SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x1595 SWAP2 SWAP1 PUSH2 0x361E JUMP JUMPDEST DUP3 PUSH2 0x15A0 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B0 PUSH2 0x2B07 JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1697 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x16CF JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1741 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1755 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1779 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x17E6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17DD SWAP1 PUSH2 0x316D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x188A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x189E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18C2 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18E0 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x18FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x190E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1932 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x3 SLOAD TIMESTAMP DUP5 PUSH2 0x194F SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x1959 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x1963 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x19A6 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x19D1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x6 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH2 0x19BA SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x19C4 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x19CE SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 DUP1 PUSH1 0x8 ADD SLOAD SWAP1 POP DUP10 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1A4A DUP6 PUSH2 0x1565 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A57 DUP6 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1A65 DUP4 DUP7 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x1A9D SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP4 PUSH2 0x1ABE SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x1AC8 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xB SLOAD DUP2 LT ISZERO PUSH2 0x1B0F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B06 SWAP1 PUSH2 0x31AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1B1A DUP7 PUSH2 0x684 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B28 DUP3 DUP8 PUSH2 0x28EE JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1BE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD9 SWAP1 PUSH2 0x31CD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BEE DUP4 DUP8 PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1C26 DUP5 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x2042 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1E33 JUMPI DUP1 DUP3 PUSH2 0x1C3C SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C99 SWAP3 SWAP2 SWAP1 PUSH2 0x3013 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CC5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CE9 SWAP2 SWAP1 PUSH2 0x2C7D JUMP JUMPDEST LT ISZERO PUSH2 0x1D2A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D21 SWAP1 PUSH2 0x322D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 DUP7 PUSH2 0x1D76 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D94 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x303C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1DAE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DC2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DE6 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP1 DUP3 PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1E14 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x1F3F JUMP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0x1F3E JUMPI PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 DUP5 PUSH2 0x1E86 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EA3 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1ED1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EF5 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP DUP2 DUP2 PUSH2 0x1F02 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x1F23 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST DUP7 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH32 0xD0D6F900B5096E8E38E0B13B83D7AC826D0C461A139F26A9BFBEE4B4D3D1E919 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1F9F SWAP3 SWAP2 SWAP1 PUSH2 0x3330 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2074 TIMESTAMP PUSH2 0x2066 PUSH2 0x2061 PUSH1 0x3 SLOAD TIMESTAMP PUSH2 0x2A2B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1565 JUMP JUMPDEST PUSH2 0x2A41 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 SLOAD DUP3 PUSH1 0xC SLOAD PUSH2 0x2089 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2093 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x20A0 DUP7 PUSH2 0x193C JUMP JUMPDEST SWAP1 POP DUP1 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP8 PUSH2 0x20B5 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x20BF SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH2 0x20C9 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST SWAP4 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x8 SLOAD DUP8 PUSH2 0x20DF SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x20E9 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0xC SLOAD DUP4 DUP3 PUSH2 0x20FA SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2104 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP DUP1 DUP6 PUSH2 0x2112 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD GT ISZERO DUP1 PUSH2 0x2162 JUMPI POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD GT ISZERO JUMPDEST ISZERO PUSH2 0x2207 JUMPI PUSH1 0x3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x21C7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x21FE SWAP1 PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD EQ ISZERO PUSH2 0x22DB JUMPI PUSH1 0x3 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x229B JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22D2 SWAP1 PUSH2 0x30ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2315 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2371 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x23B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23A8 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x3 SLOAD DUP4 PUSH2 0x23C0 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST GT ISZERO PUSH2 0x2401 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F8 SWAP1 PUSH2 0x310D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2461 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD SLOAD PUSH2 0x24A0 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD SLOAD PUSH2 0x24DC SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP PUSH2 0x2514 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP DUP3 PUSH2 0x2A57 JUMP JUMPDEST PUSH1 0x0 ADD MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH21 0x6D79F82328EA3DA61E066EBB2F88A000000000000 PUSH1 0x70 PUSH1 0xD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SHL PUSH2 0x258B SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x70 PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 SHR PUSH2 0x25B3 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x25BD SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x7 SLOAD PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2601 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x260B SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH3 0x186A0 PUSH1 0x9 SLOAD PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2637 SWAP2 SWAP1 PUSH2 0x3422 JUMP JUMPDEST PUSH2 0x2641 SWAP2 SWAP1 PUSH2 0x33F1 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH1 0xD PUSH1 0x0 DUP10 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x2666 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH2 0x2670 SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST PUSH1 0xD PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2709 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2723 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2737 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x275B SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH1 0x0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2800 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2814 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2838 SWAP2 SWAP1 PUSH2 0x2C02 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2856 SWAP3 SWAP2 SWAP1 PUSH2 0x3073 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2884 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28A8 SWAP2 SWAP1 PUSH2 0x2C2B JUMP JUMPDEST POP PUSH32 0x163614E6E9CE9DF7687928015FD2C748B69C5136DB886E57F09170B251B58E87 DUP7 PUSH1 0x40 MLOAD PUSH2 0x28D8 SWAP2 SWAP1 PUSH2 0x3288 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x28FA DUP4 PUSH2 0x1993 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2936 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x29A6 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ PUSH2 0x29B4 JUMPI DUP1 SWAP2 POP POP PUSH2 0x2A25 JUMP JUMPDEST DUP1 PUSH1 0xD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x9 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A39 SWAP2 SWAP1 PUSH2 0x336A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x2A4F SWAP2 SWAP1 PUSH2 0x347C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A5F PUSH2 0x2B7D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x2AB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AAA SWAP1 PUSH2 0x324D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH1 0x0 ADD MLOAD PUSH2 0x2ADE SWAP2 SWAP1 PUSH2 0x33C0 JUMP JUMPDEST PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2B77 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BBD DUP2 PUSH2 0x38F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BD2 DUP2 PUSH2 0x3907 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2BE7 DUP2 PUSH2 0x391E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2BFC DUP2 PUSH2 0x391E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C22 DUP5 DUP3 DUP6 ADD PUSH2 0x2BAE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C4B DUP5 DUP3 DUP6 ADD PUSH2 0x2BC3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C66 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C74 DUP5 DUP3 DUP6 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2C9D DUP5 DUP3 DUP6 ADD PUSH2 0x2BED JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2CB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CC7 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2CD8 DUP6 DUP3 DUP7 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2CF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D05 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2D16 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2D27 DUP7 DUP3 DUP8 ADD PUSH2 0x2BD8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2D3A DUP2 PUSH2 0x3558 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D49 DUP2 PUSH2 0x34C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D58 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D67 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D76 DUP2 PUSH2 0x356A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D85 DUP2 PUSH2 0x358E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2D94 DUP2 PUSH2 0x35B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DA3 DUP2 PUSH2 0x35D6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2DB2 DUP2 PUSH2 0x35E8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DC5 PUSH1 0xE DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DD0 DUP3 PUSH2 0x36DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2DE8 PUSH1 0x1A DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DF3 DUP3 PUSH2 0x3705 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E0B PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E16 DUP3 PUSH2 0x372E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2E PUSH1 0x1A DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E39 DUP3 PUSH2 0x3757 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E51 PUSH1 0x1D DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E5C DUP3 PUSH2 0x3780 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E74 PUSH1 0x13 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E7F DUP3 PUSH2 0x37A9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E97 PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EA2 DUP3 PUSH2 0x37D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EBA PUSH1 0x1D DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EC5 DUP3 PUSH2 0x37FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EDD PUSH1 0x10 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EE8 DUP3 PUSH2 0x3824 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F00 PUSH1 0x1F DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F0B DUP3 PUSH2 0x384D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F23 PUSH1 0x1C DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F2E DUP3 PUSH2 0x3876 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F46 PUSH1 0x17 DUP4 PUSH2 0x3359 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F51 DUP3 PUSH2 0x389F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x2F72 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2FB1 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2F85 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2D4F JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2F98 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2FB1 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2FAB PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2DA9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2FBA DUP2 PUSH2 0x354E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2FC9 DUP2 PUSH2 0x354E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2FE4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D40 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FFF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D31 JUMP JUMPDEST PUSH2 0x300C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3028 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x3035 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2D5E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3051 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x305E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x306B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3088 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2D5E JUMP JUMPDEST PUSH2 0x3095 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30B1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D6D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30CC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D7C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30E7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2D8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3106 DUP2 PUSH2 0x2DB8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3126 DUP2 PUSH2 0x2DDB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3146 DUP2 PUSH2 0x2DFE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3166 DUP2 PUSH2 0x2E21 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3186 DUP2 PUSH2 0x2E44 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31A6 DUP2 PUSH2 0x2E67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31C6 DUP2 PUSH2 0x2E8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31E6 DUP2 PUSH2 0x2EAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3206 DUP2 PUSH2 0x2ED0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3226 DUP2 PUSH2 0x2EF3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3246 DUP2 PUSH2 0x2F16 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3266 DUP2 PUSH2 0x2F39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3282 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2F5C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x329D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x120 DUP3 ADD SWAP1 POP PUSH2 0x32B9 PUSH1 0x0 DUP4 ADD DUP13 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32C6 PUSH1 0x20 DUP4 ADD DUP12 PUSH2 0x2D9A JUMP JUMPDEST PUSH2 0x32D3 PUSH1 0x40 DUP4 ADD DUP11 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32E0 PUSH1 0x60 DUP4 ADD DUP10 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32ED PUSH1 0x80 DUP4 ADD DUP9 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x32FA PUSH1 0xA0 DUP4 ADD DUP8 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3307 PUSH1 0xC0 DUP4 ADD DUP7 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3314 PUSH1 0xE0 DUP4 ADD DUP6 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3322 PUSH2 0x100 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP11 SWAP10 POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3345 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2FC0 JUMP JUMPDEST PUSH2 0x3352 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2FC0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3375 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3380 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x33B5 JUMPI PUSH2 0x33B4 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33CB DUP3 PUSH2 0x3526 JUMP JUMPDEST SWAP2 POP PUSH2 0x33D6 DUP4 PUSH2 0x3526 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x33E6 JUMPI PUSH2 0x33E5 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33FC DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3407 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3417 JUMPI PUSH2 0x3416 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x342D DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3438 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x3471 JUMPI PUSH2 0x3470 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3487 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3492 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x34A5 JUMPI PUSH2 0x34A4 PUSH2 0x364F JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34BB DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x34CD DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x34EE DUP3 PUSH2 0x38C8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH2 0x3501 DUP3 PUSH2 0x38DC JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3563 DUP3 PUSH2 0x35FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3575 DUP3 PUSH2 0x357C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3587 DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3599 DUP3 PUSH2 0x35A0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35AB DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35BD DUP3 PUSH2 0x35C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35CF DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E1 DUP3 PUSH2 0x34E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35F3 DUP3 PUSH2 0x34F3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3605 DUP3 PUSH2 0x360C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3617 DUP3 PUSH2 0x3506 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3629 DUP3 PUSH2 0x354E JUMP JUMPDEST SWAP2 POP PUSH2 0x3634 DUP4 PUSH2 0x354E JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x3644 JUMPI PUSH2 0x3643 PUSH2 0x367E JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x494E56414C494420505249434553000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D4520454E442054494D45204E4F542052454143484544000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F54204F50454E454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x43414E275420435245415445204652414D4520494E2050415354000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x594F5520415245204E4F542054484520464143544F5259204F574E4552000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4C4F5420414C524541445920534554544C454400000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x505249434520495320544F4F204C4F5700000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x544849532041444452455353204953204E4F5420544845204F574E4552000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4652414D45204E4F5420434C4F53454400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4144445245535320414C5245414459204F574E53205448452050415243454C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x415050524F56454420414D4F554E5420495320544F4F20534D414C4C00000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4669786564506F696E743A204449565F42595F5A45524F000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x38D9 JUMPI PUSH2 0x38D8 PUSH2 0x36AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x38ED JUMPI PUSH2 0x38EC PUSH2 0x36AD JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH2 0x38F9 DUP2 PUSH2 0x34B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x3904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3910 DUP2 PUSH2 0x34D4 JUMP JUMPDEST DUP2 EQ PUSH2 0x391B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x3927 DUP2 PUSH2 0x354E JUMP JUMPDEST DUP2 EQ PUSH2 0x3932 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x843C92FF2E 0x48 0xAD DUP10 0x1E 0xCD PUSH24 0x1D661BFB541308F49C73F90E23C7788910BE97E364736F6C PUSH4 0x43000804 STOP CALLER LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0xEE 0xE 0xD9 CALLVALUE 0x2A 0x27 CODECOPY MLOAD STOP NOT 0xAD 0xE0 0xC7 OR 0xF 0xB4 0x4A 0xB4 SWAP4 DUP15 0x21 DIFFICULTY 0xBD SWAP13 0xA6 DUP5 SWAP8 ORIGIN PUSH27 0xAE5764736F6C634300080400330000000000000000000000000000 ",
              "sourceMap": "283:864:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1047:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;409:28;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;315:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;444:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;361:41;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;617:422;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1047:97;1095:4;1118:11;:18;;;;1111:25;;1047:97;:::o;409:28::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;315:39::-;;;;;;;;;;;;:::o;444:20::-;;;;;;;;;;;;;:::o;361:41::-;;;;;;;;;;;;;;;;;;;;;;:::o;617:422::-;797:13;824:4;837:6;861:12;876:7;885:14;901:4;907;913:7;922:11;935:7;813:130;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;797:146;;981:6;954:7;:24;970:6;954:24;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;;;;;;;998:11;1023:6;998:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;617:422;;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;7:139:8:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:139::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;204:87;;;;:::o;297:262::-;356:6;405:2;393:9;384:7;380:23;376:32;373:2;;;421:1;418;411:12;373:2;464:1;489:53;534:7;525:6;514:9;510:22;489:53;:::i;:::-;479:63;;435:117;363:196;;;;:::o;565:1428::-;696:6;704;712;720;728;736;744;752;760;809:3;797:9;788:7;784:23;780:33;777:2;;;826:1;823;816:12;777:2;869:1;894:53;939:7;930:6;919:9;915:22;894:53;:::i;:::-;884:63;;840:117;996:2;1022:53;1067:7;1058:6;1047:9;1043:22;1022:53;:::i;:::-;1012:63;;967:118;1124:2;1150:53;1195:7;1186:6;1175:9;1171:22;1150:53;:::i;:::-;1140:63;;1095:118;1252:2;1278:53;1323:7;1314:6;1303:9;1299:22;1278:53;:::i;:::-;1268:63;;1223:118;1380:3;1407:53;1452:7;1443:6;1432:9;1428:22;1407:53;:::i;:::-;1397:63;;1351:119;1509:3;1536:53;1581:7;1572:6;1561:9;1557:22;1536:53;:::i;:::-;1526:63;;1480:119;1638:3;1665:53;1710:7;1701:6;1690:9;1686:22;1665:53;:::i;:::-;1655:63;;1609:119;1767:3;1794:53;1839:7;1830:6;1819:9;1815:22;1794:53;:::i;:::-;1784:63;;1738:119;1896:3;1923:53;1968:7;1959:6;1948:9;1944:22;1923:53;:::i;:::-;1913:63;;1867:119;767:1226;;;;;;;;;;;:::o;1999:262::-;2058:6;2107:2;2095:9;2086:7;2082:23;2078:32;2075:2;;;2123:1;2120;2113:12;2075:2;2166:1;2191:53;2236:7;2227:6;2216:9;2212:22;2191:53;:::i;:::-;2181:63;;2137:117;2065:196;;;;:::o;2267:118::-;2354:24;2372:5;2354:24;:::i;:::-;2349:3;2342:37;2332:53;;:::o;2391:157::-;2491:50;2535:5;2491:50;:::i;:::-;2486:3;2479:63;2469:79;;:::o;2554:181::-;2666:62;2722:5;2666:62;:::i;:::-;2661:3;2654:75;2644:91;;:::o;2741:175::-;2850:59;2903:5;2850:59;:::i;:::-;2845:3;2838:72;2828:88;;:::o;2922:175::-;3031:59;3084:5;3031:59;:::i;:::-;3026:3;3019:72;3009:88;;:::o;3103:161::-;3205:52;3251:5;3205:52;:::i;:::-;3200:3;3193:65;3183:81;;:::o;3270:118::-;3357:24;3375:5;3357:24;:::i;:::-;3352:3;3345:37;3335:53;;:::o;3394:222::-;3487:4;3525:2;3514:9;3510:18;3502:26;;3538:71;3606:1;3595:9;3591:17;3582:6;3538:71;:::i;:::-;3492:124;;;;:::o;3622:272::-;3740:4;3778:2;3767:9;3763:18;3755:26;;3791:96;3884:1;3873:9;3869:17;3860:6;3791:96;:::i;:::-;3745:149;;;;:::o;3900:1333::-;4302:4;4340:3;4329:9;4325:19;4317:27;;4354:93;4444:1;4433:9;4429:17;4420:6;4354:93;:::i;:::-;4457:85;4538:2;4527:9;4523:18;4514:6;4457:85;:::i;:::-;4552:94;4642:2;4631:9;4627:18;4618:6;4552:94;:::i;:::-;4656:72;4724:2;4713:9;4709:18;4700:6;4656:72;:::i;:::-;4738:73;4806:3;4795:9;4791:19;4782:6;4738:73;:::i;:::-;4821;4889:3;4878:9;4874:19;4865:6;4821:73;:::i;:::-;4904;4972:3;4961:9;4957:19;4948:6;4904:73;:::i;:::-;4987;5055:3;5044:9;5040:19;5031:6;4987:73;:::i;:::-;5070;5138:3;5127:9;5123:19;5114:6;5070:73;:::i;:::-;5153;5221:3;5210:9;5206:19;5197:6;5153:73;:::i;:::-;4307:926;;;;;;;;;;;;;:::o;5239:252::-;5347:4;5385:2;5374:9;5370:18;5362:26;;5398:86;5481:1;5470:9;5466:17;5457:6;5398:86;:::i;:::-;5352:139;;;;:::o;5497:222::-;5590:4;5628:2;5617:9;5613:18;5605:26;;5641:71;5709:1;5698:9;5694:17;5685:6;5641:71;:::i;:::-;5595:124;;;;:::o;5725:96::-;5762:7;5791:24;5809:5;5791:24;:::i;:::-;5780:35;;5770:51;;;:::o;5827:126::-;5864:7;5904:42;5897:5;5893:54;5882:65;;5872:81;;;:::o;5959:77::-;5996:7;6025:5;6014:16;;6004:32;;;:::o;6042:152::-;6105:9;6138:50;6182:5;6138:50;:::i;:::-;6125:63;;6115:79;;;:::o;6200:126::-;6263:9;6296:24;6314:5;6296:24;:::i;:::-;6283:37;;6273:53;;;:::o;6332:176::-;6407:9;6440:62;6496:5;6440:62;:::i;:::-;6427:75;;6417:91;;;:::o;6514:138::-;6589:9;6622:24;6640:5;6622:24;:::i;:::-;6609:37;;6599:53;;;:::o;6658:170::-;6730:9;6763:59;6816:5;6763:59;:::i;:::-;6750:72;;6740:88;;;:::o;6834:135::-;6906:9;6939:24;6957:5;6939:24;:::i;:::-;6926:37;;6916:53;;;:::o;6975:170::-;7047:9;7080:59;7133:5;7080:59;:::i;:::-;7067:72;;7057:88;;;:::o;7151:135::-;7223:9;7256:24;7274:5;7256:24;:::i;:::-;7243:37;;7233:53;;;:::o;7292:156::-;7357:9;7390:52;7436:5;7390:52;:::i;:::-;7377:65;;7367:81;;;:::o;7454:128::-;7519:9;7552:24;7570:5;7552:24;:::i;:::-;7539:37;;7529:53;;;:::o;7588:122::-;7661:24;7679:5;7661:24;:::i;:::-;7654:5;7651:35;7641:2;;7700:1;7697;7690:12;7641:2;7631:79;:::o;7716:122::-;7789:24;7807:5;7789:24;:::i;:::-;7782:5;7779:35;7769:2;;7828:1;7825;7818:12;7769:2;7759:79;:::o"
            },
            "methodIdentifiers": {
              "addMarket(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": "f4541da5",
              "getMarketsCount()": "27fa35c3",
              "markets(address)": "8e8f294b",
              "marketsKeys(uint256)": "46a81c00",
              "owner()": "8da5cb5b",
              "uniswapFactory()": "8bdb2afa"
            }
          }
        }
      }
    },
    "errors": [
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/lib/contracts/libraries/FixedPoint.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
          "start": -1
        },
        "type": "Warning"
      },
      {
        "component": "general",
        "errorCode": "1878",
        "formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> @uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol\n\n",
        "message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
        "severity": "warning",
        "sourceLocation": {
          "end": -1,
          "file": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
          "start": -1
        },
        "type": "Warning"
      }
    ],
    "sources": {
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ]
          },
          "id": 78,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:0"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 2,
                "nodeType": "StructuredDocumentation",
                "src": "58:70:0",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 77,
              "linearizedBaseContracts": [
                77
              ],
              "name": "IERC20",
              "nameLocation": "139:6:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 3,
                    "nodeType": "StructuredDocumentation",
                    "src": "152:66:0",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 8,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "232:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 4,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "243:2:0"
                  },
                  "returnParameters": {
                    "id": 7,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 6,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 8,
                        "src": "269:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 5,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "269:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "268:9:0"
                  },
                  "scope": 77,
                  "src": "223:55:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "284:72:0",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 16,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "370:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "388:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "380:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "380:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "379:17:0"
                  },
                  "returnParameters": {
                    "id": 15,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 14,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 16,
                        "src": "420:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 13,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "420:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "419:9:0"
                  },
                  "scope": 77,
                  "src": "361:68:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 17,
                    "nodeType": "StructuredDocumentation",
                    "src": "435:209:0",
                    "text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 26,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "658:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 22,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 19,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "675:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "667:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 18,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "667:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 21,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "694:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "686:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 20,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "686:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "666:35:0"
                  },
                  "returnParameters": {
                    "id": 25,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 24,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 26,
                        "src": "720:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 23,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "719:6:0"
                  },
                  "scope": 77,
                  "src": "649:77:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 27,
                    "nodeType": "StructuredDocumentation",
                    "src": "732:264:0",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 36,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1010:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 32,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 29,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1028:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1020:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 28,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1020:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 31,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1043:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1035:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 30,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1035:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1019:32:0"
                  },
                  "returnParameters": {
                    "id": 35,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 34,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 36,
                        "src": "1075:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 33,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1075:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1074:9:0"
                  },
                  "scope": 77,
                  "src": "1001:83:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 37,
                    "nodeType": "StructuredDocumentation",
                    "src": "1090:642:0",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 46,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "1746:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 42,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 39,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1762:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1754:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 38,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 41,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1779:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1771:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1771:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:33:0"
                  },
                  "returnParameters": {
                    "id": 45,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 44,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 46,
                        "src": "1805:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 43,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1805:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1804:6:0"
                  },
                  "scope": 77,
                  "src": "1737:74:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 47,
                    "nodeType": "StructuredDocumentation",
                    "src": "1817:296:0",
                    "text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 58,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2127:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 54,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 49,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "2157:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2149:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 48,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2149:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 51,
                        "mutability": "mutable",
                        "name": "recipient",
                        "nameLocation": "2181:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2173:17:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 50,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2173:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 53,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2208:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2200:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 52,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2200:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2139:81:0"
                  },
                  "returnParameters": {
                    "id": 57,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 56,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 58,
                        "src": "2239:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 55,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2239:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2238:6:0"
                  },
                  "scope": 77,
                  "src": "2118:127:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "2251:158:0",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 67,
                  "name": "Transfer",
                  "nameLocation": "2420:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 66,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 61,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2445:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2429:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 60,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2429:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 63,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2467:2:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2451:18:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 62,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2451:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 65,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2479:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "2471:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 64,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2428:57:0"
                  },
                  "src": "2414:72:0"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "2492:148:0",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 76,
                  "name": "Approval",
                  "nameLocation": "2651:8:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 75,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 70,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "2676:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2660:21:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 69,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2660:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 72,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2699:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2683:23:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 71,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2683:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 74,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2716:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 76,
                        "src": "2708:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 73,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2708:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2659:63:0"
                  },
                  "src": "2645:78:0"
                }
              ],
              "scope": 78,
              "src": "129:2596:0",
              "usedErrors": []
            }
          ],
          "src": "33:2693:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
          "exportedSymbols": {
            "SafeMath": [
              389
            ]
          },
          "id": 390,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 79,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 80,
                "nodeType": "StructuredDocumentation",
                "src": "211:186:1",
                "text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\n now has built in overflow checking."
              },
              "fullyImplemented": true,
              "id": 389,
              "linearizedBaseContracts": [
                389
              ],
              "name": "SafeMath",
              "nameLocation": "406:8:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 111,
                    "nodeType": "Block",
                    "src": "633:140:1",
                    "statements": [
                      {
                        "id": 110,
                        "nodeType": "UncheckedBlock",
                        "src": "643:124:1",
                        "statements": [
                          {
                            "assignments": [
                              93
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 93,
                                "mutability": "mutable",
                                "name": "c",
                                "nameLocation": "675:1:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 110,
                                "src": "667:9:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 92,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "667:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 97,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 94,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "679:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 95,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "683:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "679:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "667:17:1"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 98,
                                "name": "c",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 93,
                                "src": "702:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 99,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 83,
                                "src": "706:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "702:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 105,
                            "nodeType": "IfStatement",
                            "src": "698:28:1",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 101,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "717:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 102,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "724:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 103,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "716:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 91,
                              "id": 104,
                              "nodeType": "Return",
                              "src": "709:17:1"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 106,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "748:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 107,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 93,
                                  "src": "754:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "747:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 91,
                            "id": 109,
                            "nodeType": "Return",
                            "src": "740:16:1"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 81,
                    "nodeType": "StructuredDocumentation",
                    "src": "421:131:1",
                    "text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 112,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryAdd",
                  "nameLocation": "566:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 83,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "581:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "573:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 82,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "573:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 85,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "592:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "584:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 84,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "584:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "572:22:1"
                  },
                  "returnParameters": {
                    "id": 91,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 88,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "618:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 87,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "618:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 90,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 112,
                        "src": "624:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 89,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "624:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "617:15:1"
                  },
                  "scope": 389,
                  "src": "557:216:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 139,
                    "nodeType": "Block",
                    "src": "995:113:1",
                    "statements": [
                      {
                        "id": 138,
                        "nodeType": "UncheckedBlock",
                        "src": "1005:97:1",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 124,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 117,
                                "src": "1033:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 125,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 115,
                                "src": "1037:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1033:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 131,
                            "nodeType": "IfStatement",
                            "src": "1029:28:1",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 127,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1048:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 128,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1055:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 129,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1047:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 123,
                              "id": 130,
                              "nodeType": "Return",
                              "src": "1040:17:1"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 132,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1079:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 135,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 133,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 115,
                                    "src": "1085:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 134,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 117,
                                    "src": "1089:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1085:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 136,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1078:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 123,
                            "id": 137,
                            "nodeType": "Return",
                            "src": "1071:20:1"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 113,
                    "nodeType": "StructuredDocumentation",
                    "src": "779:135:1",
                    "text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 140,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "trySub",
                  "nameLocation": "928:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 118,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 115,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "943:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "935:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 114,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "935:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 117,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "954:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "946:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 116,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "946:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "934:22:1"
                  },
                  "returnParameters": {
                    "id": 123,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 120,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "980:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 119,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "980:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 122,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 140,
                        "src": "986:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 121,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "986:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "979:15:1"
                  },
                  "scope": 389,
                  "src": "919:189:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 181,
                    "nodeType": "Block",
                    "src": "1332:417:1",
                    "statements": [
                      {
                        "id": 180,
                        "nodeType": "UncheckedBlock",
                        "src": "1342:401:1",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 152,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "1600:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1605:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1600:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 159,
                            "nodeType": "IfStatement",
                            "src": "1596:28:1",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "74727565",
                                    "id": 155,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1616:4:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "true"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 156,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1622:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 157,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1615:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 151,
                              "id": 158,
                              "nodeType": "Return",
                              "src": "1608:16:1"
                            }
                          },
                          {
                            "assignments": [
                              161
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 161,
                                "mutability": "mutable",
                                "name": "c",
                                "nameLocation": "1646:1:1",
                                "nodeType": "VariableDeclaration",
                                "scope": 180,
                                "src": "1638:9:1",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "typeName": {
                                  "id": 160,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1638:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 165,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 162,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 143,
                                "src": "1650:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 163,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145,
                                "src": "1654:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1650:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "1638:17:1"
                          },
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 168,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 166,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "1673:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 167,
                                  "name": "a",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 143,
                                  "src": "1677:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1673:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 169,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145,
                                "src": "1682:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "1673:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 175,
                            "nodeType": "IfStatement",
                            "src": "1669:33:1",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 171,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1693:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 172,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1700:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 173,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1692:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 151,
                              "id": 174,
                              "nodeType": "Return",
                              "src": "1685:17:1"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 176,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1724:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "id": 177,
                                  "name": "c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "1730:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 178,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1723:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 151,
                            "id": 179,
                            "nodeType": "Return",
                            "src": "1716:16:1"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 141,
                    "nodeType": "StructuredDocumentation",
                    "src": "1114:137:1",
                    "text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
                  },
                  "id": 182,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryMul",
                  "nameLocation": "1265:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 146,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 143,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "1280:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1272:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 142,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1272:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 145,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "1291:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1283:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 144,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1283:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1271:22:1"
                  },
                  "returnParameters": {
                    "id": 151,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 148,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1317:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 147,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1317:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "1323:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1323:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1316:15:1"
                  },
                  "scope": 389,
                  "src": "1256:493:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 209,
                    "nodeType": "Block",
                    "src": "1974:114:1",
                    "statements": [
                      {
                        "id": 208,
                        "nodeType": "UncheckedBlock",
                        "src": "1984:98:1",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 194,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 187,
                                "src": "2012:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2017:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2012:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 201,
                            "nodeType": "IfStatement",
                            "src": "2008:29:1",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 197,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2028:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2035:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 199,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2027:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 193,
                              "id": 200,
                              "nodeType": "Return",
                              "src": "2020:17:1"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 202,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2059:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 205,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 203,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 185,
                                    "src": "2065:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 204,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 187,
                                    "src": "2069:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2065:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 206,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2058:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 193,
                            "id": 207,
                            "nodeType": "Return",
                            "src": "2051:20:1"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 183,
                    "nodeType": "StructuredDocumentation",
                    "src": "1755:138:1",
                    "text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
                  },
                  "id": 210,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryDiv",
                  "nameLocation": "1907:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "1922:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 210,
                        "src": "1914:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1914:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "1933:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 210,
                        "src": "1925:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1925:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1913:22:1"
                  },
                  "returnParameters": {
                    "id": 193,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 210,
                        "src": "1959:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1959:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 192,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 210,
                        "src": "1965:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 191,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1965:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1958:15:1"
                  },
                  "scope": 389,
                  "src": "1898:190:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 237,
                    "nodeType": "Block",
                    "src": "2323:114:1",
                    "statements": [
                      {
                        "id": 236,
                        "nodeType": "UncheckedBlock",
                        "src": "2333:98:1",
                        "statements": [
                          {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 222,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 215,
                                "src": "2361:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2366:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2361:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 229,
                            "nodeType": "IfStatement",
                            "src": "2357:29:1",
                            "trueBody": {
                              "expression": {
                                "components": [
                                  {
                                    "hexValue": "66616c7365",
                                    "id": 225,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2377:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 226,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2384:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "id": 227,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2376:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
                                  "typeString": "tuple(bool,int_const 0)"
                                }
                              },
                              "functionReturnParameters": 221,
                              "id": 228,
                              "nodeType": "Return",
                              "src": "2369:17:1"
                            }
                          },
                          {
                            "expression": {
                              "components": [
                                {
                                  "hexValue": "74727565",
                                  "id": 230,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2408:4:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 231,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 213,
                                    "src": "2414:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "%",
                                  "rightExpression": {
                                    "id": 232,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 215,
                                    "src": "2418:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "2414:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 234,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2407:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
                                "typeString": "tuple(bool,uint256)"
                              }
                            },
                            "functionReturnParameters": 221,
                            "id": 235,
                            "nodeType": "Return",
                            "src": "2400:20:1"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 211,
                    "nodeType": "StructuredDocumentation",
                    "src": "2094:148:1",
                    "text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
                  },
                  "id": 238,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryMod",
                  "nameLocation": "2256:6:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 216,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 213,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "2271:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "2263:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 212,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2263:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "2282:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "2274:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2274:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2262:22:1"
                  },
                  "returnParameters": {
                    "id": 221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 218,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "2308:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 217,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2308:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 220,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 238,
                        "src": "2314:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 219,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2314:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2307:15:1"
                  },
                  "scope": 389,
                  "src": "2247:190:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 252,
                    "nodeType": "Block",
                    "src": "2739:29:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 250,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 248,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "2756:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 249,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 243,
                            "src": "2760:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2756:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 247,
                        "id": 251,
                        "nodeType": "Return",
                        "src": "2749:12:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 239,
                    "nodeType": "StructuredDocumentation",
                    "src": "2443:224:1",
                    "text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
                  },
                  "id": 253,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "add",
                  "nameLocation": "2681:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 241,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "2693:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "2685:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 240,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2685:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 243,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "2704:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "2696:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 242,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2696:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2684:22:1"
                  },
                  "returnParameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 246,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 253,
                        "src": "2730:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 245,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2730:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2729:9:1"
                  },
                  "scope": 389,
                  "src": "2672:96:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 267,
                    "nodeType": "Block",
                    "src": "3106:29:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 263,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 256,
                            "src": "3123:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 264,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 258,
                            "src": "3127:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3123:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 262,
                        "id": 266,
                        "nodeType": "Return",
                        "src": "3116:12:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 254,
                    "nodeType": "StructuredDocumentation",
                    "src": "2774:260:1",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 268,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "3048:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 256,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "3060:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "3052:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3052:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 258,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "3071:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "3063:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 257,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3063:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3051:22:1"
                  },
                  "returnParameters": {
                    "id": 262,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 261,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 268,
                        "src": "3097:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 260,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3097:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3096:9:1"
                  },
                  "scope": 389,
                  "src": "3039:96:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 282,
                    "nodeType": "Block",
                    "src": "3449:29:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 280,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 278,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 271,
                            "src": "3466:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 279,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 273,
                            "src": "3470:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3466:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 277,
                        "id": 281,
                        "nodeType": "Return",
                        "src": "3459:12:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 269,
                    "nodeType": "StructuredDocumentation",
                    "src": "3141:236:1",
                    "text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
                  },
                  "id": 283,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "3391:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 274,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 271,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "3403:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "3395:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 270,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3395:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 273,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "3414:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "3406:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 272,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3406:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3394:22:1"
                  },
                  "returnParameters": {
                    "id": 277,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 276,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 283,
                        "src": "3440:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 275,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3440:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3439:9:1"
                  },
                  "scope": 389,
                  "src": "3382:96:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 297,
                    "nodeType": "Block",
                    "src": "3834:29:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 293,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 286,
                            "src": "3851:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 294,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 288,
                            "src": "3855:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3851:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 292,
                        "id": 296,
                        "nodeType": "Return",
                        "src": "3844:12:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 284,
                    "nodeType": "StructuredDocumentation",
                    "src": "3484:278:1",
                    "text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 298,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "3776:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 286,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "3788:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "3780:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 285,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3780:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 288,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "3799:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "3791:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 287,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3791:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3779:22:1"
                  },
                  "returnParameters": {
                    "id": 292,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 291,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 298,
                        "src": "3825:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 290,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3825:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3824:9:1"
                  },
                  "scope": 389,
                  "src": "3767:96:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 312,
                    "nodeType": "Block",
                    "src": "4383:29:1",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 308,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "4400:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "%",
                          "rightExpression": {
                            "id": 309,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "4404:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4400:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 307,
                        "id": 311,
                        "nodeType": "Return",
                        "src": "4393:12:1"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 299,
                    "nodeType": "StructuredDocumentation",
                    "src": "3869:442:1",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 313,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nameLocation": "4325:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 304,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "4337:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "4329:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4329:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 303,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "4348:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "4340:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 302,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4340:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4328:22:1"
                  },
                  "returnParameters": {
                    "id": 307,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 306,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 313,
                        "src": "4374:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 305,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4374:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4373:9:1"
                  },
                  "scope": 389,
                  "src": "4316:96:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 337,
                    "nodeType": "Block",
                    "src": "5001:106:1",
                    "statements": [
                      {
                        "id": 336,
                        "nodeType": "UncheckedBlock",
                        "src": "5011:90:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 328,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 326,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 318,
                                    "src": "5043:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 327,
                                    "name": "a",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 316,
                                    "src": "5048:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5043:6:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 329,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 320,
                                  "src": "5051:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 325,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "5035:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5035:29:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 331,
                            "nodeType": "ExpressionStatement",
                            "src": "5035:29:1"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 332,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 316,
                                "src": "5085:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 333,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 318,
                                "src": "5089:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5085:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 324,
                            "id": 335,
                            "nodeType": "Return",
                            "src": "5078:12:1"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 314,
                    "nodeType": "StructuredDocumentation",
                    "src": "4418:453:1",
                    "text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
                  },
                  "id": 338,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sub",
                  "nameLocation": "4885:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 321,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 316,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "4906:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "4898:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4898:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 318,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "4925:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "4917:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 317,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4917:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 320,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "4950:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "4936:26:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 319,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4936:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4888:80:1"
                  },
                  "returnParameters": {
                    "id": 324,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 323,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 338,
                        "src": "4992:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 322,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4992:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4991:9:1"
                  },
                  "scope": 389,
                  "src": "4876:231:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 362,
                    "nodeType": "Block",
                    "src": "5716:105:1",
                    "statements": [
                      {
                        "id": 361,
                        "nodeType": "UncheckedBlock",
                        "src": "5726:89:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 351,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 343,
                                    "src": "5758:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 352,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5762:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "5758:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 354,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 345,
                                  "src": "5765:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 350,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "5750:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 355,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5750:28:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 356,
                            "nodeType": "ExpressionStatement",
                            "src": "5750:28:1"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 357,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 341,
                                "src": "5799:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 358,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 343,
                                "src": "5803:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "5799:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 349,
                            "id": 360,
                            "nodeType": "Return",
                            "src": "5792:12:1"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 339,
                    "nodeType": "StructuredDocumentation",
                    "src": "5113:473:1",
                    "text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 363,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "5600:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 341,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "5621:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 363,
                        "src": "5613:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 340,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5613:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "5640:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 363,
                        "src": "5632:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5632:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 345,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "5665:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 363,
                        "src": "5651:26:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 344,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5651:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5603:80:1"
                  },
                  "returnParameters": {
                    "id": 349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 363,
                        "src": "5707:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5707:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5706:9:1"
                  },
                  "scope": 389,
                  "src": "5591:230:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 387,
                    "nodeType": "Block",
                    "src": "6592:105:1",
                    "statements": [
                      {
                        "id": 386,
                        "nodeType": "UncheckedBlock",
                        "src": "6602:89:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 376,
                                    "name": "b",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 368,
                                    "src": "6634:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "hexValue": "30",
                                    "id": 377,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "6638:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  "src": "6634:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "id": 379,
                                  "name": "errorMessage",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 370,
                                  "src": "6641:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "id": 375,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -18,
                                  -18
                                ],
                                "referencedDeclaration": -18,
                                "src": "6626:7:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 380,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6626:28:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 381,
                            "nodeType": "ExpressionStatement",
                            "src": "6626:28:1"
                          },
                          {
                            "expression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 384,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 382,
                                "name": "a",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 366,
                                "src": "6675:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "id": 383,
                                "name": "b",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "6679:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6675:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "functionReturnParameters": 374,
                            "id": 385,
                            "nodeType": "Return",
                            "src": "6668:12:1"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 364,
                    "nodeType": "StructuredDocumentation",
                    "src": "5827:635:1",
                    "text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
                  },
                  "id": 388,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mod",
                  "nameLocation": "6476:3:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 371,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 366,
                        "mutability": "mutable",
                        "name": "a",
                        "nameLocation": "6497:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "6489:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 365,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6489:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 368,
                        "mutability": "mutable",
                        "name": "b",
                        "nameLocation": "6516:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "6508:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 367,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6508:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 370,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "6541:12:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "6527:26:1",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 369,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6527:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6479:80:1"
                  },
                  "returnParameters": {
                    "id": 374,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 373,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 388,
                        "src": "6583:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 372,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6583:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6582:9:1"
                  },
                  "scope": 389,
                  "src": "6467:230:1",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 390,
              "src": "398:6301:1",
              "usedErrors": []
            }
          ],
          "src": "33:6667:1"
        },
        "id": 1
      },
      "@uniswap/lib/contracts/libraries/FixedPoint.sol": {
        "ast": {
          "absolutePath": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
          "exportedSymbols": {
            "FixedPoint": [
              575
            ]
          },
          "id": 576,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 391,
              "literals": [
                "solidity",
                ">=",
                "0.4",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:2"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 575,
              "linearizedBaseContracts": [
                575
              ],
              "name": "FixedPoint",
              "nameLocation": "137:10:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "FixedPoint.uq112x112",
                  "id": 394,
                  "members": [
                    {
                      "constant": false,
                      "id": 393,
                      "mutability": "mutable",
                      "name": "_x",
                      "nameLocation": "249:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "241:10:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint224",
                        "typeString": "uint224"
                      },
                      "typeName": {
                        "id": 392,
                        "name": "uint224",
                        "nodeType": "ElementaryTypeName",
                        "src": "241:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint224",
                          "typeString": "uint224"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "uq112x112",
                  "nameLocation": "221:9:2",
                  "nodeType": "StructDefinition",
                  "scope": 575,
                  "src": "214:44:2",
                  "visibility": "public"
                },
                {
                  "canonicalName": "FixedPoint.uq144x112",
                  "id": 397,
                  "members": [
                    {
                      "constant": false,
                      "id": 396,
                      "mutability": "mutable",
                      "name": "_x",
                      "nameLocation": "356:2:2",
                      "nodeType": "VariableDeclaration",
                      "scope": 397,
                      "src": "351:7:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 395,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "351:4:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "uq144x112",
                  "nameLocation": "331:9:2",
                  "nodeType": "StructDefinition",
                  "scope": 575,
                  "src": "324:41:2",
                  "visibility": "public"
                },
                {
                  "constant": true,
                  "id": 400,
                  "mutability": "constant",
                  "name": "RESOLUTION",
                  "nameLocation": "394:10:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 575,
                  "src": "371:39:2",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 398,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "371:5:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": {
                    "hexValue": "313132",
                    "id": 399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "407:3:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_112_by_1",
                      "typeString": "int_const 112"
                    },
                    "value": "112"
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 417,
                    "nodeType": "Block",
                    "src": "524:59:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 411,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 402,
                                    "src": "559:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  ],
                                  "id": 410,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "551:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint224_$",
                                    "typeString": "type(uint224)"
                                  },
                                  "typeName": {
                                    "id": 409,
                                    "name": "uint224",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "551:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 412,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "551:10:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "id": 413,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "565:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "551:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 408,
                            "name": "uq112x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "541:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq112x112_$394_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                            }
                          },
                          "id": 415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "541:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                            "typeString": "struct FixedPoint.uq112x112 memory"
                          }
                        },
                        "functionReturnParameters": 407,
                        "id": 416,
                        "nodeType": "Return",
                        "src": "534:42:2"
                      }
                    ]
                  },
                  "id": 418,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encode",
                  "nameLocation": "465:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 403,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 402,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "480:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 418,
                        "src": "472:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 401,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "472:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "471:11:2"
                  },
                  "returnParameters": {
                    "id": 407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 418,
                        "src": "506:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 405,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 404,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "506:9:2"
                          },
                          "referencedDeclaration": 394,
                          "src": "506:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$394_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "505:18:2"
                  },
                  "scope": 575,
                  "src": "456:127:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 435,
                    "nodeType": "Block",
                    "src": "700:59:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 429,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 420,
                                    "src": "735:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint144",
                                      "typeString": "uint144"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint144",
                                      "typeString": "uint144"
                                    }
                                  ],
                                  "id": 428,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "727:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 427,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "727:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 430,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "727:10:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<<",
                              "rightExpression": {
                                "id": 431,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "741:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "727:24:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 426,
                            "name": "uq144x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "717:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq144x112_$397_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq144x112 storage pointer)"
                            }
                          },
                          "id": 433,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "717:35:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$397_memory_ptr",
                            "typeString": "struct FixedPoint.uq144x112 memory"
                          }
                        },
                        "functionReturnParameters": 425,
                        "id": 434,
                        "nodeType": "Return",
                        "src": "710:42:2"
                      }
                    ]
                  },
                  "id": 436,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "encode144",
                  "nameLocation": "638:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 421,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 420,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "656:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 436,
                        "src": "648:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint144",
                          "typeString": "uint144"
                        },
                        "typeName": {
                          "id": 419,
                          "name": "uint144",
                          "nodeType": "ElementaryTypeName",
                          "src": "648:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "647:11:2"
                  },
                  "returnParameters": {
                    "id": 425,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 424,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 436,
                        "src": "682:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq144x112_$397_memory_ptr",
                          "typeString": "struct FixedPoint.uq144x112"
                        },
                        "typeName": {
                          "id": 423,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 422,
                            "name": "uq144x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 397,
                            "src": "682:9:2"
                          },
                          "referencedDeclaration": 397,
                          "src": "682:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$397_storage_ptr",
                            "typeString": "struct FixedPoint.uq144x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "681:18:2"
                  },
                  "scope": 575,
                  "src": "629:130:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 464,
                    "nodeType": "Block",
                    "src": "915:107:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              "id": 450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 448,
                                "name": "x",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 441,
                                "src": "933:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "938:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "933:6:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4669786564506f696e743a204449565f42595f5a45524f",
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "941:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              },
                              "value": "FixedPoint: DIV_BY_ZERO"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              }
                            ],
                            "id": 447,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "925:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "925:42:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 453,
                        "nodeType": "ExpressionStatement",
                        "src": "925:42:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 455,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 439,
                                  "src": "994:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                  }
                                },
                                "id": 456,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 393,
                                "src": "994:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 459,
                                    "name": "x",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 441,
                                    "src": "1012:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint112",
                                      "typeString": "uint112"
                                    }
                                  ],
                                  "id": 458,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1004:7:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint224_$",
                                    "typeString": "type(uint224)"
                                  },
                                  "typeName": {
                                    "id": 457,
                                    "name": "uint224",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1004:7:2",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 460,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1004:10:2",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "src": "994:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 454,
                            "name": "uq112x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "984:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq112x112_$394_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                            }
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "984:31:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                            "typeString": "struct FixedPoint.uq112x112 memory"
                          }
                        },
                        "functionReturnParameters": 446,
                        "id": 463,
                        "nodeType": "Return",
                        "src": "977:38:2"
                      }
                    ]
                  },
                  "id": 465,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "div",
                  "nameLocation": "836:3:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 439,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "857:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "840:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 438,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 437,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "840:9:2"
                          },
                          "referencedDeclaration": 394,
                          "src": "840:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$394_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 441,
                        "mutability": "mutable",
                        "name": "x",
                        "nameLocation": "871:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "863:9:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 440,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "863:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "839:34:2"
                  },
                  "returnParameters": {
                    "id": 446,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 445,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 465,
                        "src": "897:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 444,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 443,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "897:9:2"
                          },
                          "referencedDeclaration": 394,
                          "src": "897:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$394_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "896:18:2"
                  },
                  "scope": 575,
                  "src": "827:195:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 509,
                    "nodeType": "Block",
                    "src": "1201:164:2",
                    "statements": [
                      {
                        "assignments": [
                          477
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 477,
                            "mutability": "mutable",
                            "name": "z",
                            "nameLocation": "1216:1:2",
                            "nodeType": "VariableDeclaration",
                            "scope": 509,
                            "src": "1211:6:2",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 476,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "1211:4:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 478,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1211:6:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 501,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 482,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 480,
                                  "name": "y",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 470,
                                  "src": "1235:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 481,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1240:1:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "1235:6:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "||",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 500,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 494,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "id": 491,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 483,
                                          "name": "z",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 477,
                                          "src": "1246:1:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 490,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "arguments": [
                                              {
                                                "expression": {
                                                  "id": 486,
                                                  "name": "self",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 468,
                                                  "src": "1255:4:2",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                                  }
                                                },
                                                "id": 487,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "_x",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 393,
                                                "src": "1255:7:2",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint224",
                                                  "typeString": "uint224"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint224",
                                                  "typeString": "uint224"
                                                }
                                              ],
                                              "id": 485,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "1250:4:2",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 484,
                                                "name": "uint",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "1250:4:2",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 488,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "1250:13:2",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "*",
                                          "rightExpression": {
                                            "id": 489,
                                            "name": "y",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 470,
                                            "src": "1266:1:2",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "1250:17:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "1246:21:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 492,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "1245:23:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "/",
                                  "rightExpression": {
                                    "id": 493,
                                    "name": "y",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 470,
                                    "src": "1271:1:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1245:27:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 497,
                                        "name": "self",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 468,
                                        "src": "1281:4:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                                          "typeString": "struct FixedPoint.uq112x112 memory"
                                        }
                                      },
                                      "id": 498,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "_x",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 393,
                                      "src": "1281:7:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    ],
                                    "id": 496,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1276:4:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_uint256_$",
                                      "typeString": "type(uint256)"
                                    },
                                    "typeName": {
                                      "id": 495,
                                      "name": "uint",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1276:4:2",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 499,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1276:13:2",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1245:44:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "1235:54:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4669786564506f696e743a204d554c5449504c49434154494f4e5f4f564552464c4f57",
                              "id": 502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1291:37:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c49d28a1a0a9590848dc8e15e2ce94a0e18d974f72b2d7169c2f9169e1ee31e8",
                                "typeString": "literal_string \"FixedPoint: MULTIPLICATION_OVERFLOW\""
                              },
                              "value": "FixedPoint: MULTIPLICATION_OVERFLOW"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c49d28a1a0a9590848dc8e15e2ce94a0e18d974f72b2d7169c2f9169e1ee31e8",
                                "typeString": "literal_string \"FixedPoint: MULTIPLICATION_OVERFLOW\""
                              }
                            ],
                            "id": 479,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1227:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 503,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1227:102:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 504,
                        "nodeType": "ExpressionStatement",
                        "src": "1227:102:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 506,
                              "name": "z",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 477,
                              "src": "1356:1:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 505,
                            "name": "uq144x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 397,
                            "src": "1346:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq144x112_$397_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq144x112 storage pointer)"
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1346:12:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$397_memory_ptr",
                            "typeString": "struct FixedPoint.uq144x112 memory"
                          }
                        },
                        "functionReturnParameters": 475,
                        "id": 508,
                        "nodeType": "Return",
                        "src": "1339:19:2"
                      }
                    ]
                  },
                  "id": 510,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mul",
                  "nameLocation": "1125:3:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 471,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 468,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "1146:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "1129:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 467,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 466,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "1129:9:2"
                          },
                          "referencedDeclaration": 394,
                          "src": "1129:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$394_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 470,
                        "mutability": "mutable",
                        "name": "y",
                        "nameLocation": "1157:1:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "1152:6:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 469,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1152:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1128:31:2"
                  },
                  "returnParameters": {
                    "id": 475,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 474,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 510,
                        "src": "1183:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq144x112_$397_memory_ptr",
                          "typeString": "struct FixedPoint.uq144x112"
                        },
                        "typeName": {
                          "id": 473,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 472,
                            "name": "uq144x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 397,
                            "src": "1183:9:2"
                          },
                          "referencedDeclaration": 397,
                          "src": "1183:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$397_storage_ptr",
                            "typeString": "struct FixedPoint.uq144x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1182:18:2"
                  },
                  "scope": 575,
                  "src": "1116:249:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 539,
                    "nodeType": "Block",
                    "src": "1616:144:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              },
                              "id": 523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 521,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 514,
                                "src": "1634:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1648:1:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "1634:15:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4669786564506f696e743a204449565f42595f5a45524f",
                              "id": 524,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1651:25:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              },
                              "value": "FixedPoint: DIV_BY_ZERO"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fb797fc20bb06d860bbe348d99030bb226d980421b724f94accde8487e338e12",
                                "typeString": "literal_string \"FixedPoint: DIV_BY_ZERO\""
                              }
                            ],
                            "id": 520,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1626:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 525,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1626:51:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 526,
                        "nodeType": "ExpressionStatement",
                        "src": "1626:51:2"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 536,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint224",
                                      "typeString": "uint224"
                                    },
                                    "id": 533,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "id": 530,
                                          "name": "numerator",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 512,
                                          "src": "1713:9:2",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint112",
                                            "typeString": "uint112"
                                          }
                                        ],
                                        "id": 529,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "1705:7:2",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint224_$",
                                          "typeString": "type(uint224)"
                                        },
                                        "typeName": {
                                          "id": 528,
                                          "name": "uint224",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "1705:7:2",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 531,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1705:18:2",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint224",
                                        "typeString": "uint224"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<<",
                                    "rightExpression": {
                                      "id": 532,
                                      "name": "RESOLUTION",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 400,
                                      "src": "1727:10:2",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "src": "1705:32:2",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint224",
                                      "typeString": "uint224"
                                    }
                                  }
                                ],
                                "id": 534,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "1704:34:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 535,
                                "name": "denominator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 514,
                                "src": "1741:11:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              "src": "1704:48:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 527,
                            "name": "uq112x112",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 394,
                            "src": "1694:9:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_uq112x112_$394_storage_ptr_$",
                              "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                            }
                          },
                          "id": 537,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1694:59:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                            "typeString": "struct FixedPoint.uq112x112 memory"
                          }
                        },
                        "functionReturnParameters": 519,
                        "id": 538,
                        "nodeType": "Return",
                        "src": "1687:66:2"
                      }
                    ]
                  },
                  "id": 540,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "fraction",
                  "nameLocation": "1526:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 512,
                        "mutability": "mutable",
                        "name": "numerator",
                        "nameLocation": "1543:9:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "1535:17:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 511,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1535:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 514,
                        "mutability": "mutable",
                        "name": "denominator",
                        "nameLocation": "1562:11:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "1554:19:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1554:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1534:40:2"
                  },
                  "returnParameters": {
                    "id": 519,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 518,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 540,
                        "src": "1598:16:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 517,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 516,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "1598:9:2"
                          },
                          "referencedDeclaration": 394,
                          "src": "1598:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$394_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1597:18:2"
                  },
                  "scope": 575,
                  "src": "1517:243:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 556,
                    "nodeType": "Block",
                    "src": "1914:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              },
                              "id": 553,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 550,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 543,
                                  "src": "1939:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                  }
                                },
                                "id": 551,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 393,
                                "src": "1939:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "id": 552,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "1950:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "1939:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint224",
                                "typeString": "uint224"
                              }
                            ],
                            "id": 549,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1931:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint112_$",
                              "typeString": "type(uint112)"
                            },
                            "typeName": {
                              "id": 548,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "1931:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1931:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "functionReturnParameters": 547,
                        "id": 555,
                        "nodeType": "Return",
                        "src": "1924:37:2"
                      }
                    ]
                  },
                  "id": 557,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decode",
                  "nameLocation": "1852:6:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 544,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 543,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "1876:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "1859:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                          "typeString": "struct FixedPoint.uq112x112"
                        },
                        "typeName": {
                          "id": 542,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 541,
                            "name": "uq112x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 394,
                            "src": "1859:9:2"
                          },
                          "referencedDeclaration": 394,
                          "src": "1859:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq112x112_$394_storage_ptr",
                            "typeString": "struct FixedPoint.uq112x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1858:23:2"
                  },
                  "returnParameters": {
                    "id": 547,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 546,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 557,
                        "src": "1905:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 545,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1905:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1904:9:2"
                  },
                  "scope": 575,
                  "src": "1843:125:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 573,
                    "nodeType": "Block",
                    "src": "2125:54:2",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 567,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 560,
                                  "src": "2150:4:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq144x112_$397_memory_ptr",
                                    "typeString": "struct FixedPoint.uq144x112 memory"
                                  }
                                },
                                "id": 568,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 396,
                                "src": "2150:7:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">>",
                              "rightExpression": {
                                "id": 569,
                                "name": "RESOLUTION",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 400,
                                "src": "2161:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "2150:21:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2142:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint144_$",
                              "typeString": "type(uint144)"
                            },
                            "typeName": {
                              "id": 565,
                              "name": "uint144",
                              "nodeType": "ElementaryTypeName",
                              "src": "2142:7:2",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2142:30:2",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "functionReturnParameters": 564,
                        "id": 572,
                        "nodeType": "Return",
                        "src": "2135:37:2"
                      }
                    ]
                  },
                  "id": 574,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decode144",
                  "nameLocation": "2060:9:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 561,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 560,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "2087:4:2",
                        "nodeType": "VariableDeclaration",
                        "scope": 574,
                        "src": "2070:21:2",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_uq144x112_$397_memory_ptr",
                          "typeString": "struct FixedPoint.uq144x112"
                        },
                        "typeName": {
                          "id": 559,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 558,
                            "name": "uq144x112",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 397,
                            "src": "2070:9:2"
                          },
                          "referencedDeclaration": 397,
                          "src": "2070:9:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_uq144x112_$397_storage_ptr",
                            "typeString": "struct FixedPoint.uq144x112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2069:23:2"
                  },
                  "returnParameters": {
                    "id": 564,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 563,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 574,
                        "src": "2116:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint144",
                          "typeString": "uint144"
                        },
                        "typeName": {
                          "id": 562,
                          "name": "uint144",
                          "nodeType": "ElementaryTypeName",
                          "src": "2116:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint144",
                            "typeString": "uint144"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2115:9:2"
                  },
                  "scope": 575,
                  "src": "2051:128:2",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 576,
              "src": "129:2052:2",
              "usedErrors": []
            }
          ],
          "src": "0:2182:2"
        },
        "id": 2
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
          "exportedSymbols": {
            "IUniswapV2Factory": [
              638
            ]
          },
          "id": 639,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 577,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:3"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 638,
              "linearizedBaseContracts": [
                638
              ],
              "name": "IUniswapV2Factory",
              "nameLocation": "36:17:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 587,
                  "name": "PairCreated",
                  "nameLocation": "66:11:3",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 586,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 579,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token0",
                        "nameLocation": "94:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 587,
                        "src": "78:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 578,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "78:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 581,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "token1",
                        "nameLocation": "118:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 587,
                        "src": "102:22:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 580,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "102:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 583,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "134:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 587,
                        "src": "126:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 582,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "126:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 585,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 587,
                        "src": "140:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 584,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "140:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "77:68:3"
                  },
                  "src": "60:86:3"
                },
                {
                  "functionSelector": "017e7e58",
                  "id": 592,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeTo",
                  "nameLocation": "161:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 588,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "166:2:3"
                  },
                  "returnParameters": {
                    "id": 591,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 590,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 592,
                        "src": "192:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 589,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "192:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "191:9:3"
                  },
                  "scope": 638,
                  "src": "152:49:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "094b7415",
                  "id": 597,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "feeToSetter",
                  "nameLocation": "215:11:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 593,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "226:2:3"
                  },
                  "returnParameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 595,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 597,
                        "src": "252:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "252:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "251:9:3"
                  },
                  "scope": 638,
                  "src": "206:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "e6a43905",
                  "id": 606,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getPair",
                  "nameLocation": "276:7:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 602,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 599,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "292:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "284:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 598,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "284:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 601,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "308:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "300:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 600,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "300:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "283:32:3"
                  },
                  "returnParameters": {
                    "id": 605,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 604,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "347:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 606,
                        "src": "339:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 603,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "339:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "338:14:3"
                  },
                  "scope": 638,
                  "src": "267:86:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "1e3dd18b",
                  "id": 613,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairs",
                  "nameLocation": "367:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 609,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 608,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 613,
                        "src": "376:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 607,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "376:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "375:6:3"
                  },
                  "returnParameters": {
                    "id": 612,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 611,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "413:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 613,
                        "src": "405:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 610,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "405:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "404:14:3"
                  },
                  "scope": 638,
                  "src": "358:61:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "574f2ba3",
                  "id": 618,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allPairsLength",
                  "nameLocation": "433:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 614,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "447:2:3"
                  },
                  "returnParameters": {
                    "id": 617,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 616,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 618,
                        "src": "473:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 615,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "473:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "472:6:3"
                  },
                  "scope": 638,
                  "src": "424:55:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c9c65396",
                  "id": 627,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "createPair",
                  "nameLocation": "494:10:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 623,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 620,
                        "mutability": "mutable",
                        "name": "tokenA",
                        "nameLocation": "513:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 627,
                        "src": "505:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 619,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "505:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 622,
                        "mutability": "mutable",
                        "name": "tokenB",
                        "nameLocation": "529:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 627,
                        "src": "521:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 621,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "521:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "504:32:3"
                  },
                  "returnParameters": {
                    "id": 626,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 625,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "563:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 627,
                        "src": "555:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 624,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "555:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "554:14:3"
                  },
                  "scope": 638,
                  "src": "485:84:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "f46901ed",
                  "id": 632,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeTo",
                  "nameLocation": "584:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 630,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 629,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 632,
                        "src": "593:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 628,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "593:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "592:9:3"
                  },
                  "returnParameters": {
                    "id": 631,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "610:0:3"
                  },
                  "scope": 638,
                  "src": "575:36:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a2e74af6",
                  "id": 637,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setFeeToSetter",
                  "nameLocation": "625:14:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 635,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 634,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 637,
                        "src": "640:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 633,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "640:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "639:9:3"
                  },
                  "returnParameters": {
                    "id": 636,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "657:0:3"
                  },
                  "scope": 638,
                  "src": "616:42:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 639,
              "src": "26:634:3",
              "usedErrors": []
            }
          ],
          "src": "0:661:3"
        },
        "id": 3
      },
      "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
          "exportedSymbols": {
            "IUniswapV2Pair": [
              880
            ]
          },
          "id": 881,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 640,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": false,
              "id": 880,
              "linearizedBaseContracts": [
                880
              ],
              "name": "IUniswapV2Pair",
              "nameLocation": "36:14:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "id": 648,
                  "name": "Approval",
                  "nameLocation": "63:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 647,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 642,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "88:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "72:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "72:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 644,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "111:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "95:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 643,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "95:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 646,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "125:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 648,
                        "src": "120:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 645,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "120:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "71:60:4"
                  },
                  "src": "57:75:4"
                },
                {
                  "anonymous": false,
                  "id": 656,
                  "name": "Transfer",
                  "nameLocation": "143:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 655,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 650,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "168:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "152:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 649,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "152:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 652,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "190:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "174:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 651,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "174:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 654,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "199:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 656,
                        "src": "194:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 653,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "194:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "151:54:4"
                  },
                  "src": "137:69:4"
                },
                {
                  "functionSelector": "06fdde03",
                  "id": 661,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "221:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 657,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "225:2:4"
                  },
                  "returnParameters": {
                    "id": 660,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 659,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 661,
                        "src": "251:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 658,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "251:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "250:15:4"
                  },
                  "scope": 880,
                  "src": "212:54:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "95d89b41",
                  "id": 666,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "280:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 662,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "286:2:4"
                  },
                  "returnParameters": {
                    "id": 665,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 664,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 666,
                        "src": "312:13:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 663,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "312:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "311:15:4"
                  },
                  "scope": 880,
                  "src": "271:56:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "313ce567",
                  "id": 671,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "341:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 667,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "349:2:4"
                  },
                  "returnParameters": {
                    "id": 670,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 669,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "375:5:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 668,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "375:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "374:7:4"
                  },
                  "scope": 880,
                  "src": "332:50:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "18160ddd",
                  "id": 676,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "396:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 672,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "407:2:4"
                  },
                  "returnParameters": {
                    "id": 675,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 674,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 676,
                        "src": "433:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 673,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "433:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "432:6:4"
                  },
                  "scope": 880,
                  "src": "387:52:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "70a08231",
                  "id": 683,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "453:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 679,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 678,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "471:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 683,
                        "src": "463:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 677,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "463:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "462:15:4"
                  },
                  "returnParameters": {
                    "id": 682,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 681,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 683,
                        "src": "501:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 680,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "501:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "500:6:4"
                  },
                  "scope": 880,
                  "src": "444:63:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "dd62ed3e",
                  "id": 692,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "521:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 688,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 685,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "539:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "531:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 684,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "531:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 687,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "554:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "546:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 686,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "546:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "530:32:4"
                  },
                  "returnParameters": {
                    "id": 691,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 690,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 692,
                        "src": "586:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 689,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "586:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "585:6:4"
                  },
                  "scope": 880,
                  "src": "512:80:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "095ea7b3",
                  "id": 701,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "607:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 697,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 694,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "623:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 701,
                        "src": "615:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 693,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "615:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 696,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "637:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 701,
                        "src": "632:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 695,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "632:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "614:29:4"
                  },
                  "returnParameters": {
                    "id": 700,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 699,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 701,
                        "src": "662:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 698,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "662:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "661:6:4"
                  },
                  "scope": 880,
                  "src": "598:70:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "a9059cbb",
                  "id": 710,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "682:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 706,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 703,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "699:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 710,
                        "src": "691:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 702,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "691:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 705,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "708:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 710,
                        "src": "703:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 704,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "703:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "690:24:4"
                  },
                  "returnParameters": {
                    "id": 709,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 708,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 710,
                        "src": "733:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 707,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "733:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "732:6:4"
                  },
                  "scope": 880,
                  "src": "673:66:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "23b872dd",
                  "id": 721,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "753:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 717,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 712,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "774:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 721,
                        "src": "766:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 711,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "766:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 714,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "788:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 721,
                        "src": "780:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "780:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 716,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "797:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 721,
                        "src": "792:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "792:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "765:38:4"
                  },
                  "returnParameters": {
                    "id": 720,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 719,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 721,
                        "src": "822:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 718,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:6:4"
                  },
                  "scope": 880,
                  "src": "744:84:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "3644e515",
                  "id": 726,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "DOMAIN_SEPARATOR",
                  "nameLocation": "843:16:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 722,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "859:2:4"
                  },
                  "returnParameters": {
                    "id": 725,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 724,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 726,
                        "src": "885:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 723,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "885:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "884:9:4"
                  },
                  "scope": 880,
                  "src": "834:60:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "30adf81f",
                  "id": 731,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "PERMIT_TYPEHASH",
                  "nameLocation": "908:15:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 727,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "923:2:4"
                  },
                  "returnParameters": {
                    "id": 730,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 729,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 731,
                        "src": "949:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 728,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "949:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "948:9:4"
                  },
                  "scope": 880,
                  "src": "899:59:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7ecebe00",
                  "id": 738,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "nonces",
                  "nameLocation": "972:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 734,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 733,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "987:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 738,
                        "src": "979:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 732,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "979:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "978:15:4"
                  },
                  "returnParameters": {
                    "id": 737,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 736,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 738,
                        "src": "1017:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 735,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1017:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1016:6:4"
                  },
                  "scope": 880,
                  "src": "963:60:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d505accf",
                  "id": 755,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "permit",
                  "nameLocation": "1038:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 753,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 740,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1053:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "1045:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 739,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1045:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 742,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1068:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "1060:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 741,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1060:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 744,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1082:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "1077:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 743,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1077:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 746,
                        "mutability": "mutable",
                        "name": "deadline",
                        "nameLocation": "1094:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "1089:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 745,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1089:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 748,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "1110:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "1104:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 747,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "1104:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 750,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "1121:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "1113:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 749,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1113:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 752,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "1132:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 755,
                        "src": "1124:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 751,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1124:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1044:90:4"
                  },
                  "returnParameters": {
                    "id": 754,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1143:0:4"
                  },
                  "scope": 880,
                  "src": "1029:115:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "anonymous": false,
                  "id": 763,
                  "name": "Mint",
                  "nameLocation": "1156:4:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 762,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 757,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1177:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 763,
                        "src": "1161:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1161:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 759,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "1190:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 763,
                        "src": "1185:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 758,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1185:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 761,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "1204:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 763,
                        "src": "1199:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 760,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1199:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1160:52:4"
                  },
                  "src": "1150:63:4"
                },
                {
                  "anonymous": false,
                  "id": 773,
                  "name": "Burn",
                  "nameLocation": "1224:4:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 772,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 765,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1245:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 773,
                        "src": "1229:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1229:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 767,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "1258:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 773,
                        "src": "1253:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 766,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1253:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 769,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "1272:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 773,
                        "src": "1267:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 768,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1267:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 771,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1297:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 773,
                        "src": "1281:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 770,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1281:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1228:72:4"
                  },
                  "src": "1218:83:4"
                },
                {
                  "anonymous": false,
                  "id": 787,
                  "name": "Swap",
                  "nameLocation": "1312:4:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 786,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 775,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "sender",
                        "nameLocation": "1342:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 787,
                        "src": "1326:22:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 774,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1326:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 777,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0In",
                        "nameLocation": "1363:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 787,
                        "src": "1358:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 776,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1358:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 779,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1In",
                        "nameLocation": "1387:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 787,
                        "src": "1382:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 778,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1382:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 781,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "1411:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 787,
                        "src": "1406:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 780,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1406:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 783,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "1436:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 787,
                        "src": "1431:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 782,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1431:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 785,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1472:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 787,
                        "src": "1456:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 784,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1456:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1316:164:4"
                  },
                  "src": "1306:175:4"
                },
                {
                  "anonymous": false,
                  "id": 793,
                  "name": "Sync",
                  "nameLocation": "1492:4:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 792,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 789,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "1505:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 793,
                        "src": "1497:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 788,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1497:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 791,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "1523:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 793,
                        "src": "1515:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 790,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1515:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1496:36:4"
                  },
                  "src": "1486:47:4"
                },
                {
                  "functionSelector": "ba9a7a56",
                  "id": 798,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "MINIMUM_LIQUIDITY",
                  "nameLocation": "1548:17:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 794,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1565:2:4"
                  },
                  "returnParameters": {
                    "id": 797,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 796,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 798,
                        "src": "1591:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 795,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1591:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1590:6:4"
                  },
                  "scope": 880,
                  "src": "1539:58:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "c45a0155",
                  "id": 803,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "factory",
                  "nameLocation": "1611:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 799,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1618:2:4"
                  },
                  "returnParameters": {
                    "id": 802,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 801,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 803,
                        "src": "1644:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 800,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1644:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1643:9:4"
                  },
                  "scope": 880,
                  "src": "1602:51:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0dfe1681",
                  "id": 808,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token0",
                  "nameLocation": "1667:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 804,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1673:2:4"
                  },
                  "returnParameters": {
                    "id": 807,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 806,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 808,
                        "src": "1699:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 805,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1699:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1698:9:4"
                  },
                  "scope": 880,
                  "src": "1658:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "d21220a7",
                  "id": 813,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "token1",
                  "nameLocation": "1722:6:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 809,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1728:2:4"
                  },
                  "returnParameters": {
                    "id": 812,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 811,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 813,
                        "src": "1754:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 810,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1754:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1753:9:4"
                  },
                  "scope": 880,
                  "src": "1713:50:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "0902f1ac",
                  "id": 822,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getReserves",
                  "nameLocation": "1777:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 814,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1788:2:4"
                  },
                  "returnParameters": {
                    "id": 821,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 816,
                        "mutability": "mutable",
                        "name": "reserve0",
                        "nameLocation": "1822:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 822,
                        "src": "1814:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 815,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1814:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 818,
                        "mutability": "mutable",
                        "name": "reserve1",
                        "nameLocation": "1840:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 822,
                        "src": "1832:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        "typeName": {
                          "id": 817,
                          "name": "uint112",
                          "nodeType": "ElementaryTypeName",
                          "src": "1832:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 820,
                        "mutability": "mutable",
                        "name": "blockTimestampLast",
                        "nameLocation": "1857:18:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 822,
                        "src": "1850:25:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 819,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "1850:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1813:63:4"
                  },
                  "scope": 880,
                  "src": "1768:109:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5909c0d5",
                  "id": 827,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "price0CumulativeLast",
                  "nameLocation": "1891:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 823,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1911:2:4"
                  },
                  "returnParameters": {
                    "id": 826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 825,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 827,
                        "src": "1937:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 824,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1937:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1936:6:4"
                  },
                  "scope": 880,
                  "src": "1882:61:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "5a3d5493",
                  "id": 832,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "price1CumulativeLast",
                  "nameLocation": "1957:20:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 828,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1977:2:4"
                  },
                  "returnParameters": {
                    "id": 831,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 830,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 832,
                        "src": "2003:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 829,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2003:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2002:6:4"
                  },
                  "scope": 880,
                  "src": "1948:61:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "7464fc3d",
                  "id": 837,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "kLast",
                  "nameLocation": "2023:5:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:4"
                  },
                  "returnParameters": {
                    "id": 836,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 835,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 837,
                        "src": "2054:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 834,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2054:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2053:6:4"
                  },
                  "scope": 880,
                  "src": "2014:46:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "6a627842",
                  "id": 844,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "mint",
                  "nameLocation": "2075:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 840,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 839,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2088:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "2080:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 838,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2080:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2079:12:4"
                  },
                  "returnParameters": {
                    "id": 843,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 842,
                        "mutability": "mutable",
                        "name": "liquidity",
                        "nameLocation": "2115:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "2110:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 841,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2110:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2109:16:4"
                  },
                  "scope": 880,
                  "src": "2066:60:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "89afcb44",
                  "id": 853,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "2140:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 847,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 846,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2153:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 853,
                        "src": "2145:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 845,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2145:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2144:12:4"
                  },
                  "returnParameters": {
                    "id": 852,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 849,
                        "mutability": "mutable",
                        "name": "amount0",
                        "nameLocation": "2180:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 853,
                        "src": "2175:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 848,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2175:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 851,
                        "mutability": "mutable",
                        "name": "amount1",
                        "nameLocation": "2194:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 853,
                        "src": "2189:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 850,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2189:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2174:28:4"
                  },
                  "scope": 880,
                  "src": "2131:72:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "022c0d9f",
                  "id": 864,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "swap",
                  "nameLocation": "2217:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 862,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 855,
                        "mutability": "mutable",
                        "name": "amount0Out",
                        "nameLocation": "2227:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2222:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 854,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2222:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 857,
                        "mutability": "mutable",
                        "name": "amount1Out",
                        "nameLocation": "2244:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2239:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 856,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2239:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 859,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2264:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2256:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 858,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2256:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 861,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "2283:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 864,
                        "src": "2268:19:4",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 860,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2268:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2221:67:4"
                  },
                  "returnParameters": {
                    "id": 863,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2297:0:4"
                  },
                  "scope": 880,
                  "src": "2208:90:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "bc25cf77",
                  "id": 869,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "skim",
                  "nameLocation": "2312:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 867,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 866,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2325:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 869,
                        "src": "2317:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 865,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2317:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2316:12:4"
                  },
                  "returnParameters": {
                    "id": 868,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2337:0:4"
                  },
                  "scope": 880,
                  "src": "2303:35:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "fff6cae9",
                  "id": 872,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "sync",
                  "nameLocation": "2352:4:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 870,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2356:2:4"
                  },
                  "returnParameters": {
                    "id": 871,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2367:0:4"
                  },
                  "scope": 880,
                  "src": "2343:25:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "functionSelector": "485cc955",
                  "id": 879,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "initialize",
                  "nameLocation": "2383:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 877,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 874,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 879,
                        "src": "2394:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 873,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2394:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 876,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 879,
                        "src": "2403:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 875,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2403:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2393:18:4"
                  },
                  "returnParameters": {
                    "id": 878,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2420:0:4"
                  },
                  "scope": 880,
                  "src": "2374:47:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 881,
              "src": "26:2397:4",
              "usedErrors": []
            }
          ],
          "src": "0:2424:4"
        },
        "id": 4
      },
      "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol": {
        "ast": {
          "absolutePath": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
          "exportedSymbols": {
            "FixedPoint": [
              575
            ],
            "IUniswapV2Pair": [
              880
            ],
            "UniswapV2OracleLibrary": [
              987
            ]
          },
          "id": 988,
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 882,
              "literals": [
                "solidity",
                ">=",
                "0.5",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "0:24:5"
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "id": 883,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 988,
              "sourceUnit": 881,
              "src": "26:66:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "file": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "id": 884,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 988,
              "sourceUnit": 576,
              "src": "93:57:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 987,
              "linearizedBaseContracts": [
                987
              ],
              "name": "UniswapV2OracleLibrary",
              "nameLocation": "252:22:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 886,
                  "libraryName": {
                    "id": 885,
                    "name": "FixedPoint",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 575,
                    "src": "287:10:5"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "281:23:5"
                },
                {
                  "body": {
                    "id": 901,
                    "nodeType": "Block",
                    "src": "486:57:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 898,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 893,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "510:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 894,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "510:15:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "%",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                },
                                "id": 897,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "32",
                                  "id": 895,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "528:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_2_by_1",
                                    "typeString": "int_const 2"
                                  },
                                  "value": "2"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "**",
                                "rightExpression": {
                                  "hexValue": "3332",
                                  "id": 896,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "533:2:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_32_by_1",
                                    "typeString": "int_const 32"
                                  },
                                  "value": "32"
                                },
                                "src": "528:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4294967296_by_1",
                                  "typeString": "int_const 4294967296"
                                }
                              },
                              "src": "510:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 892,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "503:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 891,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "503:6:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "503:33:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "functionReturnParameters": 890,
                        "id": 900,
                        "nodeType": "Return",
                        "src": "496:40:5"
                      }
                    ]
                  },
                  "id": 902,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentBlockTimestamp",
                  "nameLocation": "431:21:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 887,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "452:2:5"
                  },
                  "returnParameters": {
                    "id": 890,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 889,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 902,
                        "src": "478:6:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 888,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "478:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "477:8:5"
                  },
                  "scope": 987,
                  "src": "422:121:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 985,
                    "nodeType": "Block",
                    "src": "799:887:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 913,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "809:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 914,
                              "name": "currentBlockTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 902,
                              "src": "826:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                                "typeString": "function () view returns (uint32)"
                              }
                            },
                            "id": 915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "826:23:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "809:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 917,
                        "nodeType": "ExpressionStatement",
                        "src": "809:40:5"
                      },
                      {
                        "expression": {
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 918,
                            "name": "price0Cumulative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 907,
                            "src": "859:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 920,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 904,
                                    "src": "893:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 919,
                                  "name": "IUniswapV2Pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 880,
                                  "src": "878:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$880_$",
                                    "typeString": "type(contract IUniswapV2Pair)"
                                  }
                                },
                                "id": 921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "878:20:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                                  "typeString": "contract IUniswapV2Pair"
                                }
                              },
                              "id": 922,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price0CumulativeLast",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 827,
                              "src": "878:41:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "878:43:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "859:62:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 925,
                        "nodeType": "ExpressionStatement",
                        "src": "859:62:5"
                      },
                      {
                        "expression": {
                          "id": 932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 926,
                            "name": "price1Cumulative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 909,
                            "src": "931:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 928,
                                    "name": "pair",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 904,
                                    "src": "965:4:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 927,
                                  "name": "IUniswapV2Pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 880,
                                  "src": "950:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$880_$",
                                    "typeString": "type(contract IUniswapV2Pair)"
                                  }
                                },
                                "id": 929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "950:20:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                                  "typeString": "contract IUniswapV2Pair"
                                }
                              },
                              "id": 930,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price1CumulativeLast",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 832,
                              "src": "950:41:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 931,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "950:43:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "931:62:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 933,
                        "nodeType": "ExpressionStatement",
                        "src": "931:62:5"
                      },
                      {
                        "assignments": [
                          935,
                          937,
                          939
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 935,
                            "mutability": "mutable",
                            "name": "reserve0",
                            "nameLocation": "1113:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 985,
                            "src": "1105:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 934,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "1105:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 937,
                            "mutability": "mutable",
                            "name": "reserve1",
                            "nameLocation": "1131:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 985,
                            "src": "1123:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            },
                            "typeName": {
                              "id": 936,
                              "name": "uint112",
                              "nodeType": "ElementaryTypeName",
                              "src": "1123:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint112",
                                "typeString": "uint112"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 939,
                            "mutability": "mutable",
                            "name": "blockTimestampLast",
                            "nameLocation": "1148:18:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 985,
                            "src": "1141:25:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 938,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "1141:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 945,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 941,
                                  "name": "pair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 904,
                                  "src": "1185:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 940,
                                "name": "IUniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 880,
                                "src": "1170:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$880_$",
                                  "typeString": "type(contract IUniswapV2Pair)"
                                }
                              },
                              "id": 942,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1170:20:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            "id": 943,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getReserves",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 822,
                            "src": "1170:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "function () view external returns (uint112,uint112,uint32)"
                            }
                          },
                          "id": 944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1170:34:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                            "typeString": "tuple(uint112,uint112,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1104:100:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 946,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "1218:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 947,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "1240:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "1218:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 984,
                        "nodeType": "IfStatement",
                        "src": "1214:466:5",
                        "trueBody": {
                          "id": 983,
                          "nodeType": "Block",
                          "src": "1256:424:5",
                          "statements": [
                            {
                              "assignments": [
                                950
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 950,
                                  "mutability": "mutable",
                                  "name": "timeElapsed",
                                  "nameLocation": "1324:11:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 983,
                                  "src": "1317:18:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  },
                                  "typeName": {
                                    "id": 949,
                                    "name": "uint32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1317:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 954,
                              "initialValue": {
                                "commonType": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "id": 953,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 951,
                                  "name": "blockTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 911,
                                  "src": "1338:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 952,
                                  "name": "blockTimestampLast",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 939,
                                  "src": "1355:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "1338:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1317:56:5"
                            },
                            {
                              "expression": {
                                "id": 967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 955,
                                  "name": "price0Cumulative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 907,
                                  "src": "1461:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 966,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 960,
                                              "name": "reserve1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 937,
                                              "src": "1506:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            },
                                            {
                                              "id": 961,
                                              "name": "reserve0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 935,
                                              "src": "1516:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              },
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "expression": {
                                              "id": 958,
                                              "name": "FixedPoint",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 575,
                                              "src": "1486:10:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$575_$",
                                                "typeString": "type(library FixedPoint)"
                                              }
                                            },
                                            "id": 959,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "fraction",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 540,
                                            "src": "1486:19:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_struct$_uq112x112_$394_memory_ptr_$",
                                              "typeString": "function (uint112,uint112) pure returns (struct FixedPoint.uq112x112 memory)"
                                            }
                                          },
                                          "id": 962,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1486:39:5",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                                            "typeString": "struct FixedPoint.uq112x112 memory"
                                          }
                                        },
                                        "id": 963,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "_x",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 393,
                                        "src": "1486:42:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 957,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1481:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 956,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1481:4:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 964,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1481:48:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 965,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 950,
                                    "src": "1532:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "1481:62:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1461:82:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 968,
                              "nodeType": "ExpressionStatement",
                              "src": "1461:82:5"
                            },
                            {
                              "expression": {
                                "id": 981,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 969,
                                  "name": "price1Cumulative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 909,
                                  "src": "1587:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 980,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 974,
                                              "name": "reserve0",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 935,
                                              "src": "1632:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            },
                                            {
                                              "id": 975,
                                              "name": "reserve1",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 937,
                                              "src": "1642:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              },
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "expression": {
                                              "id": 972,
                                              "name": "FixedPoint",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 575,
                                              "src": "1612:10:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$575_$",
                                                "typeString": "type(library FixedPoint)"
                                              }
                                            },
                                            "id": 973,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "fraction",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 540,
                                            "src": "1612:19:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_uint112_$_t_uint112_$returns$_t_struct$_uq112x112_$394_memory_ptr_$",
                                              "typeString": "function (uint112,uint112) pure returns (struct FixedPoint.uq112x112 memory)"
                                            }
                                          },
                                          "id": 976,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "1612:39:5",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                                            "typeString": "struct FixedPoint.uq112x112 memory"
                                          }
                                        },
                                        "id": 977,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "_x",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 393,
                                        "src": "1612:42:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint224",
                                          "typeString": "uint224"
                                        }
                                      ],
                                      "id": 971,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1607:4:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 970,
                                        "name": "uint",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1607:4:5",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 978,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1607:48:5",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 979,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 950,
                                    "src": "1658:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "src": "1607:62:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1587:82:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 982,
                              "nodeType": "ExpressionStatement",
                              "src": "1587:82:5"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 986,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "currentCumulativePrices",
                  "nameLocation": "655:23:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 905,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 904,
                        "mutability": "mutable",
                        "name": "pair",
                        "nameLocation": "696:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 986,
                        "src": "688:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 903,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "688:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "678:28:5"
                  },
                  "returnParameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 907,
                        "mutability": "mutable",
                        "name": "price0Cumulative",
                        "nameLocation": "735:16:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 986,
                        "src": "730:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 906,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "730:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 909,
                        "mutability": "mutable",
                        "name": "price1Cumulative",
                        "nameLocation": "758:16:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 986,
                        "src": "753:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 908,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "753:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 911,
                        "mutability": "mutable",
                        "name": "blockTimestamp",
                        "nameLocation": "783:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 986,
                        "src": "776:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 910,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "776:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "729:69:5"
                  },
                  "scope": 987,
                  "src": "646:1040:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 988,
              "src": "244:1444:5",
              "usedErrors": []
            }
          ],
          "src": "0:1689:5"
        },
        "id": 5
      },
      "contracts/Market.sol": {
        "ast": {
          "absolutePath": "contracts/Market.sol",
          "exportedSymbols": {
            "FixedPoint": [
              575
            ],
            "IERC20": [
              77
            ],
            "IUniswapV2Factory": [
              638
            ],
            "IUniswapV2Pair": [
              880
            ],
            "Market": [
              2367
            ],
            "MarketFactory": [
              2475
            ],
            "SafeMath": [
              389
            ],
            "UniswapV2OracleLibrary": [
              987
            ]
          },
          "id": 2368,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 989,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:6"
            },
            {
              "absolutePath": "contracts/MarketFactory.sol",
              "file": "./MarketFactory.sol",
              "id": 990,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2368,
              "sourceUnit": 2476,
              "src": "97:29:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "id": 991,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2368,
              "sourceUnit": 881,
              "src": "128:66:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
              "file": "@uniswap/v2-periphery/contracts/libraries/UniswapV2OracleLibrary.sol",
              "id": 992,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2368,
              "sourceUnit": 988,
              "src": "196:78:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "file": "@uniswap/lib/contracts/libraries/FixedPoint.sol",
              "id": 993,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2368,
              "sourceUnit": 576,
              "src": "276:57:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 994,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2368,
              "sourceUnit": 78,
              "src": "335:56:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
              "id": 995,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2368,
              "sourceUnit": 390,
              "src": "393:57:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 996,
                "nodeType": "StructuredDocumentation",
                "src": "454:122:6",
                "text": "@title TWPM Market\n @author UniHedge\n @dev All function calls are currently implemented without side effects"
              },
              "fullyImplemented": true,
              "id": 2367,
              "linearizedBaseContracts": [
                2367
              ],
              "name": "Market",
              "nameLocation": "585:6:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "id": 999,
                  "libraryName": {
                    "id": 997,
                    "name": "SafeMath",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 389,
                    "src": "726:8:6"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "720:24:6",
                  "typeName": {
                    "id": 998,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "739:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                },
                {
                  "constant": false,
                  "functionSelector": "c45a0155",
                  "id": 1002,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "808:7:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "787:28:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MarketFactory_$2475",
                    "typeString": "contract MarketFactory"
                  },
                  "typeName": {
                    "id": 1001,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1000,
                      "name": "MarketFactory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2475,
                      "src": "787:13:6"
                    },
                    "referencedDeclaration": 2475,
                    "src": "787:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MarketFactory_$2475",
                      "typeString": "contract MarketFactory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "da68cf8b",
                  "id": 1005,
                  "mutability": "mutable",
                  "name": "accountingToken",
                  "nameLocation": "893:15:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "879:29:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$77",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1004,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1003,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 77,
                      "src": "879:6:6"
                    },
                    "referencedDeclaration": 77,
                    "src": "879:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$77",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "45084775",
                  "id": 1007,
                  "mutability": "mutable",
                  "name": "ownerMarket",
                  "nameLocation": "966:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "943:34:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "943:15:6",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ef78d4fd",
                  "id": 1009,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "1021:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1009:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1008,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1009:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7358c57a",
                  "id": 1011,
                  "mutability": "mutable",
                  "name": "initTimestamp",
                  "nameLocation": "1076:13:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1064:25:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1010,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1064:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c816841b",
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "uniswapPair",
                  "nameLocation": "1148:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1126:33:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                    "typeString": "contract IUniswapV2Pair"
                  },
                  "typeName": {
                    "id": 1013,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1012,
                      "name": "IUniswapV2Pair",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 880,
                      "src": "1126:14:6"
                    },
                    "referencedDeclaration": 880,
                    "src": "1126:14:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                      "typeString": "contract IUniswapV2Pair"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "499a0fc4",
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "dPrice",
                  "nameLocation": "1200:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1188:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "410f0710",
                  "id": 1018,
                  "mutability": "mutable",
                  "name": "feeMarket",
                  "nameLocation": "1262:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1250:21:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1017,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1250:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "7e996639",
                  "id": 1020,
                  "mutability": "mutable",
                  "name": "taxMarket",
                  "nameLocation": "1309:9:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1297:21:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1019,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "527eb4bc",
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "feeProtocol",
                  "nameLocation": "1357:11:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1345:29:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1345:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "313030",
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1371:3:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100_by_1",
                      "typeString": "int_const 100"
                    },
                    "value": "100"
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "ff5c86b0",
                  "id": 1025,
                  "mutability": "mutable",
                  "name": "tReporting",
                  "nameLocation": "1430:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1418:22:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1024,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "3d09a82a",
                  "id": 1027,
                  "mutability": "mutable",
                  "name": "minTax",
                  "nameLocation": "1492:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1480:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1026,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "id": 1030,
                  "mutability": "mutable",
                  "name": "scalar",
                  "nameLocation": "1564:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "1559:18:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1028,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1559:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31653234",
                    "id": 1029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1573:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1000000000000000000000000_by_1",
                      "typeString": "int_const 1000000000000000000000000"
                    },
                    "value": "1e24"
                  },
                  "visibility": "internal"
                },
                {
                  "canonicalName": "Market.SFrame",
                  "id": 1035,
                  "members": [
                    {
                      "id": 1031,
                      "name": "NULL",
                      "nameLocation": "1599:4:6",
                      "nodeType": "EnumValue",
                      "src": "1599:4:6"
                    },
                    {
                      "id": 1032,
                      "name": "OPENED",
                      "nameLocation": "1605:6:6",
                      "nodeType": "EnumValue",
                      "src": "1605:6:6"
                    },
                    {
                      "id": 1033,
                      "name": "CLOSED",
                      "nameLocation": "1613:6:6",
                      "nodeType": "EnumValue",
                      "src": "1613:6:6"
                    },
                    {
                      "id": 1034,
                      "name": "INVALID",
                      "nameLocation": "1621:7:6",
                      "nodeType": "EnumValue",
                      "src": "1621:7:6"
                    }
                  ],
                  "name": "SFrame",
                  "nameLocation": "1591:6:6",
                  "nodeType": "EnumDefinition",
                  "src": "1586:43:6"
                },
                {
                  "canonicalName": "Market.Frame",
                  "id": 1063,
                  "members": [
                    {
                      "constant": false,
                      "id": 1037,
                      "mutability": "mutable",
                      "name": "frameKey",
                      "nameLocation": "1664:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "1659:13:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1036,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1659:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1040,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "1690:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "1683:12:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SFrame_$1035",
                        "typeString": "enum Market.SFrame"
                      },
                      "typeName": {
                        "id": 1039,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1038,
                          "name": "SFrame",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1035,
                          "src": "1683:6:6"
                        },
                        "referencedDeclaration": 1035,
                        "src": "1683:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SFrame_$1035",
                          "typeString": "enum Market.SFrame"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1042,
                      "mutability": "mutable",
                      "name": "priceAverage",
                      "nameLocation": "1711:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "1706:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1041,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1706:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1044,
                      "mutability": "mutable",
                      "name": "rewardFund",
                      "nameLocation": "1739:10:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "1734:15:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1043,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1734:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1046,
                      "mutability": "mutable",
                      "name": "oraclePrice0CumulativeStart",
                      "nameLocation": "1765:27:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "1760:32:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1045,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1760:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1048,
                      "mutability": "mutable",
                      "name": "oraclePrice0CumulativeEnd",
                      "nameLocation": "1808:25:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "1803:30:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1047,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1803:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1050,
                      "mutability": "mutable",
                      "name": "oracleTimestampStart",
                      "nameLocation": "1849:20:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "1844:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1049,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1844:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1052,
                      "mutability": "mutable",
                      "name": "oracleTimestampEnd",
                      "nameLocation": "1885:18:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "1880:23:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1051,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1880:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1054,
                      "mutability": "mutable",
                      "name": "lastBlockNum",
                      "nameLocation": "1919:12:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "1914:17:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1053,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1914:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1059,
                      "mutability": "mutable",
                      "name": "lots",
                      "nameLocation": "1963:4:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "1942:25:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                        "typeString": "mapping(uint256 => struct Market.Lot)"
                      },
                      "typeName": {
                        "id": 1058,
                        "keyType": {
                          "id": 1055,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1950:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Mapping",
                        "src": "1942:20:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                          "typeString": "mapping(uint256 => struct Market.Lot)"
                        },
                        "valueType": {
                          "id": 1057,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1056,
                            "name": "Lot",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1089,
                            "src": "1958:3:6"
                          },
                          "referencedDeclaration": 1089,
                          "src": "1958:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lot_$1089_storage_ptr",
                            "typeString": "struct Market.Lot"
                          }
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1062,
                      "mutability": "mutable",
                      "name": "lotKeys",
                      "nameLocation": "1985:7:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1063,
                      "src": "1978:14:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 1060,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1978:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1061,
                        "nodeType": "ArrayTypeName",
                        "src": "1978:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Frame",
                  "nameLocation": "1642:5:6",
                  "nodeType": "StructDefinition",
                  "scope": 2367,
                  "src": "1635:365:6",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 1067,
                  "name": "FrameUpdate",
                  "nameLocation": "2014:11:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1066,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1065,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "2031:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1067,
                        "src": "2026:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1064,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2026:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2025:15:6"
                  },
                  "src": "2008:33:6"
                },
                {
                  "constant": false,
                  "functionSelector": "a10340bc",
                  "id": 1072,
                  "mutability": "mutable",
                  "name": "frames",
                  "nameLocation": "2079:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "2049:36:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                    "typeString": "mapping(uint256 => struct Market.Frame)"
                  },
                  "typeName": {
                    "id": 1071,
                    "keyType": {
                      "id": 1068,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2057:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2049:22:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                      "typeString": "mapping(uint256 => struct Market.Frame)"
                    },
                    "valueType": {
                      "id": 1070,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1069,
                        "name": "Frame",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1063,
                        "src": "2065:5:6"
                      },
                      "referencedDeclaration": 1063,
                      "src": "2065:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Frame_$1063_storage_ptr",
                        "typeString": "struct Market.Frame"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "050e8840",
                  "id": 1075,
                  "mutability": "mutable",
                  "name": "framesKeys",
                  "nameLocation": "2106:10:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 2367,
                  "src": "2092:24:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1073,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "2092:4:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1074,
                    "nodeType": "ArrayTypeName",
                    "src": "2092:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "canonicalName": "Market.SLot",
                  "id": 1079,
                  "members": [
                    {
                      "id": 1076,
                      "name": "NULL",
                      "nameLocation": "2136:4:6",
                      "nodeType": "EnumValue",
                      "src": "2136:4:6"
                    },
                    {
                      "id": 1077,
                      "name": "BOUGHT",
                      "nameLocation": "2142:6:6",
                      "nodeType": "EnumValue",
                      "src": "2142:6:6"
                    },
                    {
                      "id": 1078,
                      "name": "SETTLED",
                      "nameLocation": "2150:7:6",
                      "nodeType": "EnumValue",
                      "src": "2150:7:6"
                    }
                  ],
                  "name": "SLot",
                  "nameLocation": "2130:4:6",
                  "nodeType": "EnumDefinition",
                  "src": "2125:33:6"
                },
                {
                  "canonicalName": "Market.Lot",
                  "id": 1089,
                  "members": [
                    {
                      "constant": false,
                      "id": 1081,
                      "mutability": "mutable",
                      "name": "lotKey",
                      "nameLocation": "2191:6:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1089,
                      "src": "2186:11:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1080,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2186:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1083,
                      "mutability": "mutable",
                      "name": "lotOwner",
                      "nameLocation": "2216:8:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1089,
                      "src": "2208:16:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1082,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2208:7:6",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1085,
                      "mutability": "mutable",
                      "name": "acquisitionPrice",
                      "nameLocation": "2240:16:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1089,
                      "src": "2235:21:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1084,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "2235:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1088,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "2272:5:6",
                      "nodeType": "VariableDeclaration",
                      "scope": 1089,
                      "src": "2267:10:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SLot_$1079",
                        "typeString": "enum Market.SLot"
                      },
                      "typeName": {
                        "id": 1087,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1086,
                          "name": "SLot",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1079,
                          "src": "2267:4:6"
                        },
                        "referencedDeclaration": 1079,
                        "src": "2267:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_SLot_$1079",
                          "typeString": "enum Market.SLot"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Lot",
                  "nameLocation": "2171:3:6",
                  "nodeType": "StructDefinition",
                  "scope": 2367,
                  "src": "2164:121:6",
                  "visibility": "public"
                },
                {
                  "anonymous": false,
                  "id": 1095,
                  "name": "LotUpdate",
                  "nameLocation": "2299:9:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1094,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1091,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "2314:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2309:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1090,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2309:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1093,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "lotKey",
                        "nameLocation": "2329:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1095,
                        "src": "2324:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1092,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2324:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2308:28:6"
                  },
                  "src": "2293:44:6"
                },
                {
                  "body": {
                    "id": 1169,
                    "nodeType": "Block",
                    "src": "2540:377:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1121,
                            "name": "accountingToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "2551:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1122,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1101,
                            "src": "2569:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$77",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2551:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1124,
                        "nodeType": "ExpressionStatement",
                        "src": "2551:24:6"
                      },
                      {
                        "expression": {
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1125,
                            "name": "ownerMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1007,
                            "src": "2586:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1128,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "2608:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1129,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2608:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2600:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 1126,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2600:8:6",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2600:19:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "2586:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 1132,
                        "nodeType": "ExpressionStatement",
                        "src": "2586:33:6"
                      },
                      {
                        "expression": {
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1133,
                            "name": "period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1009,
                            "src": "2630:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1134,
                            "name": "_period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1106,
                            "src": "2639:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2630:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1136,
                        "nodeType": "ExpressionStatement",
                        "src": "2630:16:6"
                      },
                      {
                        "expression": {
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1137,
                            "name": "initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1011,
                            "src": "2657:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1138,
                            "name": "_initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1108,
                            "src": "2673:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2657:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1140,
                        "nodeType": "ExpressionStatement",
                        "src": "2657:30:6"
                      },
                      {
                        "expression": {
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1141,
                            "name": "taxMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1020,
                            "src": "2699:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1142,
                            "name": "_taxMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1110,
                            "src": "2711:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2699:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1144,
                        "nodeType": "ExpressionStatement",
                        "src": "2699:22:6"
                      },
                      {
                        "expression": {
                          "id": 1147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1145,
                            "name": "feeMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1018,
                            "src": "2732:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1146,
                            "name": "_feeMarket",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1112,
                            "src": "2744:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2732:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1148,
                        "nodeType": "ExpressionStatement",
                        "src": "2732:22:6"
                      },
                      {
                        "expression": {
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1149,
                            "name": "uniswapPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1014,
                            "src": "2765:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1150,
                            "name": "_uniswapPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1104,
                            "src": "2779:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                              "typeString": "contract IUniswapV2Pair"
                            }
                          },
                          "src": "2765:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "id": 1152,
                        "nodeType": "ExpressionStatement",
                        "src": "2765:26:6"
                      },
                      {
                        "expression": {
                          "id": 1155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1153,
                            "name": "dPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1016,
                            "src": "2802:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1154,
                            "name": "_dPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1114,
                            "src": "2811:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2802:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1156,
                        "nodeType": "ExpressionStatement",
                        "src": "2802:16:6"
                      },
                      {
                        "expression": {
                          "id": 1159,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1157,
                            "name": "factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1002,
                            "src": "2829:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketFactory_$2475",
                              "typeString": "contract MarketFactory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1158,
                            "name": "_factory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1098,
                            "src": "2839:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MarketFactory_$2475",
                              "typeString": "contract MarketFactory"
                            }
                          },
                          "src": "2829:18:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketFactory_$2475",
                            "typeString": "contract MarketFactory"
                          }
                        },
                        "id": 1160,
                        "nodeType": "ExpressionStatement",
                        "src": "2829:18:6"
                      },
                      {
                        "expression": {
                          "id": 1163,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1161,
                            "name": "tReporting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1025,
                            "src": "2858:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1162,
                            "name": "_tReporting",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1116,
                            "src": "2871:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1164,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:24:6"
                      },
                      {
                        "expression": {
                          "id": 1167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1165,
                            "name": "minTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "2893:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1166,
                            "name": "_minTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1118,
                            "src": "2902:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2893:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1168,
                        "nodeType": "ExpressionStatement",
                        "src": "2893:16:6"
                      }
                    ]
                  },
                  "id": 1170,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1098,
                        "mutability": "mutable",
                        "name": "_factory",
                        "nameLocation": "2371:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2357:22:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MarketFactory_$2475",
                          "typeString": "contract MarketFactory"
                        },
                        "typeName": {
                          "id": 1097,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1096,
                            "name": "MarketFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2475,
                            "src": "2357:13:6"
                          },
                          "referencedDeclaration": 2475,
                          "src": "2357:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MarketFactory_$2475",
                            "typeString": "contract MarketFactory"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1101,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "2388:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2381:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$77",
                          "typeString": "contract IERC20"
                        },
                        "typeName": {
                          "id": 1100,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1099,
                            "name": "IERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 77,
                            "src": "2381:6:6"
                          },
                          "referencedDeclaration": 77,
                          "src": "2381:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$77",
                            "typeString": "contract IERC20"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1104,
                        "mutability": "mutable",
                        "name": "_uniswapPair",
                        "nameLocation": "2411:12:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2396:27:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                          "typeString": "contract IUniswapV2Pair"
                        },
                        "typeName": {
                          "id": 1103,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1102,
                            "name": "IUniswapV2Pair",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 880,
                            "src": "2396:14:6"
                          },
                          "referencedDeclaration": 880,
                          "src": "2396:14:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1106,
                        "mutability": "mutable",
                        "name": "_period",
                        "nameLocation": "2430:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2425:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1105,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2425:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1108,
                        "mutability": "mutable",
                        "name": "_initTimestamp",
                        "nameLocation": "2444:14:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2439:19:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1107,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2439:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1110,
                        "mutability": "mutable",
                        "name": "_taxMarket",
                        "nameLocation": "2465:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2460:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1109,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2460:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1112,
                        "mutability": "mutable",
                        "name": "_feeMarket",
                        "nameLocation": "2482:10:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2477:15:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1111,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2477:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1114,
                        "mutability": "mutable",
                        "name": "_dPrice",
                        "nameLocation": "2499:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2494:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1113,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2494:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1116,
                        "mutability": "mutable",
                        "name": "_tReporting",
                        "nameLocation": "2513:11:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2508:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1115,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2508:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1118,
                        "mutability": "mutable",
                        "name": "_minTax",
                        "nameLocation": "2531:7:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1170,
                        "src": "2526:12:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1117,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2526:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2356:183:6"
                  },
                  "returnParameters": {
                    "id": 1120,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2540:0:6"
                  },
                  "scope": 2367,
                  "src": "2345:572:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1192,
                    "nodeType": "Block",
                    "src": "2961:128:6",
                    "statements": [
                      {
                        "assignments": [
                          1175
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1175,
                            "mutability": "mutable",
                            "name": "tax",
                            "nameLocation": "2977:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1192,
                            "src": "2972:8:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1174,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2972:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1183,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1176,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "2983:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 1177,
                                  "name": "taxMarket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1020,
                                  "src": "2995:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1178,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "2994:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "2983:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "hexValue": "313030303030",
                                "id": 1180,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3009:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100000"
                              }
                            ],
                            "id": 1181,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3008:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            }
                          },
                          "src": "2983:33:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2972:44:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1185,
                                "name": "tax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1175,
                                "src": "3035:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1186,
                                "name": "minTax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1027,
                                "src": "3042:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3035:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "505249434520495320544f4f204c4f57",
                              "id": 1188,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3050:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                                "typeString": "literal_string \"PRICE IS TOO LOW\""
                              },
                              "value": "PRICE IS TOO LOW"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_7f36095b4afdb1cdb7c9bd6aee72843974a46a7cf085c4339cefb14d61966b5f",
                                "typeString": "literal_string \"PRICE IS TOO LOW\""
                              }
                            ],
                            "id": 1184,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3027:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3027:42:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1190,
                        "nodeType": "ExpressionStatement",
                        "src": "3027:42:6"
                      },
                      {
                        "id": 1191,
                        "nodeType": "PlaceholderStatement",
                        "src": "3080:1:6"
                      }
                    ]
                  },
                  "id": 1193,
                  "name": "minTaxCheck",
                  "nameLocation": "2934:11:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1172,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "2951:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1193,
                        "src": "2946:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1171,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2946:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2945:15:6"
                  },
                  "src": "2925:164:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1206,
                    "nodeType": "Block",
                    "src": "3123:102:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1196,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "3142:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1197,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3142:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "id": 1198,
                                    "name": "factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1002,
                                    "src": "3156:7:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_MarketFactory_$2475",
                                      "typeString": "contract MarketFactory"
                                    }
                                  },
                                  "id": 1199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2386,
                                  "src": "3156:13:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 1200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3156:15:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3142:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "594f5520415245204e4f542054484520464143544f5259204f574e4552",
                              "id": 1202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3173:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b",
                                "typeString": "literal_string \"YOU ARE NOT THE FACTORY OWNER\""
                              },
                              "value": "YOU ARE NOT THE FACTORY OWNER"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_604d18dc58c3f0b0a2d0c131b00a25f11abc49d30b7edec8f410156317975a7b",
                                "typeString": "literal_string \"YOU ARE NOT THE FACTORY OWNER\""
                              }
                            ],
                            "id": 1195,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "3134:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3134:71:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1204,
                        "nodeType": "ExpressionStatement",
                        "src": "3134:71:6"
                      },
                      {
                        "id": 1205,
                        "nodeType": "PlaceholderStatement",
                        "src": "3216:1:6"
                      }
                    ]
                  },
                  "id": 1207,
                  "name": "isFactoryOwner",
                  "nameLocation": "3106:14:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1194,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3120:2:6"
                  },
                  "src": "3097:128:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1262,
                    "nodeType": "Block",
                    "src": "3272:452:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1211,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1072,
                                  "src": "3287:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 1213,
                                "indexExpression": {
                                  "id": 1212,
                                  "name": "framekey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1209,
                                  "src": "3294:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3287:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 1214,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice0CumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1046,
                              "src": "3287:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1215,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3335:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3287:49:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1217,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1072,
                                  "src": "3340:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 1219,
                                "indexExpression": {
                                  "id": 1218,
                                  "name": "framekey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1209,
                                  "src": "3347:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3340:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 1220,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice0CumulativeEnd",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1048,
                              "src": "3340:42:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1221,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3386:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3340:47:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3287:100:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1237,
                        "nodeType": "IfStatement",
                        "src": "3283:211:6",
                        "trueBody": {
                          "id": 1236,
                          "nodeType": "Block",
                          "src": "3389:105:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1224,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1072,
                                      "src": "3404:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1226,
                                    "indexExpression": {
                                      "id": 1225,
                                      "name": "framekey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1209,
                                      "src": "3411:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3404:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1227,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1040,
                                  "src": "3404:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$1035",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1228,
                                    "name": "SFrame",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1035,
                                    "src": "3429:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SFrame_$1035_$",
                                      "typeString": "type(enum Market.SFrame)"
                                    }
                                  },
                                  "id": 1229,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "INVALID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1034,
                                  "src": "3429:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$1035",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "src": "3404:39:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SFrame_$1035",
                                  "typeString": "enum Market.SFrame"
                                }
                              },
                              "id": 1231,
                              "nodeType": "ExpressionStatement",
                              "src": "3404:39:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "494e56414c494420505249434553",
                                    "id": 1233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3465:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745",
                                      "typeString": "literal_string \"INVALID PRICES\""
                                    },
                                    "value": "INVALID PRICES"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745",
                                      "typeString": "literal_string \"INVALID PRICES\""
                                    }
                                  ],
                                  "id": 1232,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "3458:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1234,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3458:24:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1235,
                              "nodeType": "ExpressionStatement",
                              "src": "3458:24:6"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1238,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "3508:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1240,
                              "indexExpression": {
                                "id": 1239,
                                "name": "framekey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1209,
                                "src": "3515:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3508:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1241,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oraclePrice0CumulativeStart",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1046,
                            "src": "3508:44:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1242,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "3556:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1244,
                              "indexExpression": {
                                "id": 1243,
                                "name": "framekey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1209,
                                "src": "3563:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3556:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1245,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oraclePrice0CumulativeEnd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1048,
                            "src": "3556:42:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3508:90:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1260,
                        "nodeType": "IfStatement",
                        "src": "3504:201:6",
                        "trueBody": {
                          "id": 1259,
                          "nodeType": "Block",
                          "src": "3600:105:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1253,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1247,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1072,
                                      "src": "3615:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1249,
                                    "indexExpression": {
                                      "id": 1248,
                                      "name": "framekey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1209,
                                      "src": "3622:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3615:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1250,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1040,
                                  "src": "3615:22:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$1035",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1251,
                                    "name": "SFrame",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1035,
                                    "src": "3640:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SFrame_$1035_$",
                                      "typeString": "type(enum Market.SFrame)"
                                    }
                                  },
                                  "id": 1252,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "INVALID",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1034,
                                  "src": "3640:14:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SFrame_$1035",
                                    "typeString": "enum Market.SFrame"
                                  }
                                },
                                "src": "3615:39:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SFrame_$1035",
                                  "typeString": "enum Market.SFrame"
                                }
                              },
                              "id": 1254,
                              "nodeType": "ExpressionStatement",
                              "src": "3615:39:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "494e56414c494420505249434553",
                                    "id": 1256,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3676:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745",
                                      "typeString": "literal_string \"INVALID PRICES\""
                                    },
                                    "value": "INVALID PRICES"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_16f51c01369e5c3c375ec5b56e1f8f9140022ce96e09f5cf920ff224e0f69745",
                                      "typeString": "literal_string \"INVALID PRICES\""
                                    }
                                  ],
                                  "id": 1255,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "3669:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 1257,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3669:24:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1258,
                              "nodeType": "ExpressionStatement",
                              "src": "3669:24:6"
                            }
                          ]
                        }
                      },
                      {
                        "id": 1261,
                        "nodeType": "PlaceholderStatement",
                        "src": "3715:1:6"
                      }
                    ]
                  },
                  "id": 1263,
                  "name": "hasValidPrices",
                  "nameLocation": "3242:14:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1210,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1209,
                        "mutability": "mutable",
                        "name": "framekey",
                        "nameLocation": "3262:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "3257:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1208,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3257:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3256:15:6"
                  },
                  "src": "3233:491:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1289,
                    "nodeType": "Block",
                    "src": "3944:143:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1271,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1266,
                            "src": "3959:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 1272,
                            "name": "initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1011,
                            "src": "3972:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3959:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1276,
                        "nodeType": "IfStatement",
                        "src": "3955:52:6",
                        "trueBody": {
                          "expression": {
                            "id": 1274,
                            "name": "initTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1011,
                            "src": "3994:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1270,
                          "id": 1275,
                          "nodeType": "Return",
                          "src": "3987:20:6"
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1277,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1266,
                            "src": "4025:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1285,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1281,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1278,
                                        "name": "timestamp",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1266,
                                        "src": "4039:9:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "components": [
                                          {
                                            "id": 1279,
                                            "name": "initTimestamp",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1011,
                                            "src": "4052:13:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1280,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "4051:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4039:27:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1282,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4038:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "%",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "id": 1283,
                                      "name": "period",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1009,
                                      "src": "4071:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1284,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4070:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4038:40:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1286,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4037:42:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4025:54:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1270,
                        "id": 1288,
                        "nodeType": "Return",
                        "src": "4018:61:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1264,
                    "nodeType": "StructuredDocumentation",
                    "src": "3732:137:6",
                    "text": "@notice Calculate frames timestamp (beggining of frame)\n @param timestamp In seconds\n @return frame's timestamp (key)"
                  },
                  "functionSelector": "5b3ad63e",
                  "id": 1290,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcFrameTimestamp",
                  "nameLocation": "3884:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1267,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1266,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "3907:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1290,
                        "src": "3902:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1265,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3902:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3901:16:6"
                  },
                  "returnParameters": {
                    "id": 1270,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1269,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1290,
                        "src": "3939:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1268,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3939:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3938:6:6"
                  },
                  "scope": 2367,
                  "src": "3875:212:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1315,
                    "nodeType": "Block",
                    "src": "4308:104:6",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1298,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1293,
                            "src": "4323:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1299,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4332:1:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4323:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1303,
                        "nodeType": "IfStatement",
                        "src": "4319:29:6",
                        "trueBody": {
                          "expression": {
                            "id": 1301,
                            "name": "dPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1016,
                            "src": "4342:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1297,
                          "id": 1302,
                          "nodeType": "Return",
                          "src": "4335:13:6"
                        }
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1310,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1304,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1293,
                                "src": "4366:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "id": 1305,
                                    "name": "dPrice",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1016,
                                    "src": "4375:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1306,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4374:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4366:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 1308,
                                  "name": "dPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1016,
                                  "src": "4386:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1309,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4385:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4366:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "components": [
                              {
                                "id": 1311,
                                "name": "dPrice",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "4397:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1312,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4396:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4366:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1297,
                        "id": 1314,
                        "nodeType": "Return",
                        "src": "4359:45:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1291,
                    "nodeType": "StructuredDocumentation",
                    "src": "4095:145:6",
                    "text": "@notice Calculate top boundary of a lot\n @param value Arbitary price of market's Uniswap pair\n @return lot key (top boundary)"
                  },
                  "functionSelector": "888bdbcd",
                  "id": 1316,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcLotInterval",
                  "nameLocation": "4255:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1294,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1293,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "4275:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1316,
                        "src": "4270:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1292,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4270:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4269:12:6"
                  },
                  "returnParameters": {
                    "id": 1297,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1296,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1316,
                        "src": "4303:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1295,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4303:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4302:6:6"
                  },
                  "scope": 2367,
                  "src": "4246:166:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1337,
                    "nodeType": "Block",
                    "src": "4702:95:6",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1328,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1324,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1319,
                                            "src": "4745:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "components": [
                                              {
                                                "expression": {
                                                  "id": 1325,
                                                  "name": "block",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": -4,
                                                  "src": "4757:5:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_magic_block",
                                                    "typeString": "block"
                                                  }
                                                },
                                                "id": 1326,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "timestamp",
                                                "nodeType": "MemberAccess",
                                                "src": "4757:15:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              }
                                            ],
                                            "id": 1327,
                                            "isConstant": false,
                                            "isInlineArray": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "TupleExpression",
                                            "src": "4756:17:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "4745:28:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 1329,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "4744:30:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "/",
                                    "rightExpression": {
                                      "id": 1330,
                                      "name": "period",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1009,
                                      "src": "4777:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "4744:39:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1332,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "4743:41:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 1333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4787:1:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "4743:45:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 1335,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4742:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1323,
                        "id": 1336,
                        "nodeType": "Return",
                        "src": "4735:54:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1317,
                    "nodeType": "StructuredDocumentation",
                    "src": "4420:212:6",
                    "text": "@notice Calculate how many frames there are left untill given frame in input\n @param frameKey Timestamp of an arbitary frame in the future\n @return number of frames (whole numbers: n=0,1,2...)"
                  },
                  "functionSelector": "7d6ae6a0",
                  "id": 1338,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcFramesLeft",
                  "nameLocation": "4647:13:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1320,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1319,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "4666:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1338,
                        "src": "4661:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1318,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4661:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4660:15:6"
                  },
                  "returnParameters": {
                    "id": 1323,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1322,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1338,
                        "src": "4697:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1321,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4697:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4696:6:6"
                  },
                  "scope": 2367,
                  "src": "4638:159:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1356,
                    "nodeType": "Block",
                    "src": "5018:72:6",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1349,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "5053:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1351,
                              "indexExpression": {
                                "id": 1350,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1341,
                                "src": "5060:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5053:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1352,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lots",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1059,
                            "src": "5053:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                              "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                            }
                          },
                          "id": 1354,
                          "indexExpression": {
                            "id": 1353,
                            "name": "lotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1343,
                            "src": "5075:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5053:29:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lot_$1089_storage",
                            "typeString": "struct Market.Lot storage ref"
                          }
                        },
                        "functionReturnParameters": 1348,
                        "id": 1355,
                        "nodeType": "Return",
                        "src": "5046:36:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1339,
                    "nodeType": "StructuredDocumentation",
                    "src": "4805:131:6",
                    "text": "@notice Get lot struct\n @param frameKey Frame's timestamp\n @param lotKey lot's key \n @return lot struct"
                  },
                  "functionSelector": "6f1aefc3",
                  "id": 1357,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLot",
                  "nameLocation": "4951:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1341,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "4963:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1357,
                        "src": "4958:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1340,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4958:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1343,
                        "mutability": "mutable",
                        "name": "lotKey",
                        "nameLocation": "4978:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1357,
                        "src": "4973:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4973:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4957:28:6"
                  },
                  "returnParameters": {
                    "id": 1348,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1347,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1357,
                        "src": "5007:10:6",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Lot_$1089_memory_ptr",
                          "typeString": "struct Market.Lot"
                        },
                        "typeName": {
                          "id": 1346,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1345,
                            "name": "Lot",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1089,
                            "src": "5007:3:6"
                          },
                          "referencedDeclaration": 1089,
                          "src": "5007:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Lot_$1089_storage_ptr",
                            "typeString": "struct Market.Lot"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5006:12:6"
                  },
                  "scope": 2367,
                  "src": "4942:148:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1371,
                    "nodeType": "Block",
                    "src": "5284:74:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1365,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "5319:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1367,
                              "indexExpression": {
                                "id": 1366,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1360,
                                "src": "5326:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5319:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1368,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lotKeys",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1062,
                            "src": "5319:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "5319:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1364,
                        "id": 1370,
                        "nodeType": "Return",
                        "src": "5312:38:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1358,
                    "nodeType": "StructuredDocumentation",
                    "src": "5098:117:6",
                    "text": "@notice Get no. of created lots in a frame \n @param frameKey Frame's timestamp\n @return lot count"
                  },
                  "functionSelector": "830ab119",
                  "id": 1372,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLotsCount",
                  "nameLocation": "5230:12:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1361,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1360,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "5248:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "5243:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1359,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5243:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5242:15:6"
                  },
                  "returnParameters": {
                    "id": 1364,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1363,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1372,
                        "src": "5279:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1362,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5279:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5278:6:6"
                  },
                  "scope": 2367,
                  "src": "5221:137:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1389,
                    "nodeType": "Block",
                    "src": "5606:74:6",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1382,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "5641:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1384,
                              "indexExpression": {
                                "id": 1383,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1375,
                                "src": "5648:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5641:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1385,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "lotKeys",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1062,
                            "src": "5641:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1387,
                          "indexExpression": {
                            "id": 1386,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1377,
                            "src": "5666:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5641:31:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1381,
                        "id": 1388,
                        "nodeType": "Return",
                        "src": "5634:38:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1373,
                    "nodeType": "StructuredDocumentation",
                    "src": "5366:162:6",
                    "text": "@notice Get lotKey from index in lotKeys array\n @param frameKey Frame's timestamp\n @param index frameKeys array index \n @return lotKey"
                  },
                  "functionSelector": "3e16bc20",
                  "id": 1390,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getLotKey",
                  "nameLocation": "5543:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1378,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1375,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "5558:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1390,
                        "src": "5553:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1374,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5553:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1377,
                        "mutability": "mutable",
                        "name": "index",
                        "nameLocation": "5573:5:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1390,
                        "src": "5568:10:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1376,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5568:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5552:27:6"
                  },
                  "returnParameters": {
                    "id": 1381,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1380,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1390,
                        "src": "5601:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1379,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5601:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5600:6:6"
                  },
                  "scope": 2367,
                  "src": "5534:146:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1403,
                    "nodeType": "Block",
                    "src": "6071:79:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1398,
                              "name": "frames",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1072,
                              "src": "6114:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                              }
                            },
                            "id": 1400,
                            "indexExpression": {
                              "id": 1399,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1393,
                              "src": "6121:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6114:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Frame_$1063_storage",
                              "typeString": "struct Market.Frame storage ref"
                            }
                          },
                          "id": 1401,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "rewardFund",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1044,
                          "src": "6114:27:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1397,
                        "id": 1402,
                        "nodeType": "Return",
                        "src": "6107:34:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1391,
                    "nodeType": "StructuredDocumentation",
                    "src": "5688:310:6",
                    "text": "@notice Get frame's award amount (accumulation of different lot taxes)\n @notice Remaining tax of a lot owner get's returned after a sale (change of ownership). So the award amount isn't for sure untill the frame get's closed.\n @param frameKey Frame's timestamp\n @return award amount"
                  },
                  "functionSelector": "c84993af",
                  "id": 1404,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getRewardAmount",
                  "nameLocation": "6013:15:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1394,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1393,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "6034:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1404,
                        "src": "6029:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1392,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6029:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6028:15:6"
                  },
                  "returnParameters": {
                    "id": 1397,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1396,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1404,
                        "src": "6065:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1395,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6065:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6064:6:6"
                  },
                  "scope": 2367,
                  "src": "6004:146:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1413,
                    "nodeType": "Block",
                    "src": "6285:43:6",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1410,
                            "name": "framesKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "6303:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 1411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6303:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1409,
                        "id": 1412,
                        "nodeType": "Return",
                        "src": "6296:24:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1405,
                    "nodeType": "StructuredDocumentation",
                    "src": "6158:63:6",
                    "text": "@notice Get number of frames\n @return number frames"
                  },
                  "functionSelector": "89da88a3",
                  "id": 1414,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getNumberOfFrameKeys",
                  "nameLocation": "6236:20:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1406,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6256:2:6"
                  },
                  "returnParameters": {
                    "id": 1409,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1408,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1414,
                        "src": "6280:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1407,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6280:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6279:6:6"
                  },
                  "scope": 2367,
                  "src": "6227:101:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1475,
                    "nodeType": "Block",
                    "src": "6565:522:6",
                    "statements": [
                      {
                        "assignments": [
                          1423
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1423,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "6626:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1475,
                            "src": "6621:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1422,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "6621:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1427,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1425,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1417,
                              "src": "6655:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1424,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1290,
                            "src": "6637:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6637:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6621:44:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_SFrame_$1035",
                            "typeString": "enum Market.SFrame"
                          },
                          "id": 1434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1428,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "6713:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1430,
                              "indexExpression": {
                                "id": 1429,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1423,
                                "src": "6720:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6713:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1431,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1040,
                            "src": "6713:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$1035",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1432,
                              "name": "SFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1035,
                              "src": "6739:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SFrame_$1035_$",
                                "typeString": "type(enum Market.SFrame)"
                              }
                            },
                            "id": 1433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NULL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1031,
                            "src": "6739:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$1035",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "src": "6713:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1437,
                        "nodeType": "IfStatement",
                        "src": "6709:58:6",
                        "trueBody": {
                          "expression": {
                            "id": 1435,
                            "name": "frameKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1423,
                            "src": "6759:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1421,
                          "id": 1436,
                          "nodeType": "Return",
                          "src": "6752:15:6"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1444,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1439,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1423,
                                "src": "6786:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1441,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "6816:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1442,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "6816:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1440,
                                  "name": "clcFrameTimestamp",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1290,
                                  "src": "6798:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1443,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6798:34:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6786:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43414e275420435245415445204652414d4520494e2050415354",
                              "id": 1445,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6834:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba",
                                "typeString": "literal_string \"CAN'T CREATE FRAME IN PAST\""
                              },
                              "value": "CAN'T CREATE FRAME IN PAST"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3734403fd26d349ae87b7df243866efe7094d5f252e26115a9c83064b5d4e6ba",
                                "typeString": "literal_string \"CAN'T CREATE FRAME IN PAST\""
                              }
                            ],
                            "id": 1438,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6778:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6778:85:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1447,
                        "nodeType": "ExpressionStatement",
                        "src": "6778:85:6"
                      },
                      {
                        "expression": {
                          "id": 1453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1448,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "6895:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1450,
                              "indexExpression": {
                                "id": 1449,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1423,
                                "src": "6902:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6895:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1451,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "frameKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1037,
                            "src": "6895:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1452,
                            "name": "frameKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1423,
                            "src": "6923:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6895:36:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1454,
                        "nodeType": "ExpressionStatement",
                        "src": "6895:36:6"
                      },
                      {
                        "expression": {
                          "id": 1461,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1455,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "6942:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1457,
                              "indexExpression": {
                                "id": 1456,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1423,
                                "src": "6949:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6942:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1458,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1040,
                            "src": "6942:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$1035",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1459,
                              "name": "SFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1035,
                              "src": "6967:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SFrame_$1035_$",
                                "typeString": "type(enum Market.SFrame)"
                              }
                            },
                            "id": 1460,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "OPENED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1032,
                            "src": "6967:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$1035",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "src": "6942:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SFrame_$1035",
                            "typeString": "enum Market.SFrame"
                          }
                        },
                        "id": 1462,
                        "nodeType": "ExpressionStatement",
                        "src": "6942:38:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1466,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1423,
                              "src": "7007:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1463,
                              "name": "framesKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1075,
                              "src": "6991:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "6991:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6991:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1468,
                        "nodeType": "ExpressionStatement",
                        "src": "6991:25:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1470,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1423,
                              "src": "7044:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1469,
                            "name": "FrameUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "7032:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7032:21:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1472,
                        "nodeType": "EmitStatement",
                        "src": "7027:26:6"
                      },
                      {
                        "expression": {
                          "id": 1473,
                          "name": "frameKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1423,
                          "src": "7071:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1421,
                        "id": 1474,
                        "nodeType": "Return",
                        "src": "7064:15:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1415,
                    "nodeType": "StructuredDocumentation",
                    "src": "6336:160:6",
                    "text": "@notice Create a frame\n @param timestamp In second.\n @return frameTimestamp Frame's key (timestamp that indicated the beggining of a frame)."
                  },
                  "functionSelector": "0cbcff8f",
                  "id": 1476,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOrCreateFrame",
                  "nameLocation": "6511:16:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1418,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1417,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "6533:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1476,
                        "src": "6528:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1416,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6528:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6527:16:6"
                  },
                  "returnParameters": {
                    "id": 1421,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1420,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1476,
                        "src": "6560:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1419,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6560:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6559:6:6"
                  },
                  "scope": 2367,
                  "src": "6502:585:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1525,
                    "nodeType": "Block",
                    "src": "7329:264:6",
                    "statements": [
                      {
                        "assignments": [
                          1487
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1487,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "7345:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1525,
                            "src": "7340:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1486,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7340:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1491,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1489,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1481,
                              "src": "7369:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1488,
                            "name": "clcLotInterval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1316,
                            "src": "7354:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7354:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7340:39:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_SLot_$1079",
                            "typeString": "enum Market.SLot"
                          },
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1492,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "7394:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1494,
                                  "indexExpression": {
                                    "id": 1493,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1479,
                                    "src": "7401:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7394:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1495,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1059,
                                "src": "7394:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1497,
                              "indexExpression": {
                                "id": 1496,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1487,
                                "src": "7416:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7394:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1498,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1088,
                            "src": "7394:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$1079",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 1499,
                              "name": "SLot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "7433:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SLot_$1079_$",
                                "typeString": "type(enum Market.SLot)"
                              }
                            },
                            "id": 1500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "NULL",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1076,
                            "src": "7433:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$1079",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "src": "7394:48:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1504,
                        "nodeType": "IfStatement",
                        "src": "7390:67:6",
                        "trueBody": {
                          "expression": {
                            "id": 1502,
                            "name": "lotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1487,
                            "src": "7451:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "functionReturnParameters": 1485,
                          "id": 1503,
                          "nodeType": "Return",
                          "src": "7444:13:6"
                        }
                      },
                      {
                        "expression": {
                          "id": 1513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1505,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "7468:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1507,
                                  "indexExpression": {
                                    "id": 1506,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1479,
                                    "src": "7475:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7468:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1508,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1059,
                                "src": "7468:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1510,
                              "indexExpression": {
                                "id": 1509,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1487,
                                "src": "7490:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "7468:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1511,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lotKey",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1081,
                            "src": "7468:36:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1512,
                            "name": "lotKey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1487,
                            "src": "7507:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7468:45:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1514,
                        "nodeType": "ExpressionStatement",
                        "src": "7468:45:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1520,
                              "name": "lotKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1487,
                              "src": "7554:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1515,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1072,
                                  "src": "7524:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 1517,
                                "indexExpression": {
                                  "id": 1516,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1479,
                                  "src": "7531:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7524:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 1518,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lotKeys",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1062,
                              "src": "7524:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 1519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "7524:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                              "typeString": "function (uint256[] storage pointer,uint256)"
                            }
                          },
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7524:37:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1522,
                        "nodeType": "ExpressionStatement",
                        "src": "7524:37:6"
                      },
                      {
                        "expression": {
                          "id": 1523,
                          "name": "lotKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1487,
                          "src": "7579:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1485,
                        "id": 1524,
                        "nodeType": "Return",
                        "src": "7572:13:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1477,
                    "nodeType": "StructuredDocumentation",
                    "src": "7095:151:6",
                    "text": "@notice Create a lot\n @param frameKey Frame's timestamp\n @param pairPrice Price is the trading pair's price\n @return lotKey"
                  },
                  "id": 1526,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getOrCreateLot",
                  "nameLocation": "7261:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1482,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1479,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "7281:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1526,
                        "src": "7276:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1478,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7276:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1481,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "7296:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1526,
                        "src": "7291:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1480,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7291:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7275:31:6"
                  },
                  "returnParameters": {
                    "id": 1485,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1484,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1526,
                        "src": "7324:4:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1483,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7324:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7323:6:6"
                  },
                  "scope": 2367,
                  "src": "7252:341:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1599,
                    "nodeType": "Block",
                    "src": "7686:508:6",
                    "statements": [
                      {
                        "assignments": [
                          1536
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1536,
                            "mutability": "mutable",
                            "name": "dFrame",
                            "nameLocation": "7715:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1599,
                            "src": "7710:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1535,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7710:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1549,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1546,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7777:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1547,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7777:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "components": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 1541,
                                          "name": "period",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1009,
                                          "src": "7763:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "id": 1538,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "7743:5:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1539,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "7743:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "id": 1540,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "add",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 253,
                                        "src": "7743:19:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                                        }
                                      },
                                      "id": 1542,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7743:27:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 1537,
                                    "name": "clcFrameTimestamp",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1290,
                                    "src": "7725:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                      "typeString": "function (uint256) view returns (uint256)"
                                    }
                                  },
                                  "id": 1543,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7725:46:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1544,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "7724:48:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sub",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 268,
                            "src": "7724:52:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7724:69:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7710:83:6"
                      },
                      {
                        "assignments": [
                          1551
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1551,
                            "mutability": "mutable",
                            "name": "dFrameP",
                            "nameLocation": "7810:7:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1599,
                            "src": "7805:12:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1550,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7805:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1558,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1554,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1552,
                              "name": "scalar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1030,
                              "src": "7820:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1553,
                              "name": "dFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1536,
                              "src": "7829:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7820:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "components": [
                              {
                                "id": 1555,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1009,
                                "src": "7839:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1556,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7838:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7820:26:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7805:41:6"
                      },
                      {
                        "assignments": [
                          1560
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1560,
                            "mutability": "mutable",
                            "name": "numOfFramesLeft",
                            "nameLocation": "7924:15:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1599,
                            "src": "7919:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1559,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "7919:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1564,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1562,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1528,
                              "src": "7956:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1561,
                            "name": "clcFramesLeft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1338,
                            "src": "7942:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1563,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7942:23:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7919:46:6"
                      },
                      {
                        "expression": {
                          "id": 1573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1565,
                            "name": "tax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1533,
                            "src": "7976:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1568,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1566,
                                  "name": "acquisitionPrice",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1530,
                                  "src": "7982:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1567,
                                  "name": "taxMarket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1020,
                                  "src": "8001:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7982:28:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "hexValue": "313030303030",
                                "id": 1569,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "8013:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                },
                                "value": "100000"
                              },
                              "src": "7982:37:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1571,
                              "name": "numOfFramesLeft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1560,
                              "src": "8022:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7982:55:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7976:61:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1574,
                        "nodeType": "ExpressionStatement",
                        "src": "7976:61:6"
                      },
                      {
                        "assignments": [
                          1576
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1576,
                            "mutability": "mutable",
                            "name": "dtax",
                            "nameLocation": "8053:4:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1599,
                            "src": "8048:9:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1575,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8048:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1582,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1577,
                              "name": "acquisitionPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1530,
                              "src": "8060:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1578,
                              "name": "taxMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1020,
                              "src": "8079:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8060:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030303030",
                            "id": 1580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8091:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          "src": "8060:37:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8048:49:6"
                      },
                      {
                        "expression": {
                          "id": 1589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1583,
                            "name": "dtax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1576,
                            "src": "8108:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1584,
                                "name": "dtax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1576,
                                "src": "8115:4:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1585,
                                "name": "dFrameP",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1551,
                                "src": "8122:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8115:14:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1587,
                              "name": "scalar",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1030,
                              "src": "8132:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8115:23:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8108:30:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1590,
                        "nodeType": "ExpressionStatement",
                        "src": "8108:30:6"
                      },
                      {
                        "expression": {
                          "id": 1595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1591,
                            "name": "tax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1533,
                            "src": "8149:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1594,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1592,
                              "name": "tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1533,
                              "src": "8155:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1593,
                              "name": "dtax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1576,
                              "src": "8161:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8155:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8149:16:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1596,
                        "nodeType": "ExpressionStatement",
                        "src": "8149:16:6"
                      },
                      {
                        "expression": {
                          "id": 1597,
                          "name": "tax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1533,
                          "src": "8183:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1534,
                        "id": 1598,
                        "nodeType": "Return",
                        "src": "8176:10:6"
                      }
                    ]
                  },
                  "functionSelector": "e107fb4f",
                  "id": 1600,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcTax",
                  "nameLocation": "7610:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1531,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1528,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "7622:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "7617:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1527,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7617:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1530,
                        "mutability": "mutable",
                        "name": "acquisitionPrice",
                        "nameLocation": "7637:16:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "7632:21:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1529,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7632:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7616:38:6"
                  },
                  "returnParameters": {
                    "id": 1534,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1533,
                        "mutability": "mutable",
                        "name": "tax",
                        "nameLocation": "7681:3:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1600,
                        "src": "7676:8:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1532,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7676:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7675:10:6"
                  },
                  "scope": 2367,
                  "src": "7601:593:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1645,
                    "nodeType": "Block",
                    "src": "8651:276:6",
                    "statements": [
                      {
                        "assignments": [
                          1613
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1613,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "8671:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1645,
                            "src": "8666:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1612,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8666:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1617,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1615,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1603,
                              "src": "8700:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1614,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1290,
                            "src": "8682:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8682:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8666:44:6"
                      },
                      {
                        "assignments": [
                          1619
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1619,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "8735:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1645,
                            "src": "8730:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1618,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8730:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1623,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1621,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1605,
                              "src": "8759:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1620,
                            "name": "clcLotInterval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1316,
                            "src": "8744:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 1622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8744:25:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8730:39:6"
                      },
                      {
                        "assignments": [
                          1625
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1625,
                            "mutability": "mutable",
                            "name": "tax",
                            "nameLocation": "8785:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1645,
                            "src": "8780:8:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1624,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8780:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1630,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1627,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1613,
                              "src": "8798:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1628,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1607,
                              "src": "8808:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1626,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1600,
                            "src": "8791:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8780:37:6"
                      },
                      {
                        "expression": {
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1631,
                            "name": "cmpltAmnt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1610,
                            "src": "8828:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1632,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1072,
                                      "src": "8840:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1634,
                                    "indexExpression": {
                                      "id": 1633,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1613,
                                      "src": "8847:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "8840:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1635,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1059,
                                  "src": "8840:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                  }
                                },
                                "id": 1637,
                                "indexExpression": {
                                  "id": 1636,
                                  "name": "lotKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1619,
                                  "src": "8862:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8840:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                  "typeString": "struct Market.Lot storage ref"
                                }
                              },
                              "id": 1638,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "acquisitionPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1085,
                              "src": "8840:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 1639,
                              "name": "tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1625,
                              "src": "8889:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8840:52:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8828:64:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1642,
                        "nodeType": "ExpressionStatement",
                        "src": "8828:64:6"
                      },
                      {
                        "expression": {
                          "id": 1643,
                          "name": "cmpltAmnt",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1610,
                          "src": "8910:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1611,
                        "id": 1644,
                        "nodeType": "Return",
                        "src": "8903:16:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1601,
                    "nodeType": "StructuredDocumentation",
                    "src": "8202:331:6",
                    "text": "@notice Calculate amout required to approve to buy a lot\n @param timestamp Timestamp that determins which frame it is\n @param pairPrice Value is trading pair's price (to get correct lot key) \n @param acqPrice New sell price is required to calculate tax\n @return cmpltAmnt complete price of a lot"
                  },
                  "functionSelector": "a4d246ff",
                  "id": 1646,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "clcAmountToApprove",
                  "nameLocation": "8548:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1608,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1603,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "8572:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1646,
                        "src": "8567:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1602,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8567:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1605,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "8588:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1646,
                        "src": "8583:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1604,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8583:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1607,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "8604:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1646,
                        "src": "8599:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1606,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8599:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8566:47:6"
                  },
                  "returnParameters": {
                    "id": 1611,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1610,
                        "mutability": "mutable",
                        "name": "cmpltAmnt",
                        "nameLocation": "8640:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1646,
                        "src": "8635:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1609,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "8635:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8634:16:6"
                  },
                  "scope": 2367,
                  "src": "8539:388:6",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1848,
                    "nodeType": "Block",
                    "src": "9315:1691:6",
                    "statements": [
                      {
                        "assignments": [
                          1660
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1660,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "9373:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1848,
                            "src": "9368:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1659,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9368:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1664,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1662,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1649,
                              "src": "9402:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1661,
                            "name": "getOrCreateFrame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1476,
                            "src": "9385:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) returns (uint256)"
                            }
                          },
                          "id": 1663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9385:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9368:44:6"
                      },
                      {
                        "assignments": [
                          1666
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1666,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "9454:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1848,
                            "src": "9449:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1665,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9449:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1671,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1668,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1660,
                              "src": "9478:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1669,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1651,
                              "src": "9488:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1667,
                            "name": "getOrCreateLot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1526,
                            "src": "9463:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 1670,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9463:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9449:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1673,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "9517:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1674,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "9517:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1675,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1072,
                                        "src": "9531:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 1677,
                                      "indexExpression": {
                                        "id": 1676,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1660,
                                        "src": "9538:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "9531:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 1678,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1059,
                                    "src": "9531:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                    }
                                  },
                                  "id": 1680,
                                  "indexExpression": {
                                    "id": 1679,
                                    "name": "lotKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1666,
                                    "src": "9553:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "9531:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                    "typeString": "struct Market.Lot storage ref"
                                  }
                                },
                                "id": 1681,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lotOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1083,
                                "src": "9531:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9517:52:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4144445245535320414c5245414459204f574e53205448452050415243454c",
                              "id": 1683,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9571:33:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc",
                                "typeString": "literal_string \"ADDRESS ALREADY OWNS THE PARCEL\""
                              },
                              "value": "ADDRESS ALREADY OWNS THE PARCEL"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_de92c035ed9dcbfbccdf38fa77e1e56b46523139c1c1f73f98ea18475ab34dcc",
                                "typeString": "literal_string \"ADDRESS ALREADY OWNS THE PARCEL\""
                              }
                            ],
                            "id": 1672,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9509:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9509:96:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1685,
                        "nodeType": "ExpressionStatement",
                        "src": "9509:96:6"
                      },
                      {
                        "assignments": [
                          1687
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1687,
                            "mutability": "mutable",
                            "name": "tax",
                            "nameLocation": "9623:3:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1848,
                            "src": "9618:8:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1686,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "9618:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1692,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1689,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1660,
                              "src": "9636:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1690,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1653,
                              "src": "9646:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1688,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1600,
                            "src": "9629:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1691,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9629:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9618:37:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1696,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "9783:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1697,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "9783:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1700,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "9803:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Market_$2367",
                                          "typeString": "contract Market"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Market_$2367",
                                          "typeString": "contract Market"
                                        }
                                      ],
                                      "id": 1699,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "9795:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1698,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "9795:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1701,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "9795:13:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1694,
                                    "name": "accountingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1005,
                                    "src": "9757:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$77",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1695,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "allowance",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 36,
                                  "src": "9757:25:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view external returns (uint256)"
                                  }
                                },
                                "id": 1702,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9757:52:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1711,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "id": 1703,
                                              "name": "frames",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1072,
                                              "src": "9814:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                                "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                              }
                                            },
                                            "id": 1705,
                                            "indexExpression": {
                                              "id": 1704,
                                              "name": "frameKey",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1660,
                                              "src": "9821:8:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "9814:16:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                              "typeString": "struct Market.Frame storage ref"
                                            }
                                          },
                                          "id": 1706,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "lots",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1059,
                                          "src": "9814:21:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                          }
                                        },
                                        "id": 1708,
                                        "indexExpression": {
                                          "id": 1707,
                                          "name": "lotKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1666,
                                          "src": "9836:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "9814:29:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                          "typeString": "struct Market.Lot storage ref"
                                        }
                                      },
                                      "id": 1709,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "acquisitionPrice",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1085,
                                      "src": "9814:46:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 1710,
                                      "name": "tax",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1687,
                                      "src": "9863:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "9814:52:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 1712,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "9813:54:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9757:110:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "415050524f56454420414d4f554e5420495320544f4f20534d414c4c",
                              "id": 1714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9869:30:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194",
                                "typeString": "literal_string \"APPROVED AMOUNT IS TOO SMALL\""
                              },
                              "value": "APPROVED AMOUNT IS TOO SMALL"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194",
                                "typeString": "literal_string \"APPROVED AMOUNT IS TOO SMALL\""
                              }
                            ],
                            "id": 1693,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9749:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9749:151:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1716,
                        "nodeType": "ExpressionStatement",
                        "src": "9749:151:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1720,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9994:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1721,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9994:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 1724,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10014:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$2367",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$2367",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 1723,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10006:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1722,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10006:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1725,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10006:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1734,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1726,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1072,
                                            "src": "10022:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 1728,
                                          "indexExpression": {
                                            "id": 1727,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1660,
                                            "src": "10029:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "10022:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 1729,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lots",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1059,
                                        "src": "10022:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                        }
                                      },
                                      "id": 1731,
                                      "indexExpression": {
                                        "id": 1730,
                                        "name": "lotKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1666,
                                        "src": "10044:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10022:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                        "typeString": "struct Market.Lot storage ref"
                                      }
                                    },
                                    "id": 1732,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "acquisitionPrice",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1085,
                                    "src": "10022:46:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "id": 1733,
                                    "name": "tax",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1687,
                                    "src": "10071:3:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10022:52:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1735,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "10021:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1717,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "9965:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 58,
                            "src": "9965:28:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 1736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9965:111:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1737,
                        "nodeType": "ExpressionStatement",
                        "src": "9965:111:6"
                      },
                      {
                        "expression": {
                          "id": 1749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 1738,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "10087:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 1740,
                              "indexExpression": {
                                "id": 1739,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1660,
                                "src": "10094:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10087:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 1741,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardFund",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1044,
                            "src": "10087:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1742,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1072,
                                      "src": "10118:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1744,
                                    "indexExpression": {
                                      "id": 1743,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1660,
                                      "src": "10125:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10118:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1745,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "rewardFund",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1044,
                                  "src": "10118:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "+",
                                "rightExpression": {
                                  "id": 1746,
                                  "name": "tax",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1687,
                                  "src": "10148:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10118:33:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1748,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "10117:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10087:65:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1750,
                        "nodeType": "ExpressionStatement",
                        "src": "10087:65:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_SLot_$1079",
                            "typeString": "enum Market.SLot"
                          },
                          "id": 1760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1751,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "10224:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1753,
                                  "indexExpression": {
                                    "id": 1752,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1660,
                                    "src": "10231:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10224:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1754,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1059,
                                "src": "10224:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1756,
                              "indexExpression": {
                                "id": 1755,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1666,
                                "src": "10246:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10224:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1757,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1088,
                            "src": "10224:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$1079",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 1758,
                              "name": "SLot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "10263:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SLot_$1079_$",
                                "typeString": "type(enum Market.SLot)"
                              }
                            },
                            "id": 1759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BOUGHT",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1077,
                            "src": "10263:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$1079",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "src": "10224:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1820,
                          "nodeType": "Block",
                          "src": "10685:76:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1818,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1809,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1072,
                                          "src": "10700:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 1811,
                                        "indexExpression": {
                                          "id": 1810,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1660,
                                          "src": "10707:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "10700:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 1812,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "lots",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1059,
                                      "src": "10700:21:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                      }
                                    },
                                    "id": 1814,
                                    "indexExpression": {
                                      "id": 1813,
                                      "name": "lotKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1666,
                                      "src": "10722:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10700:29:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                      "typeString": "struct Market.Lot storage ref"
                                    }
                                  },
                                  "id": 1815,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1088,
                                  "src": "10700:35:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SLot_$1079",
                                    "typeString": "enum Market.SLot"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 1816,
                                    "name": "SLot",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1079,
                                    "src": "10738:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SLot_$1079_$",
                                      "typeString": "type(enum Market.SLot)"
                                    }
                                  },
                                  "id": 1817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "BOUGHT",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1077,
                                  "src": "10738:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SLot_$1079",
                                    "typeString": "enum Market.SLot"
                                  }
                                },
                                "src": "10700:49:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SLot_$1079",
                                  "typeString": "enum Market.SLot"
                                }
                              },
                              "id": 1819,
                              "nodeType": "ExpressionStatement",
                              "src": "10700:49:6"
                            }
                          ]
                        },
                        "id": 1821,
                        "nodeType": "IfStatement",
                        "src": "10220:541:6",
                        "trueBody": {
                          "id": 1808,
                          "nodeType": "Block",
                          "src": "10276:394:6",
                          "statements": [
                            {
                              "assignments": [
                                1762
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1762,
                                  "mutability": "mutable",
                                  "name": "taxRetrn",
                                  "nameLocation": "10296:8:6",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1808,
                                  "src": "10291:13:6",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1761,
                                    "name": "uint",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10291:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1773,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 1764,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1660,
                                    "src": "10314:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1765,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1072,
                                            "src": "10324:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 1767,
                                          "indexExpression": {
                                            "id": 1766,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1660,
                                            "src": "10331:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "10324:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 1768,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lots",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1059,
                                        "src": "10324:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                        }
                                      },
                                      "id": 1770,
                                      "indexExpression": {
                                        "id": 1769,
                                        "name": "lotKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1666,
                                        "src": "10346:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10324:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                        "typeString": "struct Market.Lot storage ref"
                                      }
                                    },
                                    "id": 1771,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "acquisitionPrice",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1085,
                                    "src": "10324:46:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1763,
                                  "name": "clcTax",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1600,
                                  "src": "10307:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) view returns (uint256)"
                                  }
                                },
                                "id": 1772,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10307:64:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "10291:80:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "baseExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 1777,
                                            "name": "frames",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1072,
                                            "src": "10441:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                              "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                            }
                                          },
                                          "id": 1779,
                                          "indexExpression": {
                                            "id": 1778,
                                            "name": "frameKey",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1660,
                                            "src": "10448:8:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "10441:16:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                            "typeString": "struct Market.Frame storage ref"
                                          }
                                        },
                                        "id": 1780,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "lots",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1059,
                                        "src": "10441:21:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                        }
                                      },
                                      "id": 1782,
                                      "indexExpression": {
                                        "id": 1781,
                                        "name": "lotKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1666,
                                        "src": "10463:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10441:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                        "typeString": "struct Market.Lot storage ref"
                                      }
                                    },
                                    "id": 1783,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lotOwner",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1083,
                                    "src": "10441:38:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1792,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1784,
                                          "name": "taxRetrn",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1762,
                                          "src": "10482:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "expression": {
                                            "baseExpression": {
                                              "expression": {
                                                "baseExpression": {
                                                  "id": 1785,
                                                  "name": "frames",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1072,
                                                  "src": "10493:6:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                                  }
                                                },
                                                "id": 1787,
                                                "indexExpression": {
                                                  "id": 1786,
                                                  "name": "frameKey",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1660,
                                                  "src": "10500:8:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                  }
                                                },
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "nodeType": "IndexAccess",
                                                "src": "10493:16:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                                  "typeString": "struct Market.Frame storage ref"
                                                }
                                              },
                                              "id": 1788,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "lots",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 1059,
                                              "src": "10493:21:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                                "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                              }
                                            },
                                            "id": 1790,
                                            "indexExpression": {
                                              "id": 1789,
                                              "name": "lotKey",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1666,
                                              "src": "10515:6:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "10493:29:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                              "typeString": "struct Market.Lot storage ref"
                                            }
                                          },
                                          "id": 1791,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "acquisitionPrice",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 1085,
                                          "src": "10493:46:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "10482:57:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1793,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "10481:59:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1774,
                                    "name": "accountingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1005,
                                    "src": "10416:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$77",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1776,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 26,
                                  "src": "10416:24:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1794,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10416:125:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1795,
                              "nodeType": "ExpressionStatement",
                              "src": "10416:125:6"
                            },
                            {
                              "expression": {
                                "id": 1806,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1796,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1072,
                                      "src": "10590:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1798,
                                    "indexExpression": {
                                      "id": 1797,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1660,
                                      "src": "10597:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10590:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1799,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardFund",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1044,
                                  "src": "10590:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1805,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1800,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1072,
                                        "src": "10620:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 1802,
                                      "indexExpression": {
                                        "id": 1801,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1660,
                                        "src": "10627:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10620:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 1803,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rewardFund",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1044,
                                    "src": "10620:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1804,
                                    "name": "taxRetrn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1762,
                                    "src": "10650:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "10620:38:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "10590:68:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1807,
                              "nodeType": "ExpressionStatement",
                              "src": "10590:68:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1822,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "10802:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1824,
                                  "indexExpression": {
                                    "id": 1823,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1660,
                                    "src": "10809:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10802:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1825,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1059,
                                "src": "10802:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1827,
                              "indexExpression": {
                                "id": 1826,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1666,
                                "src": "10824:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10802:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1828,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lotOwner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1083,
                            "src": "10802:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1829,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "10843:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "10843:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "10802:51:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1832,
                        "nodeType": "ExpressionStatement",
                        "src": "10802:51:6"
                      },
                      {
                        "expression": {
                          "id": 1841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1833,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "10864:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1835,
                                  "indexExpression": {
                                    "id": 1834,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1660,
                                    "src": "10871:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10864:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1836,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1059,
                                "src": "10864:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1838,
                              "indexExpression": {
                                "id": 1837,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1666,
                                "src": "10886:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10864:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1839,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "acquisitionPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1085,
                            "src": "10864:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1840,
                            "name": "acqPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1653,
                            "src": "10913:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10864:57:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1842,
                        "nodeType": "ExpressionStatement",
                        "src": "10864:57:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1844,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1660,
                              "src": "10981:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1845,
                              "name": "lotKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1666,
                              "src": "10991:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1843,
                            "name": "LotUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1095,
                            "src": "10971:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10971:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1847,
                        "nodeType": "EmitStatement",
                        "src": "10966:32:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1647,
                    "nodeType": "StructuredDocumentation",
                    "src": "8935:282:6",
                    "text": "@notice Calculate amout required to approve to buy a lot\n @param timestamp Frame's timestamp get's calculated from this value\n @param pairPrice Is trading pair's price (to get correct lot key) \n @param acqPrice New sell price is required to calculate tax"
                  },
                  "functionSelector": "3c80d8ea",
                  "id": 1849,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1656,
                          "name": "acqPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1653,
                          "src": "9305:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1657,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1655,
                        "name": "minTaxCheck",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1193,
                        "src": "9293:11:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9293:21:6"
                    }
                  ],
                  "name": "buyLot",
                  "nameLocation": "9232:6:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1654,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1649,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "9244:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1849,
                        "src": "9239:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1648,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9239:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1651,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "9260:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1849,
                        "src": "9255:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1650,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9255:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1653,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "9276:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1849,
                        "src": "9271:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1652,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9271:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9238:47:6"
                  },
                  "returnParameters": {
                    "id": 1658,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9315:0:6"
                  },
                  "scope": 2367,
                  "src": "9223:1783:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2007,
                    "nodeType": "Block",
                    "src": "11452:1146:6",
                    "statements": [
                      {
                        "assignments": [
                          1863
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1863,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "11468:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2007,
                            "src": "11463:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1862,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11463:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1867,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1865,
                              "name": "timestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1852,
                              "src": "11496:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1864,
                            "name": "getOrCreateFrame",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1476,
                            "src": "11479:16:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) returns (uint256)"
                            }
                          },
                          "id": 1866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11479:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11463:43:6"
                      },
                      {
                        "assignments": [
                          1869
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1869,
                            "mutability": "mutable",
                            "name": "lotKey",
                            "nameLocation": "11523:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2007,
                            "src": "11518:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1868,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11518:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1874,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1871,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1863,
                              "src": "11547:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1872,
                              "name": "pairPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1854,
                              "src": "11557:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1870,
                            "name": "getOrCreateLot",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1526,
                            "src": "11532:14:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 1873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11532:35:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11518:49:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1876,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1072,
                                        "src": "11587:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 1878,
                                      "indexExpression": {
                                        "id": 1877,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1863,
                                        "src": "11594:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "11587:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 1879,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1059,
                                    "src": "11587:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                    }
                                  },
                                  "id": 1881,
                                  "indexExpression": {
                                    "id": 1880,
                                    "name": "lotKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1869,
                                    "src": "11609:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11587:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                    "typeString": "struct Market.Lot storage ref"
                                  }
                                },
                                "id": 1882,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lotOwner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1083,
                                "src": "11587:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1883,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "11629:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1884,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "11629:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "11587:52:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "544849532041444452455353204953204e4f5420544845204f574e4552",
                              "id": 1886,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11641:31:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630",
                                "typeString": "literal_string \"THIS ADDRESS IS NOT THE OWNER\""
                              },
                              "value": "THIS ADDRESS IS NOT THE OWNER"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_96a754868de25d801d31c09825eb386f0ca83a97f0fc1d2fda7dc0333bc99630",
                                "typeString": "literal_string \"THIS ADDRESS IS NOT THE OWNER\""
                              }
                            ],
                            "id": 1875,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11579:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11579:94:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1888,
                        "nodeType": "ExpressionStatement",
                        "src": "11579:94:6"
                      },
                      {
                        "assignments": [
                          1890
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1890,
                            "mutability": "mutable",
                            "name": "taxNew",
                            "nameLocation": "11691:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2007,
                            "src": "11686:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1889,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11686:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1895,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1892,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1863,
                              "src": "11707:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1893,
                              "name": "acqPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1856,
                              "src": "11717:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1891,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1600,
                            "src": "11700:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11700:26:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11686:40:6"
                      },
                      {
                        "assignments": [
                          1897
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1897,
                            "mutability": "mutable",
                            "name": "taxOld",
                            "nameLocation": "11742:6:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2007,
                            "src": "11737:11:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1896,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11737:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1908,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1899,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1863,
                              "src": "11758:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1900,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1072,
                                      "src": "11768:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1902,
                                    "indexExpression": {
                                      "id": 1901,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1863,
                                      "src": "11775:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11768:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1903,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1059,
                                  "src": "11768:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                  }
                                },
                                "id": 1905,
                                "indexExpression": {
                                  "id": 1904,
                                  "name": "lotKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1869,
                                  "src": "11790:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11768:29:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                  "typeString": "struct Market.Lot storage ref"
                                }
                              },
                              "id": 1906,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "acquisitionPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1085,
                              "src": "11768:46:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1898,
                            "name": "clcTax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1600,
                            "src": "11751:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256,uint256) view returns (uint256)"
                            }
                          },
                          "id": 1907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11751:64:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11737:78:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1909,
                            "name": "taxNew",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1890,
                            "src": "11832:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 1910,
                            "name": "taxOld",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1897,
                            "src": "11841:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11832:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1963,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1961,
                              "name": "taxNew",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1890,
                              "src": "12257:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "id": 1962,
                              "name": "taxOld",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1897,
                              "src": "12266:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12257:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 1990,
                          "nodeType": "IfStatement",
                          "src": "12253:193:6",
                          "trueBody": {
                            "id": 1989,
                            "nodeType": "Block",
                            "src": "12274:172:6",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 1967,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "12314:3:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 1968,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "12314:10:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1971,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 1969,
                                        "name": "taxOld",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1897,
                                        "src": "12326:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 1970,
                                        "name": "taxNew",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1890,
                                        "src": "12335:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "12326:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1964,
                                      "name": "accountingToken",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1005,
                                      "src": "12289:15:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$77",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "id": 1966,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "transfer",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 26,
                                    "src": "12289:24:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                      "typeString": "function (address,uint256) external returns (bool)"
                                    }
                                  },
                                  "id": 1972,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12289:53:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 1973,
                                "nodeType": "ExpressionStatement",
                                "src": "12289:53:6"
                              },
                              {
                                "expression": {
                                  "id": 1987,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1974,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1072,
                                        "src": "12357:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 1976,
                                      "indexExpression": {
                                        "id": 1975,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1863,
                                        "src": "12364:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12357:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 1977,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "rewardFund",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1044,
                                    "src": "12357:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1986,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 1978,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1072,
                                          "src": "12387:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 1980,
                                        "indexExpression": {
                                          "id": 1979,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1863,
                                          "src": "12394:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "12387:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 1981,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "rewardFund",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1044,
                                      "src": "12387:27:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1984,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1982,
                                            "name": "taxOld",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1897,
                                            "src": "12418:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 1983,
                                            "name": "taxNew",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1890,
                                            "src": "12427:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "12418:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 1985,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "12417:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "12387:47:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12357:77:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 1988,
                                "nodeType": "ExpressionStatement",
                                "src": "12357:77:6"
                              }
                            ]
                          }
                        },
                        "id": 1991,
                        "nodeType": "IfStatement",
                        "src": "11828:618:6",
                        "trueBody": {
                          "id": 1960,
                          "nodeType": "Block",
                          "src": "11849:389:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1926,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 1915,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "11898:3:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1916,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "11898:10:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 1919,
                                              "name": "this",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -28,
                                              "src": "11918:4:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_contract$_Market_$2367",
                                                "typeString": "contract Market"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_contract$_Market_$2367",
                                                "typeString": "contract Market"
                                              }
                                            ],
                                            "id": 1918,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "11910:7:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_address_$",
                                              "typeString": "type(address)"
                                            },
                                            "typeName": {
                                              "id": 1917,
                                              "name": "address",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "11910:7:6",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 1920,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "11910:13:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "expression": {
                                          "id": 1913,
                                          "name": "accountingToken",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1005,
                                          "src": "11872:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$77",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        "id": 1914,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "allowance",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 36,
                                        "src": "11872:25:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                          "typeString": "function (address,address) view external returns (uint256)"
                                        }
                                      },
                                      "id": 1921,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "11872:52:6",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "components": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 1924,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 1922,
                                            "name": "taxNew",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1890,
                                            "src": "11929:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "id": 1923,
                                            "name": "taxOld",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1897,
                                            "src": "11938:6:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "11929:15:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "id": 1925,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "11928:17:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11872:73:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "415050524f56454420414d4f554e5420495320544f4f20534d414c4c",
                                    "id": 1927,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11947:30:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194",
                                      "typeString": "literal_string \"APPROVED AMOUNT IS TOO SMALL\""
                                    },
                                    "value": "APPROVED AMOUNT IS TOO SMALL"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_e0582cef5de680d3a88eb41c0961ca10757a9ae9ea0e07ab08aa4ee98c065194",
                                      "typeString": "literal_string \"APPROVED AMOUNT IS TOO SMALL\""
                                    }
                                  ],
                                  "id": 1912,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "11864:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1928,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11864:114:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1929,
                              "nodeType": "ExpressionStatement",
                              "src": "11864:114:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1933,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "12090:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1934,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "12090:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 1937,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "12110:4:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Market_$2367",
                                          "typeString": "contract Market"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_Market_$2367",
                                          "typeString": "contract Market"
                                        }
                                      ],
                                      "id": 1936,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "12102:7:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 1935,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "12102:7:6",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 1938,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12102:13:6",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1941,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1939,
                                          "name": "taxNew",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1890,
                                          "src": "12118:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1940,
                                          "name": "taxOld",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1897,
                                          "src": "12127:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12118:15:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1942,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "12117:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1930,
                                    "name": "accountingToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1005,
                                    "src": "12061:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$77",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 1932,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "transferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 58,
                                  "src": "12061:28:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                    "typeString": "function (address,address,uint256) external returns (bool)"
                                  }
                                },
                                "id": 1943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12061:74:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1944,
                              "nodeType": "ExpressionStatement",
                              "src": "12061:74:6"
                            },
                            {
                              "expression": {
                                "id": 1958,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 1945,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1072,
                                      "src": "12150:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 1947,
                                    "indexExpression": {
                                      "id": 1946,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1863,
                                      "src": "12157:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12150:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 1948,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "rewardFund",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1044,
                                  "src": "12150:27:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1957,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 1949,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1072,
                                        "src": "12180:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 1951,
                                      "indexExpression": {
                                        "id": 1950,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1863,
                                        "src": "12187:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "12180:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 1952,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "rewardFund",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1044,
                                    "src": "12180:27:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1955,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1953,
                                          "name": "taxNew",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1890,
                                          "src": "12211:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1954,
                                          "name": "taxOld",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1897,
                                          "src": "12219:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "12211:14:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 1956,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "12210:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "12180:46:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12150:76:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1959,
                              "nodeType": "ExpressionStatement",
                              "src": "12150:76:6"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 2000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1992,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "12456:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 1994,
                                  "indexExpression": {
                                    "id": 1993,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1863,
                                    "src": "12463:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12456:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 1995,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1059,
                                "src": "12456:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 1997,
                              "indexExpression": {
                                "id": 1996,
                                "name": "lotKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1869,
                                "src": "12478:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12456:29:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 1998,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "acquisitionPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1085,
                            "src": "12456:46:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1999,
                            "name": "acqPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1856,
                            "src": "12505:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12456:57:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2001,
                        "nodeType": "ExpressionStatement",
                        "src": "12456:57:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2003,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1863,
                              "src": "12573:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2004,
                              "name": "lotKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1869,
                              "src": "12583:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2002,
                            "name": "LotUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1095,
                            "src": "12563:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 2005,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12563:27:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2006,
                        "nodeType": "EmitStatement",
                        "src": "12558:32:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1850,
                    "nodeType": "StructuredDocumentation",
                    "src": "11014:332:6",
                    "text": "@notice Owner can update lot's price. Has to pay additional tax, or leftover tax gets' returned to him if the new price is lower\n @param timestamp Frame's timestamp get's calculated from this value\n @param pairPrice Is trading pair's price (to get correct lot key) \n @param acqPrice New acquisition price"
                  },
                  "functionSelector": "bb15d2dd",
                  "id": 2008,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 1859,
                          "name": "acqPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1856,
                          "src": "11442:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1860,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1858,
                        "name": "minTaxCheck",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1193,
                        "src": "11430:11:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11430:21:6"
                    }
                  ],
                  "name": "updateLotPrice",
                  "nameLocation": "11361:14:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1857,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1852,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "11381:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2008,
                        "src": "11376:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1851,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11376:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1854,
                        "mutability": "mutable",
                        "name": "pairPrice",
                        "nameLocation": "11397:9:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2008,
                        "src": "11392:14:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1853,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11392:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1856,
                        "mutability": "mutable",
                        "name": "acqPrice",
                        "nameLocation": "11413:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2008,
                        "src": "11408:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1855,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11408:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11375:47:6"
                  },
                  "returnParameters": {
                    "id": 1861,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11452:0:6"
                  },
                  "scope": 2367,
                  "src": "11352:1246:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2098,
                    "nodeType": "Block",
                    "src": "13907:768:6",
                    "statements": [
                      {
                        "assignments": [
                          2015
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2015,
                            "mutability": "mutable",
                            "name": "frameKey",
                            "nameLocation": "13923:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2098,
                            "src": "13918:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2014,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "13918:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2020,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2017,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "13952:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "13952:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2016,
                            "name": "clcFrameTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1290,
                            "src": "13934:17:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (uint256) view returns (uint256)"
                            }
                          },
                          "id": 2019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13934:34:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13918:50:6"
                      },
                      {
                        "expression": {
                          "id": 2027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2021,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "13979:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2023,
                              "indexExpression": {
                                "id": 2022,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2015,
                                "src": "13986:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13979:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2024,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "lastBlockNum",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1054,
                            "src": "13979:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2025,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "14011:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 2026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "14011:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13979:44:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2028,
                        "nodeType": "ExpressionStatement",
                        "src": "13979:44:6"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 2045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2029,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "14090:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "14090:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2036,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2033,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2031,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2015,
                                          "src": "14111:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 2032,
                                          "name": "period",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1009,
                                          "src": "14122:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "14111:17:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2034,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "14110:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2035,
                                    "name": "tReporting",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1025,
                                    "src": "14132:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14110:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2037,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14109:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14090:53:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2039,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1072,
                                  "src": "14147:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2041,
                                "indexExpression": {
                                  "id": 2040,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2015,
                                  "src": "14154:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14147:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2042,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "oraclePrice0CumulativeStart",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1046,
                              "src": "14147:44:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 2043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14195:1:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "14147:49:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "14090:106:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2075,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 2066,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "14417:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2067,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "14417:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": ">=",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2073,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 2070,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 2068,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2015,
                                          "src": "14438:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 2069,
                                          "name": "period",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1009,
                                          "src": "14449:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "14438:17:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 2071,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "14437:19:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 2072,
                                    "name": "tReporting",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1025,
                                    "src": "14459:10:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14437:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2074,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "14436:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "14417:53:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 2096,
                          "nodeType": "IfStatement",
                          "src": "14413:255:6",
                          "trueBody": {
                            "id": 2095,
                            "nodeType": "Block",
                            "src": "14472:196:6",
                            "statements": [
                              {
                                "expression": {
                                  "id": 2081,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2076,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1072,
                                        "src": "14487:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2078,
                                      "indexExpression": {
                                        "id": 2077,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2015,
                                        "src": "14494:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14487:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2079,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "oraclePrice0CumulativeEnd",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1048,
                                    "src": "14487:42:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 2080,
                                    "name": "PriceCumulative",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2011,
                                    "src": "14532:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14487:60:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2082,
                                "nodeType": "ExpressionStatement",
                                "src": "14487:60:6"
                              },
                              {
                                "expression": {
                                  "id": 2089,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2083,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1072,
                                        "src": "14562:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2085,
                                      "indexExpression": {
                                        "id": 2084,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2015,
                                        "src": "14569:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "14562:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2086,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "memberName": "oracleTimestampEnd",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1052,
                                    "src": "14562:35:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "expression": {
                                      "id": 2087,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "14600:5:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 2088,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "14600:15:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "14562:53:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 2090,
                                "nodeType": "ExpressionStatement",
                                "src": "14562:53:6"
                              },
                              {
                                "eventCall": {
                                  "arguments": [
                                    {
                                      "id": 2092,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2015,
                                      "src": "14647:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 2091,
                                    "name": "FrameUpdate",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1067,
                                    "src": "14635:11:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                      "typeString": "function (uint256)"
                                    }
                                  },
                                  "id": 2093,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14635:21:6",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 2094,
                                "nodeType": "EmitStatement",
                                "src": "14630:26:6"
                              }
                            ]
                          }
                        },
                        "id": 2097,
                        "nodeType": "IfStatement",
                        "src": "14086:582:6",
                        "trueBody": {
                          "id": 2065,
                          "nodeType": "Block",
                          "src": "14198:200:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 2051,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2046,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1072,
                                      "src": "14213:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2048,
                                    "indexExpression": {
                                      "id": 2047,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2015,
                                      "src": "14220:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14213:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2049,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "oraclePrice0CumulativeStart",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1046,
                                  "src": "14213:44:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 2050,
                                  "name": "PriceCumulative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2011,
                                  "src": "14260:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14213:62:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2052,
                              "nodeType": "ExpressionStatement",
                              "src": "14213:62:6"
                            },
                            {
                              "expression": {
                                "id": 2059,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2053,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1072,
                                      "src": "14290:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2055,
                                    "indexExpression": {
                                      "id": 2054,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2015,
                                      "src": "14297:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "14290:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2056,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "oracleTimestampStart",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1050,
                                  "src": "14290:37:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 2057,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "14330:5:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 2058,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "14330:15:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "14290:55:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2060,
                              "nodeType": "ExpressionStatement",
                              "src": "14290:55:6"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 2062,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2015,
                                    "src": "14377:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2061,
                                  "name": "FrameUpdate",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1067,
                                  "src": "14365:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256)"
                                  }
                                },
                                "id": 2063,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14365:21:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2064,
                              "nodeType": "EmitStatement",
                              "src": "14360:26:6"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2009,
                    "nodeType": "StructuredDocumentation",
                    "src": "13611:234:6",
                    "text": "@notice Update trading pair's prices in the frame\n @param PriceCumulative Cumulative price\n @dev For developement purposes the new price is added as an input\n @dev Final version should use uniswap's oracles"
                  },
                  "functionSelector": "2a0efd44",
                  "id": 2099,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "updateFramePrices",
                  "nameLocation": "13860:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2012,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2011,
                        "mutability": "mutable",
                        "name": "PriceCumulative",
                        "nameLocation": "13883:15:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2099,
                        "src": "13878:20:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2010,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13878:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13877:22:6"
                  },
                  "returnParameters": {
                    "id": 2013,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13907:0:6"
                  },
                  "scope": 2367,
                  "src": "13851:824:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2273,
                    "nodeType": "Block",
                    "src": "14822:1386:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_SFrame_$1035",
                                "typeString": "enum Market.SFrame"
                              },
                              "id": 2115,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2109,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "14841:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2111,
                                  "indexExpression": {
                                    "id": 2110,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2102,
                                    "src": "14848:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "14841:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2112,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "state",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1040,
                                "src": "14841:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SFrame_$1035",
                                  "typeString": "enum Market.SFrame"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2113,
                                  "name": "SFrame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1035,
                                  "src": "14867:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_SFrame_$1035_$",
                                    "typeString": "type(enum Market.SFrame)"
                                  }
                                },
                                "id": 2114,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "OPENED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1032,
                                "src": "14867:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SFrame_$1035",
                                  "typeString": "enum Market.SFrame"
                                }
                              },
                              "src": "14841:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4652414d45204e4f54204f50454e4544",
                              "id": 2116,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14882:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6",
                                "typeString": "literal_string \"FRAME NOT OPENED\""
                              },
                              "value": "FRAME NOT OPENED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3730779a45ecdcb5bdad245b02af5bf8ad0d60a2fd6d5e11140c3bdb92dcaaf6",
                                "typeString": "literal_string \"FRAME NOT OPENED\""
                              }
                            ],
                            "id": 2108,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14833:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2117,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14833:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2118,
                        "nodeType": "ExpressionStatement",
                        "src": "14833:68:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2122,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 2120,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2102,
                                      "src": "14922:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "id": 2121,
                                      "name": "period",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1009,
                                      "src": "14933:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "14922:17:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2123,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "14921:19:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2124,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "14944:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 2125,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "14944:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "14921:38:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4652414d4520454e442054494d45204e4f542052454143484544",
                              "id": 2127,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14961:28:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                                "typeString": "literal_string \"FRAME END TIME NOT REACHED\""
                              },
                              "value": "FRAME END TIME NOT REACHED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_18e7d49e3dfbe286fed6ccc40fa260b7a01bab8d5095ab8423f2acc308d5cd4c",
                                "typeString": "literal_string \"FRAME END TIME NOT REACHED\""
                              }
                            ],
                            "id": 2119,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14912:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14912:78:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2129,
                        "nodeType": "ExpressionStatement",
                        "src": "14912:78:6"
                      },
                      {
                        "expression": {
                          "id": 2136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2130,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "15001:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2132,
                              "indexExpression": {
                                "id": 2131,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2102,
                                "src": "15008:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15001:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2133,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1040,
                            "src": "15001:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$1035",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2134,
                              "name": "SFrame",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1035,
                              "src": "15026:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SFrame_$1035_$",
                                "typeString": "type(enum Market.SFrame)"
                              }
                            },
                            "id": 2135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "CLOSED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1033,
                            "src": "15026:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SFrame_$1035",
                              "typeString": "enum Market.SFrame"
                            }
                          },
                          "src": "15001:38:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SFrame_$1035",
                            "typeString": "enum Market.SFrame"
                          }
                        },
                        "id": 2137,
                        "nodeType": "ExpressionStatement",
                        "src": "15001:38:6"
                      },
                      {
                        "assignments": [
                          2139
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2139,
                            "mutability": "mutable",
                            "name": "priceDiff",
                            "nameLocation": "15084:9:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2273,
                            "src": "15079:14:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2138,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15079:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2149,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2140,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "15096:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2142,
                              "indexExpression": {
                                "id": 2141,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2102,
                                "src": "15103:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15096:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2143,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oraclePrice0CumulativeEnd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1048,
                            "src": "15096:42:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2144,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "15141:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2146,
                              "indexExpression": {
                                "id": 2145,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2102,
                                "src": "15148:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15141:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2147,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oraclePrice0CumulativeStart",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1046,
                            "src": "15141:44:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15096:89:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15079:106:6"
                      },
                      {
                        "assignments": [
                          2151
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2151,
                            "mutability": "mutable",
                            "name": "timeDiff",
                            "nameLocation": "15201:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2273,
                            "src": "15196:13:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2150,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15196:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2161,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2152,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "15212:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2154,
                              "indexExpression": {
                                "id": 2153,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2102,
                                "src": "15219:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15212:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2155,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleTimestampEnd",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1052,
                            "src": "15212:35:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 2156,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "15250:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2158,
                              "indexExpression": {
                                "id": 2157,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2102,
                                "src": "15257:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15250:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2159,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "oracleTimestampStart",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1050,
                            "src": "15250:37:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15212:75:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15196:91:6"
                      },
                      {
                        "expression": {
                          "id": 2187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2162,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "15368:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2164,
                              "indexExpression": {
                                "id": 2163,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2102,
                                "src": "15375:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15368:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2165,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "priceAverage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1042,
                            "src": "15368:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "components": [
                                    {
                                      "components": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "id": 2174,
                                                      "name": "priceDiff",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2139,
                                                      "src": "15451:9:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "id": 2173,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "15443:7:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_uint224_$",
                                                      "typeString": "type(uint224)"
                                                    },
                                                    "typeName": {
                                                      "id": 2172,
                                                      "name": "uint224",
                                                      "nodeType": "ElementaryTypeName",
                                                      "src": "15443:7:6",
                                                      "typeDescriptions": {}
                                                    }
                                                  },
                                                  "id": 2175,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "15443:18:6",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint224",
                                                    "typeString": "uint224"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_uint224",
                                                    "typeString": "uint224"
                                                  }
                                                ],
                                                "expression": {
                                                  "id": 2170,
                                                  "name": "FixedPoint",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 575,
                                                  "src": "15422:10:6",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_contract$_FixedPoint_$575_$",
                                                    "typeString": "type(library FixedPoint)"
                                                  }
                                                },
                                                "id": 2171,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "uq112x112",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 394,
                                                "src": "15422:20:6",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_struct$_uq112x112_$394_storage_ptr_$",
                                                  "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                                                }
                                              },
                                              "id": 2176,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "structConstructorCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "15422:40:6",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                                                "typeString": "struct FixedPoint.uq112x112 memory"
                                              }
                                            },
                                            {
                                              "components": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "id": 2179,
                                                      "name": "timeDiff",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 2151,
                                                      "src": "15473:8:6",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "id": 2178,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "15465:7:6",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_type$_t_uint112_$",
                                                      "typeString": "type(uint112)"
                                                    },
                                                    "typeName": {
                                                      "id": 2177,
                                                      "name": "uint112",
                                                      "nodeType": "ElementaryTypeName",
                                                      "src": "15465:7:6",
                                                      "typeDescriptions": {}
                                                    }
                                                  },
                                                  "id": 2180,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "typeConversion",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "15465:17:6",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_uint112",
                                                    "typeString": "uint112"
                                                  }
                                                }
                                              ],
                                              "id": 2181,
                                              "isConstant": false,
                                              "isInlineArray": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "TupleExpression",
                                              "src": "15464:19:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                                                "typeString": "struct FixedPoint.uq112x112 memory"
                                              },
                                              {
                                                "typeIdentifier": "t_uint112",
                                                "typeString": "uint112"
                                              }
                                            ],
                                            "expression": {
                                              "id": 2168,
                                              "name": "FixedPoint",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 575,
                                              "src": "15407:10:6",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_contract$_FixedPoint_$575_$",
                                                "typeString": "type(library FixedPoint)"
                                              }
                                            },
                                            "id": 2169,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "div",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 465,
                                            "src": "15407:14:6",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_internal_pure$_t_struct$_uq112x112_$394_memory_ptr_$_t_uint112_$returns$_t_struct$_uq112x112_$394_memory_ptr_$",
                                              "typeString": "function (struct FixedPoint.uq112x112 memory,uint112) pure returns (struct FixedPoint.uq112x112 memory)"
                                            }
                                          },
                                          "id": 2182,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "15407:77:6",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                                            "typeString": "struct FixedPoint.uq112x112 memory"
                                          }
                                        }
                                      ],
                                      "id": 2183,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "15406:79:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                                        "typeString": "struct FixedPoint.uq112x112 memory"
                                      }
                                    }
                                  ],
                                  "id": 2184,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "15405:81:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_uq112x112_$394_memory_ptr",
                                    "typeString": "struct FixedPoint.uq112x112 memory"
                                  }
                                },
                                "id": 2185,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "_x",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 393,
                                "src": "15405:84:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                }
                              ],
                              "id": 2167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15400:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 2166,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "15400:4:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2186,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15400:90:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15368:122:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2188,
                        "nodeType": "ExpressionStatement",
                        "src": "15368:122:6"
                      },
                      {
                        "expression": {
                          "id": 2213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2189,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "15535:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2191,
                              "indexExpression": {
                                "id": 2190,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2102,
                                "src": "15542:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15535:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2192,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "priceAverage",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1042,
                            "src": "15535:29:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2212,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2193,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1072,
                                          "src": "15568:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2195,
                                        "indexExpression": {
                                          "id": 2194,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2102,
                                          "src": "15575:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15568:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2196,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "priceAverage",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1042,
                                      "src": "15568:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">>",
                                    "rightExpression": {
                                      "hexValue": "313132",
                                      "id": 2197,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15601:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_112_by_1",
                                        "typeString": "int_const 112"
                                      },
                                      "value": "112"
                                    },
                                    "src": "15568:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2199,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "15567:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 2200,
                                "name": "scalar",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1030,
                                "src": "15608:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15567:47:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 2207,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "baseExpression": {
                                          "id": 2202,
                                          "name": "frames",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1072,
                                          "src": "15618:6:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                            "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                          }
                                        },
                                        "id": 2204,
                                        "indexExpression": {
                                          "id": 2203,
                                          "name": "frameKey",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2102,
                                          "src": "15625:8:6",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "15618:16:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                          "typeString": "struct Market.Frame storage ref"
                                        }
                                      },
                                      "id": 2205,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "priceAverage",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1042,
                                      "src": "15618:29:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "<<",
                                    "rightExpression": {
                                      "hexValue": "313132",
                                      "id": 2206,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "15651:3:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_112_by_1",
                                        "typeString": "int_const 112"
                                      },
                                      "value": "112"
                                    },
                                    "src": "15618:36:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 2208,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "15617:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "components": [
                                  {
                                    "hexValue": "31653439",
                                    "id": 2209,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15659:4:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000_by_1",
                                      "typeString": "int_const 1000...(42 digits omitted)...0000"
                                    },
                                    "value": "1e49"
                                  }
                                ],
                                "id": 2210,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "15658:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000_by_1",
                                  "typeString": "int_const 1000...(42 digits omitted)...0000"
                                }
                              },
                              "src": "15617:47:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15567:97:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15535:129:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2214,
                        "nodeType": "ExpressionStatement",
                        "src": "15535:129:6"
                      },
                      {
                        "assignments": [
                          2216
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2216,
                            "mutability": "mutable",
                            "name": "marketOwnerFees",
                            "nameLocation": "15730:15:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2273,
                            "src": "15725:20:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2215,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15725:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2226,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2223,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2217,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1072,
                                  "src": "15748:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2219,
                                "indexExpression": {
                                  "id": 2218,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2102,
                                  "src": "15755:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15748:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2220,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1044,
                              "src": "15748:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 2221,
                                  "name": "feeMarket",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1018,
                                  "src": "15779:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2222,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15778:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15748:41:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030303030",
                            "id": 2224,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15792:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          "src": "15748:50:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15725:73:6"
                      },
                      {
                        "assignments": [
                          2228
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2228,
                            "mutability": "mutable",
                            "name": "protocolOwnerFees",
                            "nameLocation": "15814:17:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2273,
                            "src": "15809:22:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2227,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "15809:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2238,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2235,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2229,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1072,
                                  "src": "15834:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2231,
                                "indexExpression": {
                                  "id": 2230,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2102,
                                  "src": "15841:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "15834:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2232,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1044,
                              "src": "15834:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "id": 2233,
                                  "name": "feeProtocol",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1023,
                                  "src": "15865:11:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2234,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15864:13:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15834:43:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030303030",
                            "id": 2236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15880:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100000_by_1",
                              "typeString": "int_const 100000"
                            },
                            "value": "100000"
                          },
                          "src": "15834:52:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15809:77:6"
                      },
                      {
                        "expression": {
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2239,
                                "name": "frames",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1072,
                                "src": "15897:6:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                }
                              },
                              "id": 2241,
                              "indexExpression": {
                                "id": 2240,
                                "name": "frameKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2102,
                                "src": "15904:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "15897:16:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                "typeString": "struct Market.Frame storage ref"
                              }
                            },
                            "id": 2242,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "rewardFund",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1044,
                            "src": "15897:27:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 2248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2243,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "15927:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2245,
                                  "indexExpression": {
                                    "id": 2244,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2102,
                                    "src": "15934:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "15927:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2246,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "rewardFund",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1044,
                                "src": "15927:27:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 2247,
                                "name": "marketOwnerFees",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2216,
                                "src": "15957:15:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15927:45:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 2249,
                              "name": "protocolOwnerFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2228,
                              "src": "15975:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "15927:65:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "15897:95:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2252,
                        "nodeType": "ExpressionStatement",
                        "src": "15897:95:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2256,
                              "name": "ownerMarket",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1007,
                              "src": "16063:11:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 2257,
                              "name": "marketOwnerFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2216,
                              "src": "16076:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2253,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "16038:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "16038:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16038:54:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2259,
                        "nodeType": "ExpressionStatement",
                        "src": "16038:54:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2263,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1002,
                                  "src": "16128:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MarketFactory_$2475",
                                    "typeString": "contract MarketFactory"
                                  }
                                },
                                "id": 2264,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2386,
                                "src": "16128:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 2265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16128:15:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2266,
                              "name": "protocolOwnerFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2228,
                              "src": "16145:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2260,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "16103:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2262,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "16103:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16103:60:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2268,
                        "nodeType": "ExpressionStatement",
                        "src": "16103:60:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2270,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2102,
                              "src": "16191:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2269,
                            "name": "FrameUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1067,
                            "src": "16179:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 2271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16179:21:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2272,
                        "nodeType": "EmitStatement",
                        "src": "16174:26:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2100,
                    "nodeType": "StructuredDocumentation",
                    "src": "14683:66:6",
                    "text": "@notice Close frame\n @param frameKey Frame's timestamp"
                  },
                  "functionSelector": "fc950702",
                  "id": 2274,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 2105,
                          "name": "frameKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2102,
                          "src": "14812:8:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 2106,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2104,
                        "name": "hasValidPrices",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1263,
                        "src": "14797:14:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14797:24:6"
                    }
                  ],
                  "name": "closeFrame",
                  "nameLocation": "14764:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2103,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2102,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "14780:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2274,
                        "src": "14775:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2101,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "14775:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14774:15:6"
                  },
                  "returnParameters": {
                    "id": 2107,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14822:0:6"
                  },
                  "scope": 2367,
                  "src": "14755:1453:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2347,
                    "nodeType": "Block",
                    "src": "16412:691:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_SFrame_$1035",
                                "typeString": "enum Market.SFrame"
                              },
                              "id": 2287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2281,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "16469:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2283,
                                  "indexExpression": {
                                    "id": 2282,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2277,
                                    "src": "16476:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16469:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2284,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "state",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1040,
                                "src": "16469:22:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SFrame_$1035",
                                  "typeString": "enum Market.SFrame"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 2285,
                                  "name": "SFrame",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1035,
                                  "src": "16495:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_SFrame_$1035_$",
                                    "typeString": "type(enum Market.SFrame)"
                                  }
                                },
                                "id": 2286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "CLOSED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1033,
                                "src": "16495:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SFrame_$1035",
                                  "typeString": "enum Market.SFrame"
                                }
                              },
                              "src": "16469:39:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4652414d45204e4f5420434c4f534544",
                              "id": 2288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16510:18:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                                "typeString": "literal_string \"FRAME NOT CLOSED\""
                              },
                              "value": "FRAME NOT CLOSED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a594c8077253e3520d37b0c0330d9b30e5045a3fa33fbbfbd36626cce7cc8c8f",
                                "typeString": "literal_string \"FRAME NOT CLOSED\""
                              }
                            ],
                            "id": 2280,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16461:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16461:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2290,
                        "nodeType": "ExpressionStatement",
                        "src": "16461:68:6"
                      },
                      {
                        "assignments": [
                          2292
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2292,
                            "mutability": "mutable",
                            "name": "lotKeyWin",
                            "nameLocation": "16590:9:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 2347,
                            "src": "16585:14:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2291,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "16585:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2300,
                        "initialValue": {
                          "components": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2294,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1072,
                                      "src": "16618:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2296,
                                    "indexExpression": {
                                      "id": 2295,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2277,
                                      "src": "16625:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16618:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2297,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "priceAverage",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1042,
                                  "src": "16618:29:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2293,
                                "name": "clcLotInterval",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1316,
                                "src": "16603:14:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                  "typeString": "function (uint256) view returns (uint256)"
                                }
                              },
                              "id": 2298,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16603:45:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 2299,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "16602:47:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "16585:64:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_SLot_$1079",
                                "typeString": "enum Market.SLot"
                              },
                              "id": 2311,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 2302,
                                        "name": "frames",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1072,
                                        "src": "16715:6:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                          "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                        }
                                      },
                                      "id": 2304,
                                      "indexExpression": {
                                        "id": 2303,
                                        "name": "frameKey",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2277,
                                        "src": "16722:8:6",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "16715:16:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                        "typeString": "struct Market.Frame storage ref"
                                      }
                                    },
                                    "id": 2305,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "lots",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1059,
                                    "src": "16715:21:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                    }
                                  },
                                  "id": 2307,
                                  "indexExpression": {
                                    "id": 2306,
                                    "name": "lotKeyWin",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2292,
                                    "src": "16737:9:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16715:32:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                    "typeString": "struct Market.Lot storage ref"
                                  }
                                },
                                "id": 2308,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "state",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1088,
                                "src": "16715:38:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SLot_$1079",
                                  "typeString": "enum Market.SLot"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "expression": {
                                  "id": 2309,
                                  "name": "SLot",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1079,
                                  "src": "16757:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_SLot_$1079_$",
                                    "typeString": "type(enum Market.SLot)"
                                  }
                                },
                                "id": 2310,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "SETTLED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1078,
                                "src": "16757:12:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SLot_$1079",
                                  "typeString": "enum Market.SLot"
                                }
                              },
                              "src": "16715:54:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c4f5420414c524541445920534554544c4544",
                              "id": 2312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16771:21:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                                "typeString": "literal_string \"LOT ALREADY SETTLED\""
                              },
                              "value": "LOT ALREADY SETTLED"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_688dc90dcd93dc7a094f045d02b8b47d19edc5c1d7104f7e1e6135e5a60c2494",
                                "typeString": "literal_string \"LOT ALREADY SETTLED\""
                              }
                            ],
                            "id": 2301,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16707:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16707:86:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2314,
                        "nodeType": "ExpressionStatement",
                        "src": "16707:86:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 2318,
                                      "name": "frames",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1072,
                                      "src": "16873:6:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                        "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                      }
                                    },
                                    "id": 2320,
                                    "indexExpression": {
                                      "id": 2319,
                                      "name": "frameKey",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2277,
                                      "src": "16880:8:6",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "16873:16:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                      "typeString": "struct Market.Frame storage ref"
                                    }
                                  },
                                  "id": 2321,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "lots",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1059,
                                  "src": "16873:21:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                  }
                                },
                                "id": 2323,
                                "indexExpression": {
                                  "id": 2322,
                                  "name": "lotKeyWin",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2292,
                                  "src": "16895:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16873:32:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                  "typeString": "struct Market.Lot storage ref"
                                }
                              },
                              "id": 2324,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lotOwner",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1083,
                              "src": "16873:41:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 2325,
                                  "name": "frames",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1072,
                                  "src": "16916:6:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                    "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                  }
                                },
                                "id": 2327,
                                "indexExpression": {
                                  "id": 2326,
                                  "name": "frameKey",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2277,
                                  "src": "16923:8:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16916:16:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                  "typeString": "struct Market.Frame storage ref"
                                }
                              },
                              "id": 2328,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardFund",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1044,
                              "src": "16916:27:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2315,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "16848:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "16848:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16848:96:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2330,
                        "nodeType": "ExpressionStatement",
                        "src": "16848:96:6"
                      },
                      {
                        "expression": {
                          "id": 2340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 2331,
                                    "name": "frames",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1072,
                                    "src": "16994:6:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Frame_$1063_storage_$",
                                      "typeString": "mapping(uint256 => struct Market.Frame storage ref)"
                                    }
                                  },
                                  "id": 2333,
                                  "indexExpression": {
                                    "id": 2332,
                                    "name": "frameKey",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2277,
                                    "src": "17001:8:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "16994:16:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Frame_$1063_storage",
                                    "typeString": "struct Market.Frame storage ref"
                                  }
                                },
                                "id": 2334,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "lots",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1059,
                                "src": "16994:21:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Lot_$1089_storage_$",
                                  "typeString": "mapping(uint256 => struct Market.Lot storage ref)"
                                }
                              },
                              "id": 2336,
                              "indexExpression": {
                                "id": 2335,
                                "name": "lotKeyWin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2292,
                                "src": "17016:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16994:32:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Lot_$1089_storage",
                                "typeString": "struct Market.Lot storage ref"
                              }
                            },
                            "id": 2337,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1088,
                            "src": "16994:38:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$1079",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2338,
                              "name": "SLot",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1079,
                              "src": "17035:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SLot_$1079_$",
                                "typeString": "type(enum Market.SLot)"
                              }
                            },
                            "id": 2339,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "SETTLED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1078,
                            "src": "17035:12:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SLot_$1079",
                              "typeString": "enum Market.SLot"
                            }
                          },
                          "src": "16994:53:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_SLot_$1079",
                            "typeString": "enum Market.SLot"
                          }
                        },
                        "id": 2341,
                        "nodeType": "ExpressionStatement",
                        "src": "16994:53:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 2343,
                              "name": "frameKey",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2277,
                              "src": "17075:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2344,
                              "name": "lotKeyWin",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2292,
                              "src": "17085:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2342,
                            "name": "LotUpdate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1095,
                            "src": "17065:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 2345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17065:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2346,
                        "nodeType": "EmitStatement",
                        "src": "17060:35:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2275,
                    "nodeType": "StructuredDocumentation",
                    "src": "16216:149:6",
                    "text": "@notice Settle lot for a owner. Owner's share of the reward amount get's transfered to owner's account\n @param frameKey Frame's timestamp"
                  },
                  "functionSelector": "4d3ee2dc",
                  "id": 2348,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "settleLot",
                  "nameLocation": "16380:9:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2278,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2277,
                        "mutability": "mutable",
                        "name": "frameKey",
                        "nameLocation": "16395:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2348,
                        "src": "16390:13:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2276,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "16390:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "16389:15:6"
                  },
                  "returnParameters": {
                    "id": 2279,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "16412:0:6"
                  },
                  "scope": 2367,
                  "src": "16371:732:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2365,
                    "nodeType": "Block",
                    "src": "17374:70:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "id": 2359,
                                  "name": "factory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1002,
                                  "src": "17412:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MarketFactory_$2475",
                                    "typeString": "contract MarketFactory"
                                  }
                                },
                                "id": 2360,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owner",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2386,
                                "src": "17412:13:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                  "typeString": "function () view external returns (address)"
                                }
                              },
                              "id": 2361,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17412:15:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2362,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2351,
                              "src": "17429:6:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2356,
                              "name": "accountingToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1005,
                              "src": "17387:15:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 2358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 26,
                            "src": "17387:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 2363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17387:49:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2364,
                        "nodeType": "ExpressionStatement",
                        "src": "17387:49:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2349,
                    "nodeType": "StructuredDocumentation",
                    "src": "17111:202:6",
                    "text": "TODO: edit the frame fund value if that money is taken \n @notice Withdraw any amount out of the contract. Only to be used in extreme cases!\n @param amount Amount you want to withdraw"
                  },
                  "functionSelector": "6f7cb60b",
                  "id": 2366,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 2354,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 2353,
                        "name": "isFactoryOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1207,
                        "src": "17359:14:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "17359:14:6"
                    }
                  ],
                  "name": "emptyFunds",
                  "nameLocation": "17328:10:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2352,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2351,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "17344:6:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 2366,
                        "src": "17339:11:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2350,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "17339:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "17338:13:6"
                  },
                  "returnParameters": {
                    "id": 2355,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "17374:0:6"
                  },
                  "scope": 2367,
                  "src": "17319:125:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2368,
              "src": "576:16875:6",
              "usedErrors": []
            }
          ],
          "src": "33:17418:6"
        },
        "id": 6
      },
      "contracts/MarketFactory.sol": {
        "ast": {
          "absolutePath": "contracts/MarketFactory.sol",
          "exportedSymbols": {
            "IERC20": [
              77
            ],
            "IUniswapV2Factory": [
              638
            ],
            "IUniswapV2Pair": [
              880
            ],
            "Market": [
              2367
            ],
            "MarketFactory": [
              2475
            ]
          },
          "id": 2476,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2369,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:7"
            },
            {
              "absolutePath": "contracts/Market.sol",
              "file": "./Market.sol",
              "id": 2370,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2476,
              "sourceUnit": 2368,
              "src": "60:22:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Factory.sol",
              "id": 2371,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2476,
              "sourceUnit": 639,
              "src": "84:69:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "file": "@uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol",
              "id": 2372,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2476,
              "sourceUnit": 881,
              "src": "155:66:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 2373,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2476,
              "sourceUnit": 78,
              "src": "223:56:7",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [
                2367
              ],
              "contractKind": "contract",
              "fullyImplemented": true,
              "id": 2475,
              "linearizedBaseContracts": [
                2475
              ],
              "name": "MarketFactory",
              "nameLocation": "292:13:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "functionSelector": "8bdb2afa",
                  "id": 2376,
                  "mutability": "mutable",
                  "name": "uniswapFactory",
                  "nameLocation": "340:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2475,
                  "src": "315:39:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUniswapV2Factory_$638",
                    "typeString": "contract IUniswapV2Factory"
                  },
                  "typeName": {
                    "id": 2375,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2374,
                      "name": "IUniswapV2Factory",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 638,
                      "src": "315:17:7"
                    },
                    "referencedDeclaration": 638,
                    "src": "315:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUniswapV2Factory_$638",
                      "typeString": "contract IUniswapV2Factory"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8e8f294b",
                  "id": 2381,
                  "mutability": "mutable",
                  "name": "markets",
                  "nameLocation": "395:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2475,
                  "src": "361:41:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Market_$2367_$",
                    "typeString": "mapping(address => contract Market)"
                  },
                  "typeName": {
                    "id": 2380,
                    "keyType": {
                      "id": 2377,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "369:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "361:26:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Market_$2367_$",
                      "typeString": "mapping(address => contract Market)"
                    },
                    "valueType": {
                      "id": 2379,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 2378,
                        "name": "Market",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2367,
                        "src": "380:6:7"
                      },
                      "referencedDeclaration": 2367,
                      "src": "380:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Market_$2367",
                        "typeString": "contract Market"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "46a81c00",
                  "id": 2384,
                  "mutability": "mutable",
                  "name": "marketsKeys",
                  "nameLocation": "426:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2475,
                  "src": "409:28:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2382,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "409:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2383,
                    "nodeType": "ArrayTypeName",
                    "src": "409:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "8da5cb5b",
                  "id": 2386,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "459:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 2475,
                  "src": "444:20:7",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2385,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "444:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2402,
                    "nodeType": "Block",
                    "src": "510:99:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 2394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2391,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2386,
                            "src": "521:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2392,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "529:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "529:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "521:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2395,
                        "nodeType": "ExpressionStatement",
                        "src": "521:18:7"
                      },
                      {
                        "expression": {
                          "id": 2400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2396,
                            "name": "uniswapFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2376,
                            "src": "550:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Factory_$638",
                              "typeString": "contract IUniswapV2Factory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2398,
                                "name": "_uniswapFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2388,
                                "src": "585:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2397,
                              "name": "IUniswapV2Factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 638,
                              "src": "567:17:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$638_$",
                                "typeString": "type(contract IUniswapV2Factory)"
                              }
                            },
                            "id": 2399,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "567:34:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Factory_$638",
                              "typeString": "contract IUniswapV2Factory"
                            }
                          },
                          "src": "550:51:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Factory_$638",
                            "typeString": "contract IUniswapV2Factory"
                          }
                        },
                        "id": 2401,
                        "nodeType": "ExpressionStatement",
                        "src": "550:51:7"
                      }
                    ]
                  },
                  "id": 2403,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2389,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2388,
                        "mutability": "mutable",
                        "name": "_uniswapFactory",
                        "nameLocation": "493:15:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2403,
                        "src": "485:23:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2387,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "485:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "484:25:7"
                  },
                  "returnParameters": {
                    "id": 2390,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "510:0:7"
                  },
                  "scope": 2475,
                  "src": "473:136:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 2464,
                    "nodeType": "Block",
                    "src": "786:253:7",
                    "statements": [
                      {
                        "assignments": [
                          2426
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2426,
                            "mutability": "mutable",
                            "name": "market",
                            "nameLocation": "804:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 2464,
                            "src": "797:13:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$2367",
                              "typeString": "contract Market"
                            },
                            "typeName": {
                              "id": 2425,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2424,
                                "name": "Market",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2367,
                                "src": "797:6:7"
                              },
                              "referencedDeclaration": 2367,
                              "src": "797:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$2367",
                                "typeString": "contract Market"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2445,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2430,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "824:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MarketFactory_$2475",
                                "typeString": "contract MarketFactory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2432,
                                  "name": "_token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2405,
                                  "src": "837:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2431,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 77,
                                "src": "830:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$77_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 2433,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "830:14:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 2435,
                                  "name": "_uniswapPair",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2407,
                                  "src": "861:12:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2434,
                                "name": "IUniswapV2Pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 880,
                                "src": "846:14:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$880_$",
                                  "typeString": "type(contract IUniswapV2Pair)"
                                }
                              },
                              "id": 2436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "846:28:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            {
                              "id": 2437,
                              "name": "_period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2409,
                              "src": "876:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2438,
                              "name": "_initTimestamp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2411,
                              "src": "885:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2439,
                              "name": "_tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2413,
                              "src": "901:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2440,
                              "name": "_fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2415,
                              "src": "907:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2441,
                              "name": "_dPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2417,
                              "src": "913:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2442,
                              "name": "_tReporting",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2419,
                              "src": "922:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 2443,
                              "name": "_minTax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2421,
                              "src": "935:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MarketFactory_$2475",
                                "typeString": "contract MarketFactory"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$77",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$880",
                                "typeString": "contract IUniswapV2Pair"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "813:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_MarketFactory_$2475_$_t_contract$_IERC20_$77_$_t_contract$_IUniswapV2Pair_$880_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_contract$_Market_$2367_$",
                              "typeString": "function (contract MarketFactory,contract IERC20,contract IUniswapV2Pair,uint256,uint256,uint256,uint256,uint256,uint256,uint256) returns (contract Market)"
                            },
                            "typeName": {
                              "id": 2428,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2427,
                                "name": "Market",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2367,
                                "src": "817:6:7"
                              },
                              "referencedDeclaration": 2367,
                              "src": "817:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Market_$2367",
                                "typeString": "contract Market"
                              }
                            }
                          },
                          "id": 2444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "813:130:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Market_$2367",
                            "typeString": "contract Market"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "797:146:7"
                      },
                      {
                        "expression": {
                          "id": 2453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2446,
                              "name": "markets",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2381,
                              "src": "954:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_Market_$2367_$",
                                "typeString": "mapping(address => contract Market)"
                              }
                            },
                            "id": 2451,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 2449,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2426,
                                  "src": "970:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$2367",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$2367",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 2448,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "962:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2447,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "962:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "962:15:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "954:24:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$2367",
                              "typeString": "contract Market"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2452,
                            "name": "market",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2426,
                            "src": "981:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Market_$2367",
                              "typeString": "contract Market"
                            }
                          },
                          "src": "954:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Market_$2367",
                            "typeString": "contract Market"
                          }
                        },
                        "id": 2454,
                        "nodeType": "ExpressionStatement",
                        "src": "954:33:7"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2460,
                                  "name": "market",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2426,
                                  "src": "1023:6:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Market_$2367",
                                    "typeString": "contract Market"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Market_$2367",
                                    "typeString": "contract Market"
                                  }
                                ],
                                "id": 2459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1015:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2458,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1015:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1015:15:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2455,
                              "name": "marketsKeys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2384,
                              "src": "998:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 2457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "998:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 2462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "998:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2463,
                        "nodeType": "ExpressionStatement",
                        "src": "998:33:7"
                      }
                    ]
                  },
                  "functionSelector": "f4541da5",
                  "id": 2465,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "addMarket",
                  "nameLocation": "626:9:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2422,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2405,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "644:6:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2465,
                        "src": "636:14:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2404,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "636:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2407,
                        "mutability": "mutable",
                        "name": "_uniswapPair",
                        "nameLocation": "660:12:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2465,
                        "src": "652:20:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2406,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "652:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2409,
                        "mutability": "mutable",
                        "name": "_period",
                        "nameLocation": "679:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2465,
                        "src": "674:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2408,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "674:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2411,
                        "mutability": "mutable",
                        "name": "_initTimestamp",
                        "nameLocation": "693:14:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2465,
                        "src": "688:19:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2410,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "688:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2413,
                        "mutability": "mutable",
                        "name": "_tax",
                        "nameLocation": "714:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2465,
                        "src": "709:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2412,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2415,
                        "mutability": "mutable",
                        "name": "_fee",
                        "nameLocation": "725:4:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2465,
                        "src": "720:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2414,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "720:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2417,
                        "mutability": "mutable",
                        "name": "_dPrice",
                        "nameLocation": "736:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2465,
                        "src": "731:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2416,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "731:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2419,
                        "mutability": "mutable",
                        "name": "_tReporting",
                        "nameLocation": "750:11:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2465,
                        "src": "745:16:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2418,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "745:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2421,
                        "mutability": "mutable",
                        "name": "_minTax",
                        "nameLocation": "768:7:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2465,
                        "src": "763:12:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2420,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "763:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "635:141:7"
                  },
                  "returnParameters": {
                    "id": 2423,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "786:0:7"
                  },
                  "scope": 2475,
                  "src": "617:422:7",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 2473,
                    "nodeType": "Block",
                    "src": "1100:44:7",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2470,
                            "name": "marketsKeys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2384,
                            "src": "1118:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 2471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1118:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 2469,
                        "id": 2472,
                        "nodeType": "Return",
                        "src": "1111:25:7"
                      }
                    ]
                  },
                  "functionSelector": "27fa35c3",
                  "id": 2474,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getMarketsCount",
                  "nameLocation": "1056:15:7",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2466,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1071:2:7"
                  },
                  "returnParameters": {
                    "id": 2469,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2468,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2474,
                        "src": "1095:4:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2467,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1095:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1094:6:7"
                  },
                  "scope": 2475,
                  "src": "1047:97:7",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 2476,
              "src": "283:864:7",
              "usedErrors": []
            }
          ],
          "src": "33:1116:7"
        },
        "id": 7
      }
    }
  }
}
